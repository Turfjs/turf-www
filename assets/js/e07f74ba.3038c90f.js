(self.webpackChunkturf_www=self.webpackChunkturf_www||[]).push([[74881],{59442:(e,r,s)=>{"use strict";s.r(r),s.d(r,{Map0:()=>u,assets:()=>h,contentTitle:()=>c,default:()=>j,frontMatter:()=>a,metadata:()=>o,toc:()=>x});var t=s(74848),i=s(28453),n=s(69748),d=s(36145),l=s(78478);const a={title:"squareGrid"},c=void 0,o={id:"api/squareGrid",title:"squareGrid",description:"Description",source:"@site/docs/api/squareGrid.mdx",sourceDirName:"api",slug:"/api/squareGrid",permalink:"/docs/next/api/squareGrid",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/squareGrid.mdx",tags:[],version:"current",frontMatter:{title:"squareGrid"},sidebar:"apiSidebar",previous:{title:"pointGrid",permalink:"/docs/next/api/pointGrid"},next:{title:"triangleGrid",permalink:"/docs/next/api/triangleGrid"}},h={},x=[{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3},{value:"Installation",id:"installation",level:3}];function u(){var e={squareGrid:n.c([-95,30,-85,40],50,{units:"miles"})};return(0,t.jsx)(d.A,{addToMap:e})}function p(e){const r={a:"a",code:"code",em:"em",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h3,{id:"description",children:"Description"}),"\n",(0,t.jsx)(r.p,{children:"Creates a square grid from a bounding box."}),"\n",(0,t.jsx)(r.h3,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Name"}),(0,t.jsx)(r.th,{children:"Type"}),(0,t.jsx)(r.th,{children:"Description"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"bbox"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"Array<number>"})}),(0,t.jsx)(r.td,{children:"extent in [minX, minY, maxX, maxY] order"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"cellSide"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"number"})}),(0,t.jsx)(r.td,{children:"of each cell, in units"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsxs)(r.td,{children:["options",(0,t.jsx)("i",{children:"?"})]}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"Object"})}),(0,t.jsxs)(r.td,{children:["Optional parameters ",(0,t.jsx)(r.em,{children:"(default {})"})]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsxs)(r.td,{children:["options.units",(0,t.jsx)("i",{children:"?"})]}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"string"})}),(0,t.jsxs)(r.td,{children:["used in calculating cellSide, can be degrees, radians, miles, or kilometers ",(0,t.jsx)(r.em,{children:"(default 'kilometers')"})]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsxs)(r.td,{children:["options.mask",(0,t.jsx)("i",{children:"?"})]}),(0,t.jsx)(r.td,{children:(0,t.jsxs)(r.strong,{children:[(0,t.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.2",children:"Feature"}),"<",(0,t.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.6",children:"Polygon"})," | ",(0,t.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.7",children:"MultiPolygon"}),">"]})}),(0,t.jsx)(r.td,{children:"if passed a Polygon or MultiPolygon, the grid Points will be created only inside it"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsxs)(r.td,{children:["options.properties",(0,t.jsx)("i",{children:"?"})]}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"Object"})}),(0,t.jsxs)(r.td,{children:["passed to each point of the grid ",(0,t.jsx)(r.em,{children:"(default {})"})]})]})]})]}),"\n",(0,t.jsx)(r.h3,{id:"returns",children:"Returns"}),"\n",(0,t.jsx)("ul",{children:(0,t.jsxs)(r.p,{children:[(0,t.jsxs)(r.strong,{children:[(0,t.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.3",children:"FeatureCollection"}),"<",(0,t.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.6",children:"Polygon"}),">"]})," grid a grid of polygons"]})}),"\n",(0,t.jsx)(r.h3,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-javascript",children:'var bbox = [-95, 30, -85, 40];\nvar cellSide = 50;\nvar options = { units: "miles" };\n\nvar squareGrid = turf.squareGrid(bbox, cellSide, options);\n'})}),"\n","\n",(0,t.jsx)(l.A,{children:()=>(0,t.jsx)(u,{})}),"\n",(0,t.jsx)(r.h3,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-javascript",children:'$ npm install @turf/square-grid\n\nimport { squareGrid } from "@turf/square-grid";\nconst result = squareGrid(...);\n'})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-javascript",children:'$ npm install @turf/turf\n\nimport * as turf from "@turf/turf";\nconst result = turf.squareGrid(...);\n'})})]})}function j(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},42634:()=>{}}]);