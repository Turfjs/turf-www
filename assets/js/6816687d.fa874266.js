"use strict";(self.webpackChunkturf_www=self.webpackChunkturf_www||[]).push([[16679],{71865:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>o,frontMatter:()=>c,metadata:()=>a,toc:()=>u});var s=r(74848),n=r(28453);r(54550),r(36145),r(78478);const c={title:"clusterEach"},l=void 0,a={id:"api/clusterEach",title:"clusterEach",description:"Description",source:"@site/versioned_docs/version-6.5.0/api/clusterEach.mdx",sourceDirName:"api",slug:"/api/clusterEach",permalink:"/docs/6.5.0/api/clusterEach",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-6.5.0/api/clusterEach.mdx",tags:[],version:"6.5.0",frontMatter:{title:"clusterEach"},sidebar:"apiSidebar",previous:{title:"collect",permalink:"/docs/6.5.0/api/collect"},next:{title:"clusterReduce",permalink:"/docs/6.5.0/api/clusterReduce"}},i={},u=[{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3},{value:"Installation",id:"installation",level:3}];function d(e){const t={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h3,{id:"description",children:"Description"}),"\n",(0,s.jsx)(t.p,{children:"clusterEach"}),"\n",(0,s.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"geojson"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.3",children:"FeatureCollection"})})}),(0,s.jsx)(t.td,{children:"GeoJSON Features"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"property"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"string | number"})}),(0,s.jsx)(t.td,{children:"GeoJSON property key/value used to create clusters"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"callback"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"Function"})}),(0,s.jsx)(t.td,{children:"a method that takes (cluster, clusterValue, currentIndex)"})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)("ul",{children:(0,s.jsx)(t.strong,{children:"void"})}),"\n",(0,s.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:'var geojson = turf.featureCollection([\n  turf.point([0, 0]),\n  turf.point([2, 4]),\n  turf.point([3, 6]),\n  turf.point([5, 1]),\n  turf.point([4, 2]),\n]);\n\n// Create a cluster using K-Means (adds `cluster` to GeoJSON properties)\nvar clustered = turf.clustersKmeans(geojson);\n\n// Iterate over each cluster\nturf.clusterEach(\n  clustered,\n  "cluster",\n  function (cluster, clusterValue, currentIndex) {\n    //= cluster\n    //= clusterValue\n    //= currentIndex\n  },\n);\n\n// Calculate the total number of clusters\nvar total = 0;\nturf.clusterEach(clustered, "cluster", function () {\n  total++;\n});\n\n// Create an Array of all the values retrieved from the \'cluster\' property\nvar values = [];\nturf.clusterEach(clustered, "cluster", function (cluster, clusterValue) {\n  values.push(clusterValue);\n});\n'})}),"\n",(0,s.jsx)(t.h3,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/clusters\n\nimport { clusterEach } from "@turf/clusters";\nconst result = clusterEach(...);\n'})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/turf\n\nimport * as turf from "@turf/turf";\nconst result = turf.clusterEach(...);\n'})})]})}function o(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},54550:(e,t,r)=>{r.d(t,{B8d:()=>Ae.A,BoU:()=>O.A,Bqz:()=>P.A,Bw9:()=>U.A,C0c:()=>fe.A,CNZ:()=>Z.Ay,CRN:()=>u.A,EUY:()=>re.A,EwI:()=>p.A,FU4:()=>ve.F,Fc$:()=>te.A,Fod:()=>a.A,FsR:()=>Q.A,GWP:()=>_e.A,Gdr:()=>E.A,Glg:()=>T.A,IoC:()=>w.A,JQ7:()=>L.A,K9N:()=>N.A,KCZ:()=>Ce.A,KrA:()=>ce.A,LNI:()=>s.A,Lrk:()=>we.Lr,Ms8:()=>l.A,NAY:()=>m.A,O9B:()=>Ne.A,PVF:()=>j.A,Qk1:()=>k.A,QwJ:()=>J.A,Qwm:()=>M.A,REH:()=>A.A,TcI:()=>o.A,UUz:()=>i.A,Vwd:()=>Ve.A,W1F:()=>I.A,W26:()=>D.A,WRA:()=>we.WR,Wcw:()=>K.A,XM1:()=>h.A,Zqw:()=>de.A,_6q:()=>he.A,_Jg:()=>X.A,_eC:()=>ge._e,a1F:()=>Ie.A,bmV:()=>me.A,cS4:()=>Re.A,dKf:()=>Fe.A,dcc:()=>V.A,eZr:()=>je.A,g52:()=>we.g5,gP4:()=>$.A,gXo:()=>f.A,hq2:()=>B.A,iv2:()=>ke.A,j_:()=>_.A,kJI:()=>C.A,kVe:()=>S.A,kg7:()=>g.A,n1:()=>we.n1,n1W:()=>x.A,nIv:()=>ae.A,nUT:()=>W.A,nYW:()=>b.A,ne9:()=>q.A,nj9:()=>c.A,pPd:()=>oe.A,pw2:()=>pe.A,qMT:()=>z.A,qS_:()=>le.A,ra8:()=>be.A,rb:()=>xe.A,rkH:()=>ee.A,rmV:()=>se.A,tLh:()=>ie.A,uO7:()=>ue.A,ucs:()=>R.A,usj:()=>Ee.us,v4M:()=>ne.A,vKl:()=>d.A,vh2:()=>v.A,wdR:()=>Y.A,wiw:()=>we.wi,xCI:()=>y.A,xYr:()=>F.A,xvE:()=>G.A,y$5:()=>ye.A,y5H:()=>n.A,ywB:()=>H.A,zY8:()=>ve.z,zx7:()=>we.zx});var s=r(27082),n=r(57941),c=r(50360),l=r(64335),a=r(44660),i=r(90301),u=r(47109),d=r(26584),o=r(102),h=r(59788),A=r(58658),p=r(47969),x=r(96338),j=r(33922),f=r(25903),m=r(12102),v=r(17450),g=r(2343),w=r(30669),E=r(29307),k=r(75917),b=r(39654),C=r(31234),y=(r(22608),r(69399)),I=r(37028),N=r(2116),F=r(18034),R=r(96221),V=r(67604),_=r(96558),W=r(37654),J=r(89481),K=r(90999),M=r(20491),U=r(50802),q=r(59895),z=r(18743),B=r(83811),G=r(51204),P=r(40368),S=r(78640),D=r(91988),O=r(46021),T=r(52282),Y=r(75448),L=r(86069),Q=r(82861),Z=r(65875),$=r(6773),H=r(5266),X=r(20790),ee=r(46156),te=r(7743),re=r(78664),se=r(7861),ne=r(46977),ce=r(38197),le=(r(74169),r(5486)),ae=r(91349),ie=r(11557),ue=r(17788),de=(r(58649),r(28297),r(64284),r(50347),r(20145),r(27296),r(1958),r(3327),r(64078),r(55263),r(22900),r(40231)),oe=r(37601),he=(r(17885),r(52170),r(57784)),Ae=r(13012),pe=r(53416),xe=r(75843),je=r(87836),fe=r(29611),me=(r(66093),r(19117)),ve=(r(25590),r(38220),r(2811)),ge=r(60073),we=(r(67925),r(93279)),Ee=(r(45046),r(29987)),ke=r(50365),be=r(57468),Ce=r(14657),ye=r(95475),Ie=r(39721),Ne=r(68526),Fe=r(33102),Re=r(84071),Ve=r(51465),_e=r(83185)}}]);