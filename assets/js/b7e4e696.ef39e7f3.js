(self.webpackChunkturf_www=self.webpackChunkturf_www||[]).push([[21813],{19502:(e,r,t)=>{"use strict";t.r(r),t.d(r,{Map0:()=>m,assets:()=>h,contentTitle:()=>d,default:()=>g,frontMatter:()=>c,metadata:()=>u,toc:()=>p});var n=t(74848),i=t(28453),o=t(67149),a=t(86137),s=t(36145),l=t(78478);const c={title:"rhumbBearing"},d=void 0,u={id:"api/rhumbBearing",title:"rhumbBearing",description:"Description",source:"@site/versioned_docs/version-7.0.0/api/rhumbBearing.mdx",sourceDirName:"api",slug:"/api/rhumbBearing",permalink:"/docs/api/rhumbBearing",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-7.0.0/api/rhumbBearing.mdx",tags:[],version:"7.0.0",frontMatter:{title:"rhumbBearing"},sidebar:"apiSidebar",previous:{title:"polygonTangents",permalink:"/docs/api/polygonTangents"},next:{title:"rhumbDestination",permalink:"/docs/api/rhumbDestination"}},h={},p=[{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3},{value:"Installation",id:"installation",level:3}];function m(){var e=o.zx([-75.343,39.984],{"marker-color":"#F00"}),r=o.zx([-75.534,39.123],{"marker-color":"#00F"}),t=a.F(e,r),i={point1:e,point2:r};return e.properties.bearing=t,r.properties.bearing=t,(0,n.jsx)(s.A,{addToMap:i})}function f(e){const r={a:"a",code:"code",em:"em",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h3,{id:"description",children:"Description"}),"\n",(0,n.jsxs)(r.p,{children:["Takes two ",(0,n.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.2",children:"points"})," and finds the bearing angle between them along a Rhumb line\ni.e. the angle measured in degrees start the north line (0 degrees)"]}),"\n",(0,n.jsx)(r.h3,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Name"}),(0,n.jsx)(r.th,{children:"Type"}),(0,n.jsx)(r.th,{children:"Description"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"start"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.strong,{children:(0,n.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.1",children:"Coord"})})}),(0,n.jsx)(r.td,{children:"starting Point"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"end"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.strong,{children:(0,n.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.1",children:"Coord"})})}),(0,n.jsx)(r.td,{children:"ending Point"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsxs)(r.td,{children:["options",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.strong,{children:"Object"})}),(0,n.jsx)(r.td,{children:"Optional parameters"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsxs)(r.td,{children:["options.final",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.strong,{children:"boolean"})}),(0,n.jsxs)(r.td,{children:["calculates the final bearing if true ",(0,n.jsx)(r.em,{children:"(default false)"})]})]})]})]}),"\n",(0,n.jsx)(r.h3,{id:"returns",children:"Returns"}),"\n",(0,n.jsx)("ul",{children:(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"number"})," bearing from north in decimal degrees, between -180 and 180 degrees (positive clockwise)"]})}),"\n",(0,n.jsx)(r.h3,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-javascript",children:'var point1 = turf.point([-75.343, 39.984], { "marker-color": "#F00" });\nvar point2 = turf.point([-75.534, 39.123], { "marker-color": "#00F" });\n\nvar bearing = turf.rhumbBearing(point1, point2);\n'})}),"\n","\n",(0,n.jsx)(l.A,{children:()=>(0,n.jsx)(m,{})}),"\n",(0,n.jsx)(r.h3,{id:"installation",children:"Installation"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-javascript",children:'$ npm install @turf/rhumb-bearing\n\nimport { rhumbBearing } from "@turf/rhumb-bearing";\nconst result = rhumbBearing(...);\n'})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-javascript",children:'$ npm install @turf/turf\n\nimport * as turf from "@turf/turf";\nconst result = turf.rhumbBearing(...);\n'})})]})}function g(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(f,{...e})}):f(e)}},42634:()=>{},83490:(e,r,t)=>{"use strict";t.d(r,{$R:()=>s,Pw:()=>u,bg:()=>d,iw:()=>c,mo:()=>l,uG:()=>a});var n=t(67149),i=Object.defineProperty,o=(e,r)=>i(e,"name",{value:r,configurable:!0});function a(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return[...e.geometry.coordinates];if("Point"===e.type)return[...e.coordinates]}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return[...e];throw new Error("coord must be GeoJSON Point or an Array of numbers")}function s(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function l(e,r,t){if(!e)throw new Error("No feature passed");if(!t)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!e.geometry||e.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.geometry.type)}function c(e,r,t){if(!e)throw new Error("No featureCollection passed");if(!t)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+t+", FeatureCollection required");for(const n of e.features){if(!n||"Feature"!==n.type||!n.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!n.geometry||n.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+n.geometry.type)}}function d(e){return"Feature"===e.type?e.geometry:e}function u(e,r){return"FeatureCollection"===e.type?"FeatureCollection":"GeometryCollection"===e.type?"GeometryCollection":"Feature"===e.type&&null!==e.geometry?e.geometry.type:e.type}o(a,"getCoord"),o(s,"getCoords"),o((function e(r){if(r.length>1&&(0,n.Et)(r[0])&&(0,n.Et)(r[1]))return!0;if(Array.isArray(r[0])&&r[0].length)return e(r[0]);throw new Error("coordinates must only contain numbers")}),"containsNumber"),o((function(e,r,t){if(!r||!t)throw new Error("type and name required");if(!e||e.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.type)}),"geojsonType"),o(l,"featureOf"),o(c,"collectionOf"),o(d,"getGeom"),o(u,"getType")},86137:(e,r,t)=>{"use strict";t.d(r,{F:()=>s});var n=t(67149),i=t(83490),o=Object.defineProperty,a=(e,r)=>o(e,"name",{value:r,configurable:!0});function s(e,r,t={}){let n;n=t.final?l((0,i.uG)(r),(0,i.uG)(e)):l((0,i.uG)(e),(0,i.uG)(r));return n>180?-(360-n):n}function l(e,r){const t=(0,n.tR)(e[1]),i=(0,n.tR)(r[1]);let o=(0,n.tR)(r[0]-e[0]);o>Math.PI&&(o-=2*Math.PI),o<-Math.PI&&(o+=2*Math.PI);const a=Math.log(Math.tan(i/2+Math.PI/4)/Math.tan(t/2+Math.PI/4)),s=Math.atan2(o,a);return((0,n.nv)(s)+360)%360}a(s,"rhumbBearing"),a(l,"calculateRhumbBearing")}}]);