(self.webpackChunkturf_www=self.webpackChunkturf_www||[]).push([[1533],{6880:(e,t,r)=>{"use strict";r.r(t),r.d(t,{Map0:()=>h,assets:()=>d,contentTitle:()=>u,default:()=>g,frontMatter:()=>c,metadata:()=>p,toc:()=>f});var n=r(74848),o=r(28453),i=r(67149),s=r(64034),l=r(36145),a=r(78478);const c={title:"tag"},u=void 0,p={id:"api/tag",title:"tag",description:"Description",source:"@site/versioned_docs/version-7.0.0/api/tag.mdx",sourceDirName:"api",slug:"/api/tag",permalink:"/docs/api/tag",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-7.0.0/api/tag.mdx",tags:[],version:"7.0.0",frontMatter:{title:"tag"},sidebar:"apiSidebar",previous:{title:"pointsWithinPolygon",permalink:"/docs/api/pointsWithinPolygon"},next:{title:"hexGrid",permalink:"/docs/api/hexGrid"}},d={},f=[{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3},{value:"Installation",id:"installation",level:3}];function h(){var e=i.zx([-77,44]),t=i.zx([-77,38]),r=i.n1([[[-81,41],[-81,47],[-72,47],[-72,41],[-81,41]]],{pop:3e3}),o=i.n1([[[-81,35],[-81,41],[-72,41],[-72,35],[-81,35]]],{pop:1e3}),a=i.Lr([e,t]),c=i.Lr([r,o]),u={tagged:s.T(a,c,"pop","population"),polygons:c};return(0,n.jsx)(l.A,{addToMap:u})}function y(e){const t={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h3,{id:"description",children:"Description"}),"\n",(0,n.jsxs)(t.p,{children:["Takes a set of ",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.2",children:"points"})," and a set of ",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.6",children:"polygons"})," and/or ",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.7",children:"multipolygons"})," and performs a spatial join."]}),"\n",(0,n.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"points"}),(0,n.jsx)(t.td,{children:(0,n.jsxs)(t.strong,{children:[(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.3",children:"FeatureCollection"}),"<",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.2",children:"Point"}),">"]})}),(0,n.jsx)(t.td,{children:"input points"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"polygons"}),(0,n.jsx)(t.td,{children:(0,n.jsxs)(t.strong,{children:[(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.3",children:"FeatureCollection"}),"<",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.6",children:"Polygon"})," | ",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.7",children:"MultiPolygon"}),">"]})}),(0,n.jsx)(t.td,{children:"input (multi)polygons"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"field"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"string"})}),(0,n.jsxs)(t.td,{children:["property in ",(0,n.jsx)(t.code,{children:"polygons"})," to add to joined {<Point>} features"]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"outField"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"string"})}),(0,n.jsxs)(t.td,{children:["property in ",(0,n.jsx)(t.code,{children:"points"})," in which to store joined property from ",(0,n.jsx)(t.code,{children:"polygons"})]})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,n.jsx)("ul",{children:(0,n.jsxs)(t.p,{children:[(0,n.jsxs)(t.strong,{children:[(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.3",children:"FeatureCollection"}),"<",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.2",children:"Point"}),">"]})," points with ",(0,n.jsx)(t.code,{children:"containingPolyId"})," property containing values from ",(0,n.jsx)(t.code,{children:"polyId"})]})}),"\n",(0,n.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:'var pt1 = turf.point([-77, 44]);\nvar pt2 = turf.point([-77, 38]);\nvar poly1 = turf.polygon(\n  [\n    [\n      [-81, 41],\n      [-81, 47],\n      [-72, 47],\n      [-72, 41],\n      [-81, 41],\n    ],\n  ],\n  { pop: 3000 },\n);\nvar poly2 = turf.polygon(\n  [\n    [\n      [-81, 35],\n      [-81, 41],\n      [-72, 41],\n      [-72, 35],\n      [-81, 35],\n    ],\n  ],\n  { pop: 1000 },\n);\n\nvar points = turf.featureCollection([pt1, pt2]);\nvar polygons = turf.featureCollection([poly1, poly2]);\n\nvar tagged = turf.tag(points, polygons, "pop", "population");\n'})}),"\n","\n",(0,n.jsx)(a.A,{children:()=>(0,n.jsx)(h,{})}),"\n",(0,n.jsx)(t.h3,{id:"installation",children:"Installation"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/tag\n\nimport { tag } from "@turf/tag";\nconst result = tag(...);\n'})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/turf\n\nimport * as turf from "@turf/turf";\nconst result = turf.tag(...);\n'})})]})}function g(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(y,{...e})}):y(e)}},42634:()=>{},10200:(e,t,r)=>{"use strict";r.d(t,{m:()=>l});const n=function(e,t){for(var r=0,n=0,o=0,i=0,s=0,l=0,a=0,c=0,u=null,p=null,d=e[0],f=e[1],h=t.length;r<h;r++){n=0;var y=t[r].length-1,g=t[r];if((u=g[0])[0]!==g[y][0]&&u[1]!==g[y][1])throw new Error("First and last coordinates in a ring must be the same");for(s=u[0]-d,l=u[1]-f;n<y;n++)if(c=(p=g[n+1])[1]-f,l<0&&c<0||l>0&&c>0)l=c,s=(u=p)[0]-d;else{if(a=p[0]-e[0],c>0&&l<=0){if((i=s*c-a*l)>0)o+=1;else if(0===i)return 0}else if(l>0&&c<=0){if((i=s*c-a*l)<0)o+=1;else if(0===i)return 0}else if(0===c&&l<0){if(0===(i=s*c-a*l))return 0}else if(0===l&&c<0){if(0===(i=s*c-a*l))return 0}else if(0===l&&0===c){if(a<=0&&s>=0)return 0;if(s<=0&&a>=0)return 0}u=p,l=c,s=a}}return o%2!=0};var o=r(83490),i=Object.defineProperty,s=(e,t)=>i(e,"name",{value:t,configurable:!0});function l(e,t,r={}){if(!e)throw new Error("point is required");if(!t)throw new Error("polygon is required");const i=(0,o.uG)(e),s=(0,o.bg)(t),l=s.type,c=t.bbox;let u=s.coordinates;if(c&&!1===a(i,c))return!1;"Polygon"===l&&(u=[u]);let p=!1;for(var d=0;d<u.length;++d){const e=n(i,u[d]);if(0===e)return!r.ignoreBoundary;e&&(p=!0)}return p}function a(e,t){return t[0]<=e[0]&&t[1]<=e[1]&&t[2]>=e[0]&&t[3]>=e[1]}s(l,"booleanPointInPolygon"),s(a,"inBBox")},53257:(e,t,r)=>{"use strict";r.d(t,{Rd:()=>l,o8:()=>i});var n=Object.defineProperty,o=(e,t)=>n(e,"name",{value:t,configurable:!0});function i(e){if(!e)throw new Error("geojson is required");switch(e.type){case"Feature":return s(e);case"FeatureCollection":return a(e);case"Point":case"LineString":case"Polygon":case"MultiPoint":case"MultiLineString":case"MultiPolygon":case"GeometryCollection":return c(e);default:throw new Error("unknown GeoJSON type")}}function s(e){const t={type:"Feature"};return Object.keys(e).forEach((r=>{switch(r){case"type":case"properties":case"geometry":return;default:t[r]=e[r]}})),t.properties=l(e.properties),null==e.geometry?t.geometry=null:t.geometry=c(e.geometry),t}function l(e){const t={};return e?(Object.keys(e).forEach((r=>{const n=e[r];"object"==typeof n?null===n?t[r]=null:Array.isArray(n)?t[r]=n.map((e=>e)):t[r]=l(n):t[r]=n})),t):t}function a(e){const t={type:"FeatureCollection"};return Object.keys(e).forEach((r=>{switch(r){case"type":case"features":return;default:t[r]=e[r]}})),t.features=e.features.map((e=>s(e))),t}function c(e){const t={type:e.type};return e.bbox&&(t.bbox=e.bbox),"GeometryCollection"===e.type?(t.geometries=e.geometries.map((e=>c(e))),t):(t.coordinates=u(e.coordinates),t)}function u(e){const t=e;return"object"!=typeof t[0]?t.slice():t.map((e=>u(e)))}o(i,"clone"),o(s,"cloneFeature"),o(l,"cloneProperties"),o(a,"cloneFeatureCollection"),o(c,"cloneGeometry"),o(u,"deepSlice")},83490:(e,t,r)=>{"use strict";r.d(t,{$R:()=>l,Pw:()=>p,bg:()=>u,iw:()=>c,mo:()=>a,uG:()=>s});var n=r(67149),o=Object.defineProperty,i=(e,t)=>o(e,"name",{value:t,configurable:!0});function s(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return[...e.geometry.coordinates];if("Point"===e.type)return[...e.coordinates]}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return[...e];throw new Error("coord must be GeoJSON Point or an Array of numbers")}function l(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function a(e,t,r){if(!e)throw new Error("No feature passed");if(!r)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!e.geometry||e.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.geometry.type)}function c(e,t,r){if(!e)throw new Error("No featureCollection passed");if(!r)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+r+", FeatureCollection required");for(const n of e.features){if(!n||"Feature"!==n.type||!n.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!n.geometry||n.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+n.geometry.type)}}function u(e){return"Feature"===e.type?e.geometry:e}function p(e,t){return"FeatureCollection"===e.type?"FeatureCollection":"GeometryCollection"===e.type?"GeometryCollection":"Feature"===e.type&&null!==e.geometry?e.geometry.type:e.type}i(s,"getCoord"),i(l,"getCoords"),i((function e(t){if(t.length>1&&(0,n.Et)(t[0])&&(0,n.Et)(t[1]))return!0;if(Array.isArray(t[0])&&t[0].length)return e(t[0]);throw new Error("coordinates must only contain numbers")}),"containsNumber"),i((function(e,t,r){if(!t||!r)throw new Error("type and name required");if(!e||e.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.type)}),"geojsonType"),i(a,"featureOf"),i(c,"collectionOf"),i(u,"getGeom"),i(p,"getType")},64034:(e,t,r)=>{"use strict";r.d(t,{T:()=>s});var n=r(10200),o=r(53257),i=r(63399);function s(e,t,r,s){return e=(0,o.o8)(e),t=(0,o.o8)(t),(0,i.us)(e,(function(e){e.properties||(e.properties={}),(0,i.us)(t,(function(t){e.properties&&t.properties&&void 0===e.properties[s]&&(0,n.m)(e,t)&&(e.properties[s]=t.properties[r])}))})),e}(0,Object.defineProperty)(s,"name",{value:"tag",configurable:!0})}}]);