(self.webpackChunkturf_www=self.webpackChunkturf_www||[]).push([[33709],{11901:(e,t,r)=>{"use strict";r.r(t),r.d(t,{Map0:()=>f,assets:()=>h,contentTitle:()=>u,default:()=>x,frontMatter:()=>c,metadata:()=>d,toc:()=>p});var n=r(74848),i=r(28453),s=r(24240),o=r(67149),a=r(36145),l=r(78478);const c={title:"ellipse"},u=void 0,d={id:"api/ellipse",title:"ellipse",description:"Description",source:"@site/docs/api/ellipse.mdx",sourceDirName:"api",slug:"/api/ellipse",permalink:"/docs/next/api/ellipse",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/ellipse.mdx",tags:[],version:"current",frontMatter:{title:"ellipse"},sidebar:"apiSidebar",previous:{title:"distanceWeight",permalink:"/docs/next/api/distanceWeight"},next:{title:"findPoint",permalink:"/docs/next/api/findPoint"}},h={},p=[{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3},{value:"Installation",id:"installation",level:3}];function f(){var e=[-75,40],t=s.p(e,5,2),r={center:o.zx(e),ellipse:t};return(0,n.jsx)(a.A,{addToMap:r})}function m(e){const t={a:"a",code:"code",em:"em",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h3,{id:"description",children:"Description"}),"\n",(0,n.jsxs)(t.p,{children:["Takes a ",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.2",children:"Point"})," and calculates the ellipse polygon given two semi-axes expressed in variable units and steps for precision."]}),"\n",(0,n.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"center"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.1",children:"Coord"})})}),(0,n.jsx)(t.td,{children:"center point"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"xSemiAxis"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"number"})}),(0,n.jsx)(t.td,{children:"semi (major) axis of the ellipse along the x-axis"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"ySemiAxis"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"number"})}),(0,n.jsx)(t.td,{children:"semi (minor) axis of the ellipse along the y-axis"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:["options",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Object"})}),(0,n.jsxs)(t.td,{children:["Optional parameters ",(0,n.jsx)(t.em,{children:"(default {})"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:["options.angle",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"number"})}),(0,n.jsxs)(t.td,{children:["angle of rotation in decimal degrees, positive clockwise ",(0,n.jsx)(t.em,{children:"(default 0)"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:["options.pivot",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.1",children:"Coord"})})}),(0,n.jsxs)(t.td,{children:["point around which any rotation will be performed ",(0,n.jsx)(t.em,{children:"(default center)"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:["options.steps",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"number"})}),(0,n.jsxs)(t.td,{children:["number of steps ",(0,n.jsx)(t.em,{children:"(default 64)"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:["options.units",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"string"})}),(0,n.jsxs)(t.td,{children:["unit of measurement for axes ",(0,n.jsx)(t.em,{children:"(default 'kilometers')"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:["options.properties",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Object"})}),(0,n.jsxs)(t.td,{children:["properties ",(0,n.jsx)(t.em,{children:"(default {})"})]})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,n.jsx)("ul",{children:(0,n.jsxs)(t.p,{children:[(0,n.jsxs)(t.strong,{children:[(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.2",children:"Feature"}),"<",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.6",children:"Polygon"}),">"]})," ellipse polygon"]})}),"\n",(0,n.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"var center = [-75, 40];\nvar xSemiAxis = 5;\nvar ySemiAxis = 2;\nvar ellipse = turf.ellipse(center, xSemiAxis, ySemiAxis);\n"})}),"\n","\n",(0,n.jsx)(l.A,{children:()=>(0,n.jsx)(f,{})}),"\n",(0,n.jsx)(t.h3,{id:"installation",children:"Installation"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/ellipse\n\nimport { ellipse } from "@turf/ellipse";\nconst result = ellipse(...);\n'})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/turf\n\nimport * as turf from "@turf/turf";\nconst result = turf.ellipse(...);\n'})})]})}function x(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}},42634:()=>{},79204:(e,t,r)=>{"use strict";r.d(t,{v:()=>s});var n=r(67149),i=r(63399);function s(e,t={}){let r=0,s=0,o=0;return(0,i.Fh)(e,(function(e){r+=e[0],s+=e[1],o++}),!0),(0,n.zx)([r/o,s/o],t.properties)}(0,Object.defineProperty)(s,"name",{value:"centroid",configurable:!0})},53257:(e,t,r)=>{"use strict";r.d(t,{Rd:()=>a,o8:()=>s});var n=Object.defineProperty,i=(e,t)=>n(e,"name",{value:t,configurable:!0});function s(e){if(!e)throw new Error("geojson is required");switch(e.type){case"Feature":return o(e);case"FeatureCollection":return l(e);case"Point":case"LineString":case"Polygon":case"MultiPoint":case"MultiLineString":case"MultiPolygon":case"GeometryCollection":return c(e);default:throw new Error("unknown GeoJSON type")}}function o(e){const t={type:"Feature"};return Object.keys(e).forEach((r=>{switch(r){case"type":case"properties":case"geometry":return;default:t[r]=e[r]}})),t.properties=a(e.properties),null==e.geometry?t.geometry=null:t.geometry=c(e.geometry),t}function a(e){const t={};return e?(Object.keys(e).forEach((r=>{const n=e[r];"object"==typeof n?null===n?t[r]=null:Array.isArray(n)?t[r]=n.map((e=>e)):t[r]=a(n):t[r]=n})),t):t}function l(e){const t={type:"FeatureCollection"};return Object.keys(e).forEach((r=>{switch(r){case"type":case"features":return;default:t[r]=e[r]}})),t.features=e.features.map((e=>o(e))),t}function c(e){const t={type:e.type};return e.bbox&&(t.bbox=e.bbox),"GeometryCollection"===e.type?(t.geometries=e.geometries.map((e=>c(e))),t):(t.coordinates=u(e.coordinates),t)}function u(e){const t=e;return"object"!=typeof t[0]?t.slice():t.map((e=>u(e)))}i(s,"clone"),i(o,"cloneFeature"),i(a,"cloneProperties"),i(l,"cloneFeatureCollection"),i(c,"cloneGeometry"),i(u,"deepSlice")},24240:(e,t,r)=>{"use strict";r.d(t,{p:()=>c});var n=r(67149),i=r(89783),s=r(72440),o=r(83490),a=Object.defineProperty,l=(e,t)=>a(e,"name",{value:t,configurable:!0});function c(e,t,r,a){const l=(a=a||{}).steps||64,c=a.units||"kilometers",d=a.angle||0,h=a.pivot||e,p=a.properties||{};if(!e)throw new Error("center is required");if(!t)throw new Error("xSemiAxis is required");if(!r)throw new Error("ySemiAxis is required");if(!(0,n.Gv)(a))throw new Error("options must be an object");if(!(0,n.Et)(l))throw new Error("steps must be a number");if(!(0,n.Et)(d))throw new Error("angle must be a number");const f=(0,o.uG)(e);if("degrees"!==c){const n=(0,i.r)(e,t,90,{units:c}),s=(0,i.r)(e,r,0,{units:c});t=(0,o.uG)(n)[0]-f[0],r=(0,o.uG)(s)[1]-f[1]}const m=[];for(let i=0;i<l;i+=1){const e=-360*i/l;let s=t*r/Math.sqrt(Math.pow(r,2)+Math.pow(t,2)*Math.pow(u(e),2)),o=t*r/Math.sqrt(Math.pow(t,2)+Math.pow(r,2)/Math.pow(u(e),2));if(e<-90&&e>=-270&&(s=-s),e<-180&&e>=-360&&(o=-o),"degrees"===c){const e=(0,n.tR)(d),t=s*Math.cos(e)+o*Math.sin(e),r=o*Math.cos(e)-s*Math.sin(e);s=t,o=r}m.push([s+f[0],o+f[1]])}return m.push(m[0]),"degrees"===c?(0,n.n1)([m],p):(0,s.q)((0,n.n1)([m],p),d,{pivot:h})}function u(e){const t=e*Math.PI/180;return Math.tan(t)}l(c,"ellipse"),l(u,"getTanDeg")},83490:(e,t,r)=>{"use strict";r.d(t,{$R:()=>a,Pw:()=>d,bg:()=>u,iw:()=>c,mo:()=>l,uG:()=>o});var n=r(67149),i=Object.defineProperty,s=(e,t)=>i(e,"name",{value:t,configurable:!0});function o(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return[...e.geometry.coordinates];if("Point"===e.type)return[...e.coordinates]}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return[...e];throw new Error("coord must be GeoJSON Point or an Array of numbers")}function a(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function l(e,t,r){if(!e)throw new Error("No feature passed");if(!r)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!e.geometry||e.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.geometry.type)}function c(e,t,r){if(!e)throw new Error("No featureCollection passed");if(!r)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+r+", FeatureCollection required");for(const n of e.features){if(!n||"Feature"!==n.type||!n.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!n.geometry||n.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+n.geometry.type)}}function u(e){return"Feature"===e.type?e.geometry:e}function d(e,t){return"FeatureCollection"===e.type?"FeatureCollection":"GeometryCollection"===e.type?"GeometryCollection":"Feature"===e.type&&null!==e.geometry?e.geometry.type:e.type}s(o,"getCoord"),s(a,"getCoords"),s((function e(t){if(t.length>1&&(0,n.Et)(t[0])&&(0,n.Et)(t[1]))return!0;if(Array.isArray(t[0])&&t[0].length)return e(t[0]);throw new Error("coordinates must only contain numbers")}),"containsNumber"),s((function(e,t,r){if(!t||!r)throw new Error("type and name required");if(!e||e.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.type)}),"geojsonType"),s(l,"featureOf"),s(c,"collectionOf"),s(u,"getGeom"),s(d,"getType")},86137:(e,t,r)=>{"use strict";r.d(t,{F:()=>a});var n=r(67149),i=r(83490),s=Object.defineProperty,o=(e,t)=>s(e,"name",{value:t,configurable:!0});function a(e,t,r={}){let n;n=r.final?l((0,i.uG)(t),(0,i.uG)(e)):l((0,i.uG)(e),(0,i.uG)(t));return n>180?-(360-n):n}function l(e,t){const r=(0,n.tR)(e[1]),i=(0,n.tR)(t[1]);let s=(0,n.tR)(t[0]-e[0]);s>Math.PI&&(s-=2*Math.PI),s<-Math.PI&&(s+=2*Math.PI);const o=Math.log(Math.tan(i/2+Math.PI/4)/Math.tan(r/2+Math.PI/4)),a=Math.atan2(s,o);return((0,n.nv)(a)+360)%360}o(a,"rhumbBearing"),o(l,"calculateRhumbBearing")},89783:(e,t,r)=>{"use strict";r.d(t,{r:()=>a});var n=r(67149),i=r(83490),s=Object.defineProperty,o=(e,t)=>s(e,"name",{value:t,configurable:!0});function a(e,t,r,s={}){const o=t<0;let a=(0,n.I3)(Math.abs(t),s.units,"meters");o&&(a=-Math.abs(a));const c=(0,i.uG)(e),u=l(c,a,r);return u[0]+=u[0]-c[0]>180?-360:c[0]-u[0]>180?360:0,(0,n.zx)(u,s.properties)}function l(e,t,r,i){const s=t/(i=void 0===i?n.zX:Number(i)),o=e[0]*Math.PI/180,a=(0,n.tR)(e[1]),l=(0,n.tR)(r),c=s*Math.cos(l);let u=a+c;Math.abs(u)>Math.PI/2&&(u=u>0?Math.PI-u:-Math.PI-u);const d=Math.log(Math.tan(u/2+Math.PI/4)/Math.tan(a/2+Math.PI/4)),h=Math.abs(d)>1e-11?c/d:Math.cos(a);return[(180*(o+s*Math.sin(l)/h)/Math.PI+540)%360-180,180*u/Math.PI]}o(a,"rhumbDestination"),o(l,"calculateRhumbDestination")},82:(e,t,r)=>{"use strict";r.d(t,{E:()=>a});var n=r(67149),i=r(83490),s=Object.defineProperty,o=(e,t)=>s(e,"name",{value:t,configurable:!0});function a(e,t,r={}){const s=(0,i.uG)(e),o=(0,i.uG)(t);o[0]+=o[0]-s[0]>180?-360:s[0]-o[0]>180?360:0;const a=l(s,o);return(0,n.I3)(a,"meters",r.units)}function l(e,t,r){const i=r=void 0===r?n.zX:Number(r),s=e[1]*Math.PI/180,o=t[1]*Math.PI/180,a=o-s;let l=Math.abs(t[0]-e[0])*Math.PI/180;l>Math.PI&&(l-=2*Math.PI);const c=Math.log(Math.tan(o/2+Math.PI/4)/Math.tan(s/2+Math.PI/4)),u=Math.abs(c)>1e-11?a/c:Math.cos(s);return Math.sqrt(a*a+u*u*l*l)*i}o(a,"rhumbDistance"),o(l,"calculateRhumbDistance")},72440:(e,t,r)=>{"use strict";r.d(t,{q:()=>d});var n=r(79204),i=r(86137),s=r(82),o=r(89783),a=r(53257),l=r(63399),c=r(83490),u=r(67149);function d(e,t,r){if(r=r||{},!(0,u.Gv)(r))throw new Error("options is invalid");var d=r.pivot,h=r.mutate;if(!e)throw new Error("geojson is required");if(null==t||isNaN(t))throw new Error("angle is required");return 0===t||(d||(d=(0,n.v)(e)),!1!==h&&void 0!==h||(e=(0,a.o8)(e)),(0,l.Fh)(e,(function(e){var r=(0,i.F)(d,e)+t,n=(0,s.E)(d,e),a=(0,c.$R)((0,o.r)(d,n,r));e[0]=a[0],e[1]=a[1]}))),e}(0,Object.defineProperty)(d,"name",{value:"transformRotate",configurable:!0})}}]);