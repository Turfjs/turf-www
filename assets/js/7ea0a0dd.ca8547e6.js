(self.webpackChunkturf_www=self.webpackChunkturf_www||[]).push([[14707],{76015:(e,t,r)=>{"use strict";r.r(t),r.d(t,{Map0:()=>p,assets:()=>u,contentTitle:()=>l,default:()=>j,frontMatter:()=>c,metadata:()=>h,toc:()=>f});var n=r(74848),i=r(28453),a=r(67149),o=r(89796),s=r(36145),d=r(78478);const c={title:"centerMedian"},l=void 0,h={id:"api/centerMedian",title:"centerMedian",description:"Description",source:"@site/versioned_docs/version-7.0.0/api/centerMedian.mdx",sourceDirName:"api",slug:"/api/centerMedian",permalink:"/docs/api/centerMedian",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-7.0.0/api/centerMedian.mdx",tags:[],version:"7.0.0",frontMatter:{title:"centerMedian"},sidebar:"apiSidebar",previous:{title:"centerMean",permalink:"/docs/api/centerMean"},next:{title:"directionalMean",permalink:"/docs/api/directionalMean"}},u={},f=[{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3},{value:"Installation",id:"installation",level:3}];function p(){var e=a.WR([[0,0],[1,0],[0,1],[5,8]]),t={points:e,medianCenter:o.e(e)};return(0,n.jsx)(s.A,{addToMap:t})}function m(e){const t={a:"a",code:"code",em:"em",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h3,{id:"description",children:"Description"}),"\n",(0,n.jsxs)(t.p,{children:["Takes a ",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.3",children:"FeatureCollection"})," of points and calculates the median center,\nalgorithimically. The median center is understood as the point that is\nrequires the least total travel from all other points."]}),"\n",(0,n.jsx)(t.p,{children:"Turfjs has four different functions for calculating the center of a set of\ndata. Each is useful depending on circumstance."}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"@turf/center"})," finds the simple center of a dataset, by finding the\nmidpoint between the extents of the data. That is, it divides in half the\nfarthest east and farthest west point as well as the farthest north and\nfarthest south."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"@turf/center-of-mass"})," imagines that the dataset is a sheet of paper.\nThe center of mass is where the sheet would balance on a fingertip."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"@turf/center-mean"})," takes the averages of all the coordinates and\nproduces a value that respects that. Unlike ",(0,n.jsx)(t.code,{children:"@turf/center"}),", it is\nsensitive to clusters and outliers. It lands in the statistical middle of a\ndataset, not the geographical. It can also be weighted, meaning certain\npoints are more important than others."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"@turf/center-median"})," takes the mean center and tries to find, iteratively,\na new point that requires the least amount of travel from all the points in\nthe dataset. It is not as sensitive to outliers as ",(0,n.jsx)(t.code,{children:"@turf/center-mean"}),", but it is\nattracted to clustered data. It, too, can be weighted."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Bibliography"})}),"\n",(0,n.jsxs)(t.p,{children:["Harold W. Kuhn and Robert E. Kuenne, \u201cAn Efficient Algorithm for the\nNumerical Solution of the Generalized Weber Problem in Spatial\nEconomics,\u201d ",(0,n.jsx)(t.em,{children:"Journal of Regional Science"})," 4, no. 2 (1962): 21\u201333,\ndoi:",(0,n.jsx)(t.a,{href:"https://doi.org/10.1111/j.1467-9787.1962.tb00902.x",children:"10.1111/j.1467-9787.1962.tb00902.x"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["James E. Burt, Gerald M. Barber, and David L. Rigby, ",(0,n.jsx)(t.em,{children:"Elementary\nStatistics for Geographers"}),", 3rd ed., New York: The Guilford\nPress, 2009, 150\u2013151."]}),"\n",(0,n.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"features"}),(0,n.jsx)(t.td,{children:(0,n.jsxs)(t.strong,{children:[(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.3",children:"FeatureCollection"}),"<any>"]})}),(0,n.jsx)(t.td,{children:"Any GeoJSON Feature Collection"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:["options",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Object"})}),(0,n.jsxs)(t.td,{children:["Optional parameters ",(0,n.jsx)(t.em,{children:"(default {})"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:["options.weight",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"string"})}),(0,n.jsx)(t.td,{children:"the property name used to weight the center"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:["options.tolerance",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"number"})}),(0,n.jsxs)(t.td,{children:["the difference in distance between candidate medians at which point the algorighim stops iterating. ",(0,n.jsx)(t.em,{children:"(default 0.001)"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:["options.counter",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"number"})}),(0,n.jsxs)(t.td,{children:["how many attempts to find the median, should the tolerance be insufficient. ",(0,n.jsx)(t.em,{children:"(default 10)"})]})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,n.jsx)("ul",{children:(0,n.jsxs)(t.p,{children:[(0,n.jsxs)(t.strong,{children:[(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.2",children:"Feature"}),"<",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.2",children:"Point"}),">"]})," The median center of the collection"]})}),"\n",(0,n.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"var points = turf.points([\n  [0, 0],\n  [1, 0],\n  [0, 1],\n  [5, 8],\n]);\nvar medianCenter = turf.centerMedian(points);\n"})}),"\n","\n",(0,n.jsx)(d.A,{children:()=>(0,n.jsx)(p,{})}),"\n",(0,n.jsx)(t.h3,{id:"installation",children:"Installation"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/center-median\n\nimport { centerMedian } from "@turf/center-median";\nconst result = centerMedian(...);\n'})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/turf\n\nimport * as turf from "@turf/turf";\nconst result = turf.centerMedian(...);\n'})})]})}function j(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}},42634:()=>{},51177:(e,t,r)=>{"use strict";r.d(t,{r:()=>a});var n=r(63399),i=r(67149);function a(e,t={}){let r=0,a=0,o=0;return(0,n.kX)(e,(function(e,s,d){let c=t.weight?null==d?void 0:d[t.weight]:void 0;if(c=null==c?1:c,!(0,i.Et)(c))throw new Error("weight value must be a number for feature index "+s);c=Number(c),c>0&&(0,n.Fh)(e,(function(e){r+=e[0]*c,a+=e[1]*c,o+=c}))})),(0,i.zx)([r/o,a/o],t.properties,t)}(0,Object.defineProperty)(a,"name",{value:"centerMean",configurable:!0})},89796:(e,t,r)=>{"use strict";r.d(t,{e:()=>l});var n=r(51177),i=r(18685),a=r(79204),o=r(67149),s=r(63399),d=Object.defineProperty,c=(e,t)=>d(e,"name",{value:t,configurable:!0});function l(e,t={}){if(t=t||{},!(0,o.Gv)(t))throw new Error("options is invalid");var r=t.counter||10;if(!(0,o.Et)(r))throw new Error("counter must be a number");var i=t.weight,d=(0,n.r)(e,{weight:t.weight}),c=(0,o.Lr)([]);(0,s.us)(e,(function(e){var t;c.features.push((0,a.v)(e,{properties:{weight:null==(t=e.properties)?void 0:t[i]}}))}));const l={tolerance:t.tolerance,medianCandidates:[]};return h(d.geometry.coordinates,[0,0],c,l,r)}function h(e,t,r,n,a){var d=n.tolerance||.001,c=0,l=0,u=0,f=0;if((0,s.us)(r,(function(t){var r,n=null==(r=t.properties)?void 0:r.weight,a=null==n?1:n;if(a=Number(a),!(0,o.Et)(a))throw new Error("weight value must be a number");if(a>0){f+=1;var s=a*(0,i.I)(t,e);0===s&&(s=1);var d=a/s;c+=t.geometry.coordinates[0]*d,l+=t.geometry.coordinates[1]*d,u+=d}})),f<1)throw new Error("no features to measure");var p=c/u,m=l/u;return 1===f||0===a||Math.abs(p-t[0])<d&&Math.abs(m-t[1])<d?(0,o.zx)([p,m],{medianCandidates:n.medianCandidates}):(n.medianCandidates.push([p,m]),h([p,m],e,r,n,a-1))}c(l,"centerMedian"),c(h,"findMedian")},79204:(e,t,r)=>{"use strict";r.d(t,{v:()=>a});var n=r(67149),i=r(63399);function a(e,t={}){let r=0,a=0,o=0;return(0,i.Fh)(e,(function(e){r+=e[0],a+=e[1],o++}),!0),(0,n.zx)([r/o,a/o],t.properties)}(0,Object.defineProperty)(a,"name",{value:"centroid",configurable:!0})},18685:(e,t,r)=>{"use strict";r.d(t,{I:()=>a});var n=r(83490),i=r(67149);function a(e,t,r={}){var a=(0,n.uG)(e),o=(0,n.uG)(t),s=(0,i.tR)(o[1]-a[1]),d=(0,i.tR)(o[0]-a[0]),c=(0,i.tR)(a[1]),l=(0,i.tR)(o[1]),h=Math.pow(Math.sin(s/2),2)+Math.pow(Math.sin(d/2),2)*Math.cos(c)*Math.cos(l);return(0,i.cJ)(2*Math.atan2(Math.sqrt(h),Math.sqrt(1-h)),r.units)}(0,Object.defineProperty)(a,"name",{value:"distance",configurable:!0})},83490:(e,t,r)=>{"use strict";r.d(t,{$R:()=>s,Pw:()=>h,bg:()=>l,iw:()=>c,mo:()=>d,uG:()=>o});var n=r(67149),i=Object.defineProperty,a=(e,t)=>i(e,"name",{value:t,configurable:!0});function o(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return[...e.geometry.coordinates];if("Point"===e.type)return[...e.coordinates]}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return[...e];throw new Error("coord must be GeoJSON Point or an Array of numbers")}function s(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function d(e,t,r){if(!e)throw new Error("No feature passed");if(!r)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!e.geometry||e.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.geometry.type)}function c(e,t,r){if(!e)throw new Error("No featureCollection passed");if(!r)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+r+", FeatureCollection required");for(const n of e.features){if(!n||"Feature"!==n.type||!n.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!n.geometry||n.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+n.geometry.type)}}function l(e){return"Feature"===e.type?e.geometry:e}function h(e,t){return"FeatureCollection"===e.type?"FeatureCollection":"GeometryCollection"===e.type?"GeometryCollection":"Feature"===e.type&&null!==e.geometry?e.geometry.type:e.type}a(o,"getCoord"),a(s,"getCoords"),a((function e(t){if(t.length>1&&(0,n.Et)(t[0])&&(0,n.Et)(t[1]))return!0;if(Array.isArray(t[0])&&t[0].length)return e(t[0]);throw new Error("coordinates must only contain numbers")}),"containsNumber"),a((function(e,t,r){if(!t||!r)throw new Error("type and name required");if(!e||e.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.type)}),"geojsonType"),a(d,"featureOf"),a(c,"collectionOf"),a(l,"getGeom"),a(h,"getType")}}]);