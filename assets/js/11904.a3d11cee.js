"use strict";(self.webpackChunkturf_www=self.webpackChunkturf_www||[]).push([[11904],{23494:(e,t,r)=>{r.d(t,{A:()=>y});class n{constructor(e=[],t=o){if(this.data=e,this.length=this.data.length,this.compare=t,this.length>0)for(let r=(this.length>>1)-1;r>=0;r--)this._down(r)}push(e){this.data.push(e),this.length++,this._up(this.length-1)}pop(){if(0===this.length)return;const e=this.data[0],t=this.data.pop();return this.length--,this.length>0&&(this.data[0]=t,this._down(0)),e}peek(){return this.data[0]}_up(e){const{data:t,compare:r}=this,n=t[e];for(;e>0;){const o=e-1>>1,i=t[o];if(r(n,i)>=0)break;t[e]=i,e=o}t[e]=n}_down(e){const{data:t,compare:r}=this,n=this.length>>1,o=t[e];for(;e<n;){let n=1+(e<<1),i=t[n];const s=n+1;if(s<this.length&&r(t[s],i)<0&&(n=s,i=t[s]),r(i,o)>=0)break;t[e]=i,e=n}t[e]=o}}function o(e,t){return e<t?-1:e>t?1:0}function i(e,t){return e.p.x>t.p.x?1:e.p.x<t.p.x?-1:e.p.y!==t.p.y?e.p.y>t.p.y?1:-1:1}function s(e,t){return e.rightSweepEvent.p.x>t.rightSweepEvent.p.x?1:e.rightSweepEvent.p.x<t.rightSweepEvent.p.x?-1:e.rightSweepEvent.p.y!==t.rightSweepEvent.p.y?e.rightSweepEvent.p.y<t.rightSweepEvent.p.y?1:-1:1}class a{constructor(e,t,r,n){this.p={x:e[0],y:e[1]},this.featureId=t,this.ringId=r,this.eventId=n,this.otherEvent=null,this.isLeftEndpoint=null}isSamePoint(e){return this.p.x===e.p.x&&this.p.y===e.p.y}}let p=0,u=0,l=0;function c(e,t){const r="Feature"===e.type?e.geometry:e;let n=r.coordinates;"Polygon"!==r.type&&"MultiLineString"!==r.type||(n=[n]),"LineString"===r.type&&(n=[[n]]);for(let o=0;o<n.length;o++)for(let e=0;e<n[o].length;e++){let r=n[o][e][0],s=null;u+=1;for(let c=0;c<n[o][e].length-1;c++){s=n[o][e][c+1];const h=new a(r,p,u,l),f=new a(s,p,u,l+1);h.otherEvent=f,f.otherEvent=h,i(h,f)>0?(f.isLeftEndpoint=!0,h.isLeftEndpoint=!1):(h.isLeftEndpoint=!0,f.isLeftEndpoint=!1),t.push(h),t.push(f),r=s,l+=1}}p+=1}class h{constructor(e){this.leftSweepEvent=e,this.rightSweepEvent=e.otherEvent}}function f(e,t){if(null===e||null===t)return!1;if(e.leftSweepEvent.ringId===t.leftSweepEvent.ringId&&(e.rightSweepEvent.isSamePoint(t.leftSweepEvent)||e.rightSweepEvent.isSamePoint(t.leftSweepEvent)||e.rightSweepEvent.isSamePoint(t.rightSweepEvent)||e.leftSweepEvent.isSamePoint(t.leftSweepEvent)||e.leftSweepEvent.isSamePoint(t.rightSweepEvent)))return!1;const r=e.leftSweepEvent.p.x,n=e.leftSweepEvent.p.y,o=e.rightSweepEvent.p.x,i=e.rightSweepEvent.p.y,s=t.leftSweepEvent.p.x,a=t.leftSweepEvent.p.y,p=t.rightSweepEvent.p.x,u=t.rightSweepEvent.p.y,l=(u-a)*(o-r)-(p-s)*(i-n),c=(p-s)*(n-a)-(u-a)*(r-s),h=(o-r)*(n-a)-(i-n)*(r-s);if(0===l)return!1;const f=c/l,y=h/l;if(f>=0&&f<=1&&y>=0&&y<=1){return[r+f*(o-r),n+f*(i-n)]}return!1}const y=function(e,t){const r=new n([],i);return function(e,t){if("FeatureCollection"===e.type){const r=e.features;for(let e=0;e<r.length;e++)c(r[e],t)}else c(e,t)}(e,r),function(e,t){t=t||!1;const r=[],o=new n([],s);for(;e.length;){const n=e.pop();if(n.isLeftEndpoint){const e=new h(n);for(let i=0;i<o.data.length;i++){const s=o.data[i];if(t&&s.leftSweepEvent.featureId===n.featureId)continue;const a=f(e,s);!1!==a&&r.push(a)}o.push(e)}else!1===n.isLeftEndpoint&&o.pop()}return r}(r,t)}},34048:(e,t,r)=>{r.d(t,{d:()=>a});var n=r(67149),o=r(83490),i=Object.defineProperty,s=(e,t)=>i(e,"name",{value:t,configurable:!0});function a(e,t,r={}){if(!0===r.final)return p(e,t);const i=(0,o.uG)(e),s=(0,o.uG)(t),a=(0,n.tR)(i[0]),u=(0,n.tR)(s[0]),l=(0,n.tR)(i[1]),c=(0,n.tR)(s[1]),h=Math.sin(u-a)*Math.cos(c),f=Math.cos(l)*Math.sin(c)-Math.sin(l)*Math.cos(c)*Math.cos(u-a);return(0,n.nv)(Math.atan2(h,f))}function p(e,t){let r=a(t,e);return r=(r+180)%360,r}s(a,"bearing"),s(p,"calculateFinalBearing")},4170:(e,t,r)=>{r.d(t,{j:()=>i});var n=r(67149),o=r(83490);function i(e,t,r,i={}){const s=(0,o.uG)(e),a=(0,n.tR)(s[0]),p=(0,n.tR)(s[1]),u=(0,n.tR)(r),l=(0,n.Gf)(t,i.units),c=Math.asin(Math.sin(p)*Math.cos(l)+Math.cos(p)*Math.sin(l)*Math.cos(u)),h=a+Math.atan2(Math.sin(u)*Math.sin(l)*Math.cos(p),Math.cos(l)-Math.sin(p)*Math.sin(c)),f=(0,n.nv)(h),y=(0,n.nv)(c);return(0,n.zx)([f,y],i.properties)}(0,Object.defineProperty)(i,"name",{value:"destination",configurable:!0})},18685:(e,t,r)=>{r.d(t,{I:()=>i});var n=r(83490),o=r(67149);function i(e,t,r={}){var i=(0,n.uG)(e),s=(0,n.uG)(t),a=(0,o.tR)(s[1]-i[1]),p=(0,o.tR)(s[0]-i[0]),u=(0,o.tR)(i[1]),l=(0,o.tR)(s[1]),c=Math.pow(Math.sin(a/2),2)+Math.pow(Math.sin(p/2),2)*Math.cos(u)*Math.cos(l);return(0,o.cJ)(2*Math.atan2(Math.sqrt(c),Math.sqrt(1-c)),r.units)}(0,Object.defineProperty)(i,"name",{value:"distance",configurable:!0})},83490:(e,t,r)=>{r.d(t,{$R:()=>a,Pw:()=>c,bg:()=>l,iw:()=>u,mo:()=>p,uG:()=>s});var n=r(67149),o=Object.defineProperty,i=(e,t)=>o(e,"name",{value:t,configurable:!0});function s(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return[...e.geometry.coordinates];if("Point"===e.type)return[...e.coordinates]}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return[...e];throw new Error("coord must be GeoJSON Point or an Array of numbers")}function a(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function p(e,t,r){if(!e)throw new Error("No feature passed");if(!r)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!e.geometry||e.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.geometry.type)}function u(e,t,r){if(!e)throw new Error("No featureCollection passed");if(!r)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+r+", FeatureCollection required");for(const n of e.features){if(!n||"Feature"!==n.type||!n.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!n.geometry||n.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+n.geometry.type)}}function l(e){return"Feature"===e.type?e.geometry:e}function c(e,t){return"FeatureCollection"===e.type?"FeatureCollection":"GeometryCollection"===e.type?"GeometryCollection":"Feature"===e.type&&null!==e.geometry?e.geometry.type:e.type}i(s,"getCoord"),i(a,"getCoords"),i((function e(t){if(t.length>1&&(0,n.Et)(t[0])&&(0,n.Et)(t[1]))return!0;if(Array.isArray(t[0])&&t[0].length)return e(t[0]);throw new Error("coordinates must only contain numbers")}),"containsNumber"),i((function(e,t,r){if(!t||!r)throw new Error("type and name required");if(!e||e.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.type)}),"geojsonType"),i(p,"featureOf"),i(u,"collectionOf"),i(l,"getGeom"),i(c,"getType")},90522:(e,t,r)=>{r.d(t,{k:()=>a});var n=r(67149),o=r(23494),i=Object.defineProperty,s=o.A;function a(e,t,r={}){const{removeDuplicates:o=!0,ignoreSelfIntersections:i=!1}=r;let a=[];"FeatureCollection"===e.type?a=a.concat(e.features):"Feature"===e.type?a.push(e):"LineString"!==e.type&&"Polygon"!==e.type&&"MultiLineString"!==e.type&&"MultiPolygon"!==e.type||a.push((0,n.N4)(e)),"FeatureCollection"===t.type?a=a.concat(t.features):"Feature"===t.type?a.push(t):"LineString"!==t.type&&"Polygon"!==t.type&&"MultiLineString"!==t.type&&"MultiPolygon"!==t.type||a.push((0,n.N4)(t));const p=s((0,n.Lr)(a),i);let u=[];if(o){const e={};p.forEach((t=>{const r=t.join(",");e[r]||(e[r]=!0,u.push(t))}))}else u=p;return(0,n.Lr)(u.map((e=>(0,n.zx)(e))))}i(a,"name",{value:"lineIntersect",configurable:!0})},11904:(e,t,r)=>{r.d(t,{W:()=>m});var n=r(34048),o=r(18685),i=r(4170),s=r(90522),a=r(63399),p=r(67149),u=r(83490),l=Object.defineProperty,c=Object.defineProperties,h=Object.getOwnPropertyDescriptors,f=Object.getOwnPropertySymbols,y=Object.prototype.hasOwnProperty,g=Object.prototype.propertyIsEnumerable,d=(e,t,r)=>t in e?l(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,w=(e,t)=>{for(var r in t||(t={}))y.call(t,r)&&d(e,r,t[r]);if(f)for(var r of f(t))g.call(t,r)&&d(e,r,t[r]);return e},v=(e,t)=>c(e,h(t));function m(e,t,r={}){if(!e||!t)throw new Error("lines and pt are required arguments");let l=(0,p.zx)([1/0,1/0],{dist:1/0,index:-1,location:-1}),c=0;return(0,a.iw)(e,(function(e){const a=(0,u.$R)(e);for(let u=0;u<a.length-1;u++){const e=(0,p.zx)(a[u]);e.properties.dist=(0,o.I)(t,e,r);const h=(0,p.zx)(a[u+1]);h.properties.dist=(0,o.I)(t,h,r);const f=(0,o.I)(e,h,r),y=Math.max(e.properties.dist,h.properties.dist),g=(0,n.d)(e,h),d=(0,i.j)(t,y,g+90,r),m=(0,i.j)(t,y,g-90,r),E=(0,s.k)((0,p.wi)([d.geometry.coordinates,m.geometry.coordinates]),(0,p.wi)([e.geometry.coordinates,h.geometry.coordinates]));let S;E.features.length>0&&E.features[0]&&(S=v(w({},E.features[0]),{properties:{dist:(0,o.I)(t,E.features[0],r),location:c+(0,o.I)(e,E.features[0],r)}})),e.properties.dist<l.properties.dist&&(l=v(w({},e),{properties:v(w({},e.properties),{index:u,location:c})})),h.properties.dist<l.properties.dist&&(l=v(w({},h),{properties:v(w({},h.properties),{index:u+1,location:c+f})})),S&&S.properties.dist<l.properties.dist&&(l=v(w({},S),{properties:v(w({},S.properties),{index:u})})),c+=f}})),l}l(m,"name",{value:"nearestPointOnLine",configurable:!0})}}]);