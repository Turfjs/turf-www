(self.webpackChunkturf_www=self.webpackChunkturf_www||[]).push([[44363],{99044:(e,t,r)=>{"use strict";r.r(t),r.d(t,{Map0:()=>f,assets:()=>u,contentTitle:()=>d,default:()=>m,frontMatter:()=>c,metadata:()=>h,toc:()=>p});var n=r(74848),i=r(28453),s=r(67149),o=r(3239),a=r(36145),l=r(78478);const c={title:"lineSliceAlong"},d=void 0,h={id:"api/lineSliceAlong",title:"lineSliceAlong",description:"Description",source:"@site/docs/api/lineSliceAlong.mdx",sourceDirName:"api",slug:"/api/lineSliceAlong",permalink:"/docs/next/api/lineSliceAlong",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/lineSliceAlong.mdx",tags:[],version:"current",frontMatter:{title:"lineSliceAlong"},sidebar:"apiSidebar",previous:{title:"lineSlice",permalink:"/docs/next/api/lineSlice"},next:{title:"lineSplit",permalink:"/docs/next/api/lineSplit"}},u={},p=[{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3},{value:"Installation",id:"installation",level:3}];function f(){var e=s.wi([[7,45],[9,45],[14,40],[14,41]]),t={line:e,start:12.5,stop:25,sliced:o.q(e,12.5,25,{units:"miles"})};return(0,n.jsx)(a.A,{addToMap:t})}function g(e){const t={a:"a",code:"code",em:"em",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h3,{id:"description",children:"Description"}),"\n",(0,n.jsxs)(t.p,{children:["Takes a ",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.4",children:"line"}),", a specified distance along the line to a start ",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.2",children:"Point"}),",\nand a specified distance along the line to a stop point\nand returns a subsection of the line in-between those points."]}),"\n",(0,n.jsx)(t.p,{children:"This can be useful for extracting only the part of a route between two distances."}),"\n",(0,n.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"line"}),(0,n.jsx)(t.td,{children:(0,n.jsxs)(t.strong,{children:[(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.2",children:"Feature"}),"<",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.4",children:"LineString"}),"> | ",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.4",children:"LineString"})]})}),(0,n.jsx)(t.td,{children:"input line"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"startDist"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"number"})}),(0,n.jsx)(t.td,{children:"distance along the line to starting point"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"stopDist"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"number"})}),(0,n.jsx)(t.td,{children:"distance along the line to ending point"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:["options",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Object"})}),(0,n.jsxs)(t.td,{children:["Optional parameters ",(0,n.jsx)(t.em,{children:"(default {})"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:["options.units",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"string"})}),(0,n.jsxs)(t.td,{children:["can be degrees, radians, miles, or kilometers ",(0,n.jsx)(t.em,{children:"(default 'kilometers')"})]})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,n.jsx)("ul",{children:(0,n.jsxs)(t.p,{children:[(0,n.jsxs)(t.strong,{children:[(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.2",children:"Feature"}),"<",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.4",children:"LineString"}),">"]})," sliced line"]})}),"\n",(0,n.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:'var line = turf.lineString([\n  [7, 45],\n  [9, 45],\n  [14, 40],\n  [14, 41],\n]);\nvar start = 12.5;\nvar stop = 25;\nvar sliced = turf.lineSliceAlong(line, start, stop, { units: "miles" });\n'})}),"\n","\n",(0,n.jsx)(l.A,{children:()=>(0,n.jsx)(f,{})}),"\n",(0,n.jsx)(t.h3,{id:"installation",children:"Installation"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/line-slice-along\n\nimport { lineSliceAlong } from "@turf/line-slice-along";\nconst result = lineSliceAlong(...);\n'})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/turf\n\nimport * as turf from "@turf/turf";\nconst result = turf.lineSliceAlong(...);\n'})})]})}function m(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(g,{...e})}):g(e)}},42634:()=>{},34048:(e,t,r)=>{"use strict";r.d(t,{d:()=>a});var n=r(67149),i=r(83490),s=Object.defineProperty,o=(e,t)=>s(e,"name",{value:t,configurable:!0});function a(e,t,r={}){if(!0===r.final)return l(e,t);const s=(0,i.uG)(e),o=(0,i.uG)(t),a=(0,n.tR)(s[0]),c=(0,n.tR)(o[0]),d=(0,n.tR)(s[1]),h=(0,n.tR)(o[1]),u=Math.sin(c-a)*Math.cos(h),p=Math.cos(d)*Math.sin(h)-Math.sin(d)*Math.cos(h)*Math.cos(c-a);return(0,n.nv)(Math.atan2(u,p))}function l(e,t){let r=a(t,e);return r=(r+180)%360,r}o(a,"bearing"),o(l,"calculateFinalBearing")},4170:(e,t,r)=>{"use strict";r.d(t,{j:()=>s});var n=r(67149),i=r(83490);function s(e,t,r,s={}){const o=(0,i.uG)(e),a=(0,n.tR)(o[0]),l=(0,n.tR)(o[1]),c=(0,n.tR)(r),d=(0,n.Gf)(t,s.units),h=Math.asin(Math.sin(l)*Math.cos(d)+Math.cos(l)*Math.sin(d)*Math.cos(c)),u=a+Math.atan2(Math.sin(c)*Math.sin(d)*Math.cos(l),Math.cos(d)-Math.sin(l)*Math.sin(h)),p=(0,n.nv)(u),f=(0,n.nv)(h);return(0,n.zx)([p,f],s.properties)}(0,Object.defineProperty)(s,"name",{value:"destination",configurable:!0})},18685:(e,t,r)=>{"use strict";r.d(t,{I:()=>s});var n=r(83490),i=r(67149);function s(e,t,r={}){var s=(0,n.uG)(e),o=(0,n.uG)(t),a=(0,i.tR)(o[1]-s[1]),l=(0,i.tR)(o[0]-s[0]),c=(0,i.tR)(s[1]),d=(0,i.tR)(o[1]),h=Math.pow(Math.sin(a/2),2)+Math.pow(Math.sin(l/2),2)*Math.cos(c)*Math.cos(d);return(0,i.cJ)(2*Math.atan2(Math.sqrt(h),Math.sqrt(1-h)),r.units)}(0,Object.defineProperty)(s,"name",{value:"distance",configurable:!0})},83490:(e,t,r)=>{"use strict";r.d(t,{$R:()=>a,Pw:()=>h,bg:()=>d,iw:()=>c,mo:()=>l,uG:()=>o});var n=r(67149),i=Object.defineProperty,s=(e,t)=>i(e,"name",{value:t,configurable:!0});function o(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return[...e.geometry.coordinates];if("Point"===e.type)return[...e.coordinates]}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return[...e];throw new Error("coord must be GeoJSON Point or an Array of numbers")}function a(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function l(e,t,r){if(!e)throw new Error("No feature passed");if(!r)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!e.geometry||e.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.geometry.type)}function c(e,t,r){if(!e)throw new Error("No featureCollection passed");if(!r)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+r+", FeatureCollection required");for(const n of e.features){if(!n||"Feature"!==n.type||!n.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!n.geometry||n.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+n.geometry.type)}}function d(e){return"Feature"===e.type?e.geometry:e}function h(e,t){return"FeatureCollection"===e.type?"FeatureCollection":"GeometryCollection"===e.type?"GeometryCollection":"Feature"===e.type&&null!==e.geometry?e.geometry.type:e.type}s(o,"getCoord"),s(a,"getCoords"),s((function e(t){if(t.length>1&&(0,n.Et)(t[0])&&(0,n.Et)(t[1]))return!0;if(Array.isArray(t[0])&&t[0].length)return e(t[0]);throw new Error("coordinates must only contain numbers")}),"containsNumber"),s((function(e,t,r){if(!t||!r)throw new Error("type and name required");if(!e||e.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.type)}),"geojsonType"),s(l,"featureOf"),s(c,"collectionOf"),s(d,"getGeom"),s(h,"getType")},3239:(e,t,r)=>{"use strict";r.d(t,{q:()=>a});var n=r(34048),i=r(18685),s=r(4170),o=r(67149);function a(e,t,r,a){if(a=a||{},!(0,o.Gv)(a))throw new Error("options is invalid");var l,c=[];if("Feature"===e.type)l=e.geometry.coordinates;else{if("LineString"!==e.type)throw new Error("input must be a LineString Feature or Geometry");l=e.coordinates}for(var d,h,u,p=l.length,f=0,g=0;g<l.length&&!(t>=f&&g===l.length-1);g++){if(f>t&&0===c.length){if(!(d=t-f))return c.push(l[g]),(0,o.wi)(c);h=(0,n.d)(l[g],l[g-1])-180,u=(0,s.j)(l[g],d,h,a),c.push(u.geometry.coordinates)}if(f>=r)return(d=r-f)?(h=(0,n.d)(l[g],l[g-1])-180,u=(0,s.j)(l[g],d,h,a),c.push(u.geometry.coordinates),(0,o.wi)(c)):(c.push(l[g]),(0,o.wi)(c));if(f>=t&&c.push(l[g]),g===l.length-1)return(0,o.wi)(c);f+=(0,i.I)(l[g],l[g+1],a)}if(f<t&&l.length===p)throw new Error("Start position is beyond line");var m=l[l.length-1];return(0,o.wi)([m,m])}(0,Object.defineProperty)(a,"name",{value:"lineSliceAlong",configurable:!0})}}]);