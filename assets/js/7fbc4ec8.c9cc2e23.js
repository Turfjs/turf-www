"use strict";(self.webpackChunkturf_www=self.webpackChunkturf_www||[]).push([[6093],{6394:(e,t,n)=>{n.r(t),n.d(t,{Map0:()=>u,assets:()=>h,contentTitle:()=>d,default:()=>x,frontMatter:()=>l,metadata:()=>c,toc:()=>p});var r=n(4848),i=n(8453),s=n(800),a=n(6145),o=n(8478);const l={title:"tin"},d=void 0,c={id:"api/tin",title:"tin",description:"Description",source:"@site/docs/api/tin.mdx",sourceDirName:"api",slug:"/api/tin",permalink:"/docs/api/tin",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/tin.mdx",tags:[],version:"current",frontMatter:{title:"tin"},sidebar:"apiSidebar",previous:{title:"planepoint",permalink:"/docs/api/planepoint"},next:{title:"pointsWithinPolygon",permalink:"/docs/api/pointsWithinPolygon"}},h={},p=[{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3},{value:"Installation",id:"installation",level:3}];function u(){for(var e=s._eC(30,{bbox:[50,30,70,50]}),t=0;t<e.features.length;t++)e.features[t].properties.z=~~(9*Math.random());var n=s.ucs(e,"z"),i={tin:n,points:e};for(t=0;t<n.features.length;t++){var o=n.features[t].properties;o.fill="#"+o.a+o.b+o.c}return(0,r.jsx)(a.A,{addToMap:i})}function f(e){const t={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h3,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(t.p,{children:["Takes a set of ",(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.2",children:"points"})," and creates a\n",(0,r.jsx)(t.a,{href:"http://en.wikipedia.org/wiki/Triangulated_irregular_network",children:"Triangulated Irregular Network"}),",\nor a TIN for short, returned as a collection of Polygons. These are often used\nfor developing elevation contour maps or stepped heat visualizations."]}),"\n",(0,r.jsxs)(t.p,{children:["If an optional z-value property is provided then it is added as properties called ",(0,r.jsx)(t.code,{children:"a"}),", ",(0,r.jsx)(t.code,{children:"b"}),",\nand ",(0,r.jsx)(t.code,{children:"c"})," representing its value at each of the points that represent the corners of the\ntriangle."]}),"\n",(0,r.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"points"}),(0,r.jsx)(t.td,{children:(0,r.jsxs)(t.strong,{children:[(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.3",children:"FeatureCollection"}),"<",(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.2",children:"Point"}),">"]})}),(0,r.jsx)(t.td,{children:"input points"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{children:["z",(0,r.jsx)("i",{children:"?"})]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"String"})}),(0,r.jsx)(t.td,{children:"name of the property from which to pull z values This is optional: if not given, then there will be no extra data added to the derived triangles."})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)("ul",{children:(0,r.jsxs)(t.p,{children:[(0,r.jsxs)(t.strong,{children:[(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.3",children:"FeatureCollection"}),"<",(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.6",children:"Polygon"}),">"]})," TIN output"]})}),"\n",(0,r.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:'// generate some random point data\nvar points = turf.randomPoint(30, { bbox: [50, 30, 70, 50] });\n\n// add a random property to each point between 0 and 9\nfor (var i = 0; i < points.features.length; i++) {\n  points.features[i].properties.z = ~~(Math.random() * 9);\n}\nvar tin = turf.tin(points, "z");\n'})}),"\n","\n",(0,r.jsx)(o.A,{children:()=>(0,r.jsx)(u,{})}),"\n",(0,r.jsx)(t.h3,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/tin\n\nimport { tin } from "@turf/tin";\nconst result = tin(...);\n'})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/turf\n\nimport * as turf from "@turf/turf";\nconst result = turf.tin(...);\n'})})]})}function x(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(f,{...e})}):f(e)}}}]);