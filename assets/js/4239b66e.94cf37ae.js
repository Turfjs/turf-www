"use strict";(self.webpackChunkturf_www=self.webpackChunkturf_www||[]).push([[59046],{5548:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var s=n(74848),r=n(28453);n(36145),n(78478);const i={title:"booleanDisjoint"},o=void 0,a={id:"api/booleanDisjoint",title:"booleanDisjoint",description:"Description",source:"@site/versioned_docs/version-7.0.0/api/booleanDisjoint.mdx",sourceDirName:"api",slug:"/api/booleanDisjoint",permalink:"/docs/api/booleanDisjoint",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-7.0.0/api/booleanDisjoint.mdx",tags:[],version:"7.0.0",frontMatter:{title:"booleanDisjoint"},sidebar:"apiSidebar",previous:{title:"booleanCrosses",permalink:"/docs/api/booleanCrosses"},next:{title:"booleanEqual",permalink:"/docs/api/booleanEqual"}},l={},d=[{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3},{value:"Installation",id:"installation",level:3}];function c(e){const t={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h3,{id:"description",children:"Description"}),"\n",(0,s.jsx)(t.p,{children:"Boolean-disjoint returns (TRUE) if the intersection of the two geometries is an empty set."}),"\n",(0,s.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"feature1"}),(0,s.jsx)(t.td,{children:(0,s.jsxs)(t.strong,{children:[(0,s.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1",children:"Geometry"})," | ",(0,s.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.2",children:"Feature"}),"<any>"]})}),(0,s.jsx)(t.td,{children:"GeoJSON Feature or Geometry"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"feature2"}),(0,s.jsx)(t.td,{children:(0,s.jsxs)(t.strong,{children:[(0,s.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1",children:"Geometry"})," | ",(0,s.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.2",children:"Feature"}),"<any>"]})}),(0,s.jsx)(t.td,{children:"GeoJSON Feature or Geometry"})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)("ul",{children:(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"boolean"})," true/false"]})}),"\n",(0,s.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:"var point = turf.point([2, 2]);\nvar line = turf.lineString([\n  [1, 1],\n  [1, 2],\n  [1, 3],\n  [1, 4],\n]);\n\nturf.booleanDisjoint(line, point);\n//=true\n"})}),"\n",(0,s.jsx)(t.h3,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/boolean-disjoint\n\nimport { booleanDisjoint } from "@turf/boolean-disjoint";\nconst result = booleanDisjoint(...);\n'})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/turf\n\nimport * as turf from "@turf/turf";\nconst result = turf.booleanDisjoint(...);\n'})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);