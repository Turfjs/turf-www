(self.webpackChunkturf_www=self.webpackChunkturf_www||[]).push([[95370],{3726:(e,t,r)=>{"use strict";r.r(t),r.d(t,{Map0:()=>f,assets:()=>h,contentTitle:()=>u,default:()=>y,frontMatter:()=>c,metadata:()=>d,toc:()=>p});var n=r(74848),i=r(28453),o=r(67149),s=r(20214),a=r(36145),l=r(78478);const c={title:"nearestPointToLine"},u=void 0,d={id:"api/nearestPointToLine",title:"nearestPointToLine",description:"Description",source:"@site/docs/api/nearestPointToLine.mdx",sourceDirName:"api",slug:"/api/nearestPointToLine",permalink:"/docs/next/api/nearestPointToLine",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/nearestPointToLine.mdx",tags:[],version:"current",frontMatter:{title:"nearestPointToLine"},sidebar:"apiSidebar",previous:{title:"moranIndex",permalink:"/docs/next/api/moranIndex"},next:{title:"pNormDistance",permalink:"/docs/next/api/pNormDistance"}},h={},p=[{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3},{value:"Installation",id:"installation",level:3}];function f(){var e=o.zx([0,0]),t=o.zx([.5,.5]),r=o.Lr([e,t]),i=o.wi([[1,1],[-1,1]]),l={nearest:s.K(r,i),line:i};return(0,n.jsx)(a.A,{addToMap:l})}function m(e){const t={a:"a",code:"code",em:"em",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h3,{id:"description",children:"Description"}),"\n",(0,n.jsxs)(t.p,{children:["Returns the closest ",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.2",children:"point"}),", of a ",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.3",children:"collection"})," of points,\nto a ",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.4",children:"line"}),". The returned point has a ",(0,n.jsx)(t.code,{children:"dist"})," property indicating its distance to the line."]}),"\n",(0,n.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"points"}),(0,n.jsx)(t.td,{children:(0,n.jsxs)(t.strong,{children:[(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.3",children:"FeatureCollection"})," | ",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.8",children:"GeometryCollection"}),"<",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.2",children:"Point"}),">"]})}),(0,n.jsx)(t.td,{children:"Point Collection"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"line"}),(0,n.jsx)(t.td,{children:(0,n.jsxs)(t.strong,{children:[(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.2",children:"Feature"})," | ",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1",children:"Geometry"}),"<",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.4",children:"LineString"}),">"]})}),(0,n.jsx)(t.td,{children:"Line Feature"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:["options",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Object"})}),(0,n.jsx)(t.td,{children:"Optional parameters"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:["options.units",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"string"})}),(0,n.jsxs)(t.td,{children:["unit of the output distance property (eg: degrees, radians, miles, or kilometers) ",(0,n.jsx)(t.em,{children:"(default 'kilometers')"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:["options.properties",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Object"})}),(0,n.jsxs)(t.td,{children:["Translate Properties to Point ",(0,n.jsx)(t.em,{children:"(default {})"})]})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,n.jsx)("ul",{children:(0,n.jsxs)(t.p,{children:[(0,n.jsxs)(t.strong,{children:[(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.2",children:"Feature"}),"<",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.2",children:"Point"}),">"]})," the closest point"]})}),"\n",(0,n.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"var pt1 = turf.point([0, 0]);\nvar pt2 = turf.point([0.5, 0.5]);\nvar points = turf.featureCollection([pt1, pt2]);\nvar line = turf.lineString([\n  [1, 1],\n  [-1, 1],\n]);\n\nvar nearest = turf.nearestPointToLine(points, line);\n"})}),"\n","\n",(0,n.jsx)(l.A,{children:()=>(0,n.jsx)(f,{})}),"\n",(0,n.jsx)(t.h3,{id:"installation",children:"Installation"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/nearest-point-to-line\n\nimport { nearestPointToLine } from "@turf/nearest-point-to-line";\nconst result = nearestPointToLine(...);\n'})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/turf\n\nimport * as turf from "@turf/turf";\nconst result = turf.nearestPointToLine(...);\n'})})]})}function y(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}},42634:()=>{},18685:(e,t,r)=>{"use strict";r.d(t,{I:()=>o});var n=r(83490),i=r(67149);function o(e,t,r={}){var o=(0,n.uG)(e),s=(0,n.uG)(t),a=(0,i.tR)(s[1]-o[1]),l=(0,i.tR)(s[0]-o[0]),c=(0,i.tR)(o[1]),u=(0,i.tR)(s[1]),d=Math.pow(Math.sin(a/2),2)+Math.pow(Math.sin(l/2),2)*Math.cos(c)*Math.cos(u);return(0,i.cJ)(2*Math.atan2(Math.sqrt(d),Math.sqrt(1-d)),r.units)}(0,Object.defineProperty)(o,"name",{value:"distance",configurable:!0})},83490:(e,t,r)=>{"use strict";r.d(t,{$R:()=>a,Pw:()=>d,bg:()=>u,iw:()=>c,mo:()=>l,uG:()=>s});var n=r(67149),i=Object.defineProperty,o=(e,t)=>i(e,"name",{value:t,configurable:!0});function s(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return[...e.geometry.coordinates];if("Point"===e.type)return[...e.coordinates]}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return[...e];throw new Error("coord must be GeoJSON Point or an Array of numbers")}function a(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function l(e,t,r){if(!e)throw new Error("No feature passed");if(!r)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!e.geometry||e.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.geometry.type)}function c(e,t,r){if(!e)throw new Error("No featureCollection passed");if(!r)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+r+", FeatureCollection required");for(const n of e.features){if(!n||"Feature"!==n.type||!n.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!n.geometry||n.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+n.geometry.type)}}function u(e){return"Feature"===e.type?e.geometry:e}function d(e,t){return"FeatureCollection"===e.type?"FeatureCollection":"GeometryCollection"===e.type?"GeometryCollection":"Feature"===e.type&&null!==e.geometry?e.geometry.type:e.type}o(s,"getCoord"),o(a,"getCoords"),o((function e(t){if(t.length>1&&(0,n.Et)(t[0])&&(0,n.Et)(t[1]))return!0;if(Array.isArray(t[0])&&t[0].length)return e(t[0]);throw new Error("coordinates must only contain numbers")}),"containsNumber"),o((function(e,t,r){if(!t||!r)throw new Error("type and name required");if(!e||e.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.type)}),"geojsonType"),o(l,"featureOf"),o(c,"collectionOf"),o(u,"getGeom"),o(d,"getType")},20214:(e,t,r)=>{"use strict";r.d(t,{K:()=>b});var n=r(83490),i=r(63399),o=r(18685),s=r(67149),a=r(82),l=Object.defineProperty,c=(e,t)=>l(e,"name",{value:t,configurable:!0});function u(e,t,r={}){if(r.method||(r.method="geodesic"),r.units||(r.units="kilometers"),!e)throw new Error("pt is required");if(Array.isArray(e)?e=(0,s.zx)(e):"Point"===e.type?e=(0,s.N4)(e):(0,n.mo)(e,"Point","point"),!t)throw new Error("line is required");Array.isArray(t)?t=(0,s.wi)(t):"LineString"===t.type?t=(0,s.N4)(t):(0,n.mo)(t,"LineString","line");let o=1/0;const a=e.geometry.coordinates;return(0,i.RP)(t,(e=>{const t=e.geometry.coordinates[0],n=e.geometry.coordinates[1],i=d(a,t,n,r);i<o&&(o=i)})),(0,s.I3)(o,"degrees",r.units)}function d(e,t,r,n){const i=[r[0]-t[0],r[1]-t[1]],o=h([e[0]-t[0],e[1]-t[1]],i);if(o<=0)return p(e,t,{method:n.method,units:"degrees"});const s=h(i,i);if(s<=o)return p(e,r,{method:n.method,units:"degrees"});const a=o/s;return p(e,[t[0]+a*i[0],t[1]+a*i[1]],{method:n.method,units:"degrees"})}function h(e,t){return e[0]*t[0]+e[1]*t[1]}function p(e,t,r){return"planar"===r.method?(0,a.E)(e,t,r):(0,o.I)(e,t,r)}c(u,"pointToLineDistance"),c(d,"distanceToSegment"),c(h,"dot"),c(p,"calcDistance");var f=Object.defineProperty,m=Object.getOwnPropertySymbols,y=Object.prototype.hasOwnProperty,g=Object.prototype.propertyIsEnumerable,j=(e,t,r)=>t in e?f(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,x=(e,t)=>{for(var r in t||(t={}))y.call(t,r)&&j(e,r,t[r]);if(m)for(var r of m(t))g.call(t,r)&&j(e,r,t[r]);return e},w=(e,t)=>f(e,"name",{value:t,configurable:!0});function b(e,t,r={}){const o=r.units,s=r.properties||{},a=v(e);if(!a.features.length)throw new Error("points must contain features");if(!t)throw new Error("line is required");if("LineString"!==(0,n.Pw)(t))throw new Error("line must be a LineString");let l=1/0,c=null;return(0,i.us)(a,(e=>{const r=u(e,t,{units:o});r<l&&(l=r,c=e)})),c&&(c.properties=x(x(x({},{dist:l}),c.properties),s)),c}function v(e){const t=[];switch(e.geometry?e.geometry.type:e.type){case"GeometryCollection":return(0,i.kX)(e,(e=>{"Point"===e.type&&t.push({type:"Feature",properties:{},geometry:e})})),{type:"FeatureCollection",features:t};case"FeatureCollection":return e.features=e.features.filter((e=>"Point"===e.geometry.type)),e;default:throw new Error("points must be a Point Collection")}}w(b,"nearestPointToLine"),w(v,"normalize")},82:(e,t,r)=>{"use strict";r.d(t,{E:()=>a});var n=r(67149),i=r(83490),o=Object.defineProperty,s=(e,t)=>o(e,"name",{value:t,configurable:!0});function a(e,t,r={}){const o=(0,i.uG)(e),s=(0,i.uG)(t);s[0]+=s[0]-o[0]>180?-360:o[0]-s[0]>180?360:0;const a=l(o,s);return(0,n.I3)(a,"meters",r.units)}function l(e,t,r){const i=r=void 0===r?n.zX:Number(r),o=e[1]*Math.PI/180,s=t[1]*Math.PI/180,a=s-o;let l=Math.abs(t[0]-e[0])*Math.PI/180;l>Math.PI&&(l-=2*Math.PI);const c=Math.log(Math.tan(s/2+Math.PI/4)/Math.tan(o/2+Math.PI/4)),u=Math.abs(c)>1e-11?a/c:Math.cos(o);return Math.sqrt(a*a+u*u*l*l)*i}s(a,"rhumbDistance"),s(l,"calculateRhumbDistance")}}]);