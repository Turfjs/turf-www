"use strict";(self.webpackChunkturf_www=self.webpackChunkturf_www||[]).push([[5370],{3726:(e,t,n)=>{n.r(t),n.d(t,{Map0:()=>x,assets:()=>h,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>d,toc:()=>p});var r=n(4848),s=n(8453),i=n(800),o=n(6145),l=n(8478);const a={title:"nearestPointToLine"},c=void 0,d={id:"api/nearestPointToLine",title:"nearestPointToLine",description:"Description",source:"@site/docs/api/nearestPointToLine.mdx",sourceDirName:"api",slug:"/api/nearestPointToLine",permalink:"/docs/api/nearestPointToLine",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/nearestPointToLine.mdx",tags:[],version:"current",frontMatter:{title:"nearestPointToLine"},sidebar:"apiSidebar",previous:{title:"moranIndex",permalink:"/docs/api/moranIndex"},next:{title:"pNormDistance",permalink:"/docs/api/pNormDistance"}},h={},p=[{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3},{value:"Installation",id:"installation",level:3}];function x(){var e=i.zx7([0,0]),t=i.zx7([.5,.5]),n=i.Lrk([e,t]),s=i.wiw([[1,1],[-1,1]]),l={nearest:i.K9N(n,s),line:s};return(0,r.jsx)(o.A,{addToMap:l})}function j(e){const t={a:"a",code:"code",em:"em",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h3,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(t.p,{children:["Returns the closest ",(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.2",children:"point"}),", of a ",(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.3",children:"collection"})," of points,\nto a ",(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.4",children:"line"}),". The returned point has a ",(0,r.jsx)(t.code,{children:"dist"})," property indicating its distance to the line."]}),"\n",(0,r.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"points"}),(0,r.jsx)(t.td,{children:(0,r.jsxs)(t.strong,{children:[(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.3",children:"FeatureCollection"})," | ",(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.8",children:"GeometryCollection"}),"<",(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.2",children:"Point"}),">"]})}),(0,r.jsx)(t.td,{children:"Point Collection"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"line"}),(0,r.jsx)(t.td,{children:(0,r.jsxs)(t.strong,{children:[(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.2",children:"Feature"})," | ",(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1",children:"Geometry"}),"<",(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.4",children:"LineString"}),">"]})}),(0,r.jsx)(t.td,{children:"Line Feature"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{children:["options",(0,r.jsx)("i",{children:"?"})]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"Object"})}),(0,r.jsx)(t.td,{children:"Optional parameters"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{children:["options.units",(0,r.jsx)("i",{children:"?"})]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"string"})}),(0,r.jsxs)(t.td,{children:["unit of the output distance property (eg: degrees, radians, miles, or kilometers) ",(0,r.jsx)(t.em,{children:"(default 'kilometers')"})]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{children:["options.properties",(0,r.jsx)("i",{children:"?"})]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"Object"})}),(0,r.jsxs)(t.td,{children:["Translate Properties to Point ",(0,r.jsx)(t.em,{children:"(default {})"})]})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)("ul",{children:(0,r.jsxs)(t.p,{children:[(0,r.jsxs)(t.strong,{children:[(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.2",children:"Feature"}),"<",(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.2",children:"Point"}),">"]})," the closest point"]})}),"\n",(0,r.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:"var pt1 = turf.point([0, 0]);\nvar pt2 = turf.point([0.5, 0.5]);\nvar points = turf.featureCollection([pt1, pt2]);\nvar line = turf.lineString([\n  [1, 1],\n  [-1, 1],\n]);\n\nvar nearest = turf.nearestPointToLine(points, line);\n"})}),"\n","\n",(0,r.jsx)(l.A,{children:()=>(0,r.jsx)(x,{})}),"\n",(0,r.jsx)(t.h3,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/nearest-point-to-line\n\nimport { nearestPointToLine } from "@turf/nearest-point-to-line";\nconst result = nearestPointToLine(...);\n'})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/turf\n\nimport * as turf from "@turf/turf";\nconst result = turf.nearestPointToLine(...);\n'})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(j,{...e})}):j(e)}}}]);