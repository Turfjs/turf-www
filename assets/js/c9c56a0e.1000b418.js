"use strict";(self.webpackChunkturf_www=self.webpackChunkturf_www||[]).push([[8417],{936:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var i=t(4848),r=t(8453);t(800),t(6145),t(8478);const s={title:"booleanPointOnLine"},o=void 0,l={id:"api/booleanPointOnLine",title:"booleanPointOnLine",description:"Description",source:"@site/docs/api/booleanPointOnLine.mdx",sourceDirName:"api",slug:"/api/booleanPointOnLine",permalink:"/docs/api/booleanPointOnLine",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/booleanPointOnLine.mdx",tags:[],version:"current",frontMatter:{title:"booleanPointOnLine"},sidebar:"apiSidebar",previous:{title:"booleanPointInPolygon",permalink:"/docs/api/booleanPointInPolygon"},next:{title:"booleanWithin",permalink:"/docs/api/booleanWithin"}},a={},d=[{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3},{value:"Installation",id:"installation",level:3}];function c(e){const n={a:"a",code:"code",em:"em",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h3,{id:"description",children:"Description"}),"\n",(0,i.jsx)(n.p,{children:"Returns true if a point is on a line. Accepts a optional parameter to ignore the\nstart and end vertices of the linestring."}),"\n",(0,i.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Name"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"pt"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.1",children:"Coord"})})}),(0,i.jsx)(n.td,{children:"GeoJSON Point"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"line"}),(0,i.jsx)(n.td,{children:(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.2",children:"Feature"}),"<",(0,i.jsx)(n.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.4",children:"LineString"}),">"]})}),(0,i.jsx)(n.td,{children:"GeoJSON LineString"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:["options",(0,i.jsx)("i",{children:"?"})]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Object"})}),(0,i.jsxs)(n.td,{children:["Optional parameters ",(0,i.jsx)(n.em,{children:"(default {})"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:["options.ignoreEndVertices",(0,i.jsx)("i",{children:"?"})]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"boolean"})}),(0,i.jsxs)(n.td,{children:["whether to ignore the start and end vertices. ",(0,i.jsx)(n.em,{children:"(default false)"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:["options.epsilon",(0,i.jsx)("i",{children:"?"})]}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"number"})}),(0,i.jsx)(n.td,{children:"Fractional number to compare with the cross product result. Useful for dealing with floating points such as lng/lat points"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"returns",children:"Returns"}),"\n",(0,i.jsx)("ul",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"boolean"})," true/false"]})}),"\n",(0,i.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"var pt = turf.point([0, 0]);\nvar line = turf.lineString([\n  [-1, -1],\n  [1, 1],\n  [1.5, 2.2],\n]);\nvar isPointOnLine = turf.booleanPointOnLine(pt, line);\n//=true\n"})}),"\n",(0,i.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'$ npm install @turf/boolean-point-on-line\n\nimport { booleanPointOnLine } from "@turf/boolean-point-on-line";\nconst result = booleanPointOnLine(...);\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'$ npm install @turf/turf\n\nimport * as turf from "@turf/turf";\nconst result = turf.booleanPointOnLine(...);\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);