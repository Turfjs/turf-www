(self.webpackChunkturf_www=self.webpackChunkturf_www||[]).push([[12360],{23154:(e,t,r)=>{"use strict";r.r(t),r.d(t,{Map0:()=>h,assets:()=>f,contentTitle:()=>u,default:()=>g,frontMatter:()=>l,metadata:()=>p,toc:()=>d});var n=r(74848),o=r(28453),i=r(67149),a=r(15061),s=r(36145),c=r(78478);const l={title:"pointOnFeature"},u=void 0,p={id:"api/pointOnFeature",title:"pointOnFeature",description:"Description",source:"@site/docs/api/pointOnFeature.mdx",sourceDirName:"api",slug:"/api/pointOnFeature",permalink:"/docs/next/api/pointOnFeature",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/pointOnFeature.mdx",tags:[],version:"current",frontMatter:{title:"pointOnFeature"},sidebar:"apiSidebar",previous:{title:"midpoint",permalink:"/docs/next/api/midpoint"},next:{title:"pointToLineDistance",permalink:"/docs/next/api/pointToLineDistance"}},f={},d=[{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3},{value:"Installation",id:"installation",level:3}];function h(){var e=i.n1([[[116,-36],[131,-32],[146,-43],[155,-25],[133,-9],[111,-22],[116,-36]]]),t={polygon:e,pointOnPolygon:a.Q(e)};return(0,n.jsx)(s.A,{addToMap:t})}function y(e){const t={a:"a",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h3,{id:"description",children:"Description"}),"\n",(0,n.jsxs)(t.p,{children:["Takes a Feature or FeatureCollection and returns a ",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.2",children:"Point"})," guaranteed to be on the surface of the feature."]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Given a ",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.6",children:"Polygon"}),", the point will be in the area of the polygon"]}),"\n",(0,n.jsxs)(t.li,{children:["Given a ",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.4",children:"LineString"}),", the point will be along the string"]}),"\n",(0,n.jsxs)(t.li,{children:["Given a ",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.2",children:"Point"}),", the point will the same as the input"]}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"geojson"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3",children:"GeoJSON"})})}),(0,n.jsx)(t.td,{children:"any Feature or FeatureCollection"})]})})]}),"\n",(0,n.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,n.jsx)("ul",{children:(0,n.jsxs)(t.p,{children:[(0,n.jsxs)(t.strong,{children:[(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.2",children:"Feature"}),"<",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.2",children:"Point"}),">"]})," a point on the surface of ",(0,n.jsx)(t.code,{children:"input"})]})}),"\n",(0,n.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"var polygon = turf.polygon([\n  [\n    [116, -36],\n    [131, -32],\n    [146, -43],\n    [155, -25],\n    [133, -9],\n    [111, -22],\n    [116, -36],\n  ],\n]);\n\nvar pointOnPolygon = turf.pointOnFeature(polygon);\n"})}),"\n","\n",(0,n.jsx)(c.A,{children:()=>(0,n.jsx)(h,{})}),"\n",(0,n.jsx)(t.h3,{id:"installation",children:"Installation"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/point-on-feature\n\nimport { pointOnFeature } from "@turf/point-on-feature";\nconst result = pointOnFeature(...);\n'})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/turf\n\nimport * as turf from "@turf/turf";\nconst result = turf.pointOnFeature(...);\n'})})]})}function g(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(y,{...e})}):y(e)}},42634:()=>{},99589:(e,t,r)=>{"use strict";r.d(t,{Q:()=>o});var n=r(63399);function o(e,t={}){if(null!=e.bbox&&!0!==t.recompute)return e.bbox;const r=[1/0,1/0,-1/0,-1/0];return(0,n.Fh)(e,(e=>{r[0]>e[0]&&(r[0]=e[0]),r[1]>e[1]&&(r[1]=e[1]),r[2]<e[0]&&(r[2]=e[0]),r[3]<e[1]&&(r[3]=e[1])})),r}(0,Object.defineProperty)(o,"name",{value:"bbox",configurable:!0})},10200:(e,t,r)=>{"use strict";r.d(t,{m:()=>s});const n=function(e,t){for(var r=0,n=0,o=0,i=0,a=0,s=0,c=0,l=0,u=null,p=null,f=e[0],d=e[1],h=t.length;r<h;r++){n=0;var y=t[r].length-1,g=t[r];if((u=g[0])[0]!==g[y][0]&&u[1]!==g[y][1])throw new Error("First and last coordinates in a ring must be the same");for(a=u[0]-f,s=u[1]-d;n<y;n++)if(l=(p=g[n+1])[1]-d,s<0&&l<0||s>0&&l>0)s=l,a=(u=p)[0]-f;else{if(c=p[0]-e[0],l>0&&s<=0){if((i=a*l-c*s)>0)o+=1;else if(0===i)return 0}else if(s>0&&l<=0){if((i=a*l-c*s)<0)o+=1;else if(0===i)return 0}else if(0===l&&s<0){if(0===(i=a*l-c*s))return 0}else if(0===s&&l<0){if(0===(i=a*l-c*s))return 0}else if(0===s&&0===l){if(c<=0&&a>=0)return 0;if(a<=0&&c>=0)return 0}u=p,s=l,a=c}}return o%2!=0};var o=r(83490),i=Object.defineProperty,a=(e,t)=>i(e,"name",{value:t,configurable:!0});function s(e,t,r={}){if(!e)throw new Error("point is required");if(!t)throw new Error("polygon is required");const i=(0,o.uG)(e),a=(0,o.bg)(t),s=a.type,l=t.bbox;let u=a.coordinates;if(l&&!1===c(i,l))return!1;"Polygon"===s&&(u=[u]);let p=!1;for(var f=0;f<u.length;++f){const e=n(i,u[f]);if(0===e)return!r.ignoreBoundary;e&&(p=!0)}return p}function c(e,t){return t[0]<=e[0]&&t[1]<=e[1]&&t[2]>=e[0]&&t[3]>=e[1]}a(s,"booleanPointInPolygon"),a(c,"inBBox")},36223:(e,t,r)=>{"use strict";r.d(t,{g:()=>i});var n=r(99589),o=r(67149);function i(e,t={}){const r=(0,n.Q)(e),i=(r[0]+r[2])/2,a=(r[1]+r[3])/2;return(0,o.zx)([i,a],t.properties,t)}(0,Object.defineProperty)(i,"name",{value:"center",configurable:!0})},53257:(e,t,r)=>{"use strict";r.d(t,{Rd:()=>s,o8:()=>i});var n=Object.defineProperty,o=(e,t)=>n(e,"name",{value:t,configurable:!0});function i(e){if(!e)throw new Error("geojson is required");switch(e.type){case"Feature":return a(e);case"FeatureCollection":return c(e);case"Point":case"LineString":case"Polygon":case"MultiPoint":case"MultiLineString":case"MultiPolygon":case"GeometryCollection":return l(e);default:throw new Error("unknown GeoJSON type")}}function a(e){const t={type:"Feature"};return Object.keys(e).forEach((r=>{switch(r){case"type":case"properties":case"geometry":return;default:t[r]=e[r]}})),t.properties=s(e.properties),null==e.geometry?t.geometry=null:t.geometry=l(e.geometry),t}function s(e){const t={};return e?(Object.keys(e).forEach((r=>{const n=e[r];"object"==typeof n?null===n?t[r]=null:Array.isArray(n)?t[r]=n.map((e=>e)):t[r]=s(n):t[r]=n})),t):t}function c(e){const t={type:"FeatureCollection"};return Object.keys(e).forEach((r=>{switch(r){case"type":case"features":return;default:t[r]=e[r]}})),t.features=e.features.map((e=>a(e))),t}function l(e){const t={type:e.type};return e.bbox&&(t.bbox=e.bbox),"GeometryCollection"===e.type?(t.geometries=e.geometries.map((e=>l(e))),t):(t.coordinates=u(e.coordinates),t)}function u(e){const t=e;return"object"!=typeof t[0]?t.slice():t.map((e=>u(e)))}o(i,"clone"),o(a,"cloneFeature"),o(s,"cloneProperties"),o(c,"cloneFeatureCollection"),o(l,"cloneGeometry"),o(u,"deepSlice")},18685:(e,t,r)=>{"use strict";r.d(t,{I:()=>i});var n=r(83490),o=r(67149);function i(e,t,r={}){var i=(0,n.uG)(e),a=(0,n.uG)(t),s=(0,o.tR)(a[1]-i[1]),c=(0,o.tR)(a[0]-i[0]),l=(0,o.tR)(i[1]),u=(0,o.tR)(a[1]),p=Math.pow(Math.sin(s/2),2)+Math.pow(Math.sin(c/2),2)*Math.cos(l)*Math.cos(u);return(0,o.cJ)(2*Math.atan2(Math.sqrt(p),Math.sqrt(1-p)),r.units)}(0,Object.defineProperty)(i,"name",{value:"distance",configurable:!0})},30021:(e,t,r)=>{"use strict";r.d(t,{G:()=>i});var n=r(63399),o=r(67149);function i(e){const t=[];return"FeatureCollection"===e.type?(0,n.us)(e,(function(e){(0,n.Fh)(e,(function(r){t.push((0,o.zx)(r,e.properties))}))})):"Feature"===e.type?(0,n.Fh)(e,(function(r){t.push((0,o.zx)(r,e.properties))})):(0,n.Fh)(e,(function(e){t.push((0,o.zx)(e))})),(0,o.Lr)(t)}(0,Object.defineProperty)(i,"name",{value:"explode",configurable:!0})},83490:(e,t,r)=>{"use strict";r.d(t,{$R:()=>s,Pw:()=>p,bg:()=>u,iw:()=>l,mo:()=>c,uG:()=>a});var n=r(67149),o=Object.defineProperty,i=(e,t)=>o(e,"name",{value:t,configurable:!0});function a(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return[...e.geometry.coordinates];if("Point"===e.type)return[...e.coordinates]}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return[...e];throw new Error("coord must be GeoJSON Point or an Array of numbers")}function s(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function c(e,t,r){if(!e)throw new Error("No feature passed");if(!r)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!e.geometry||e.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.geometry.type)}function l(e,t,r){if(!e)throw new Error("No featureCollection passed");if(!r)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+r+", FeatureCollection required");for(const n of e.features){if(!n||"Feature"!==n.type||!n.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!n.geometry||n.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+n.geometry.type)}}function u(e){return"Feature"===e.type?e.geometry:e}function p(e,t){return"FeatureCollection"===e.type?"FeatureCollection":"GeometryCollection"===e.type?"GeometryCollection":"Feature"===e.type&&null!==e.geometry?e.geometry.type:e.type}i(a,"getCoord"),i(s,"getCoords"),i((function e(t){if(t.length>1&&(0,n.Et)(t[0])&&(0,n.Et)(t[1]))return!0;if(Array.isArray(t[0])&&t[0].length)return e(t[0]);throw new Error("coordinates must only contain numbers")}),"containsNumber"),i((function(e,t,r){if(!t||!r)throw new Error("type and name required");if(!e||e.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.type)}),"geojsonType"),i(c,"featureOf"),i(l,"collectionOf"),i(u,"getGeom"),i(p,"getType")},43665:(e,t,r)=>{"use strict";r.d(t,{x:()=>y});var n=r(53257),o=r(18685),i=r(63399),a=Object.defineProperty,s=Object.defineProperties,c=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,u=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,f=(e,t,r)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,d=(e,t)=>{for(var r in t||(t={}))u.call(t,r)&&f(e,r,t[r]);if(l)for(var r of l(t))p.call(t,r)&&f(e,r,t[r]);return e},h=(e,t)=>s(e,c(t));function y(e,t,r={}){if(!e)throw new Error("targetPoint is required");if(!t)throw new Error("points is required");let a=1/0,s=0;(0,i.us)(t,((t,n)=>{const i=(0,o.I)(e,t,r);i<a&&(s=n,a=i)}));const c=(0,n.o8)(t.features[s]);return h(d({},c),{properties:h(d({},c.properties),{featureIndex:s,distanceToPoint:a})})}a(y,"name",{value:"nearestPoint",configurable:!0})},15061:(e,t,r)=>{"use strict";r.d(t,{Q:()=>u});var n=r(30021),o=r(36223),i=r(43665),a=r(10200),s=r(67149),c=Object.defineProperty,l=(e,t)=>c(e,"name",{value:t,configurable:!0});function u(e){const t=p(e),r=(0,o.g)(t);let c=!1,l=0;for(;!c&&l<t.features.length;){const e=t.features[l].geometry;let n,o,i,s,u,p,d=!1;if("Point"===e.type)r.geometry.coordinates[0]===e.coordinates[0]&&r.geometry.coordinates[1]===e.coordinates[1]&&(c=!0);else if("MultiPoint"===e.type){let t=!1,n=0;for(;!t&&n<e.coordinates.length;)r.geometry.coordinates[0]===e.coordinates[n][0]&&r.geometry.coordinates[1]===e.coordinates[n][1]&&(c=!0,t=!0),n++}else if("LineString"===e.type){let t=0;for(;!d&&t<e.coordinates.length-1;)n=r.geometry.coordinates[0],o=r.geometry.coordinates[1],i=e.coordinates[t][0],s=e.coordinates[t][1],u=e.coordinates[t+1][0],p=e.coordinates[t+1][1],f(n,o,i,s,u,p)&&(d=!0,c=!0),t++}else if("MultiLineString"===e.type){let t=0;for(;t<e.coordinates.length;){d=!1;let a=0;const l=e.coordinates[t];for(;!d&&a<l.length-1;)n=r.geometry.coordinates[0],o=r.geometry.coordinates[1],i=l[a][0],s=l[a][1],u=l[a+1][0],p=l[a+1][1],f(n,o,i,s,u,p)&&(d=!0,c=!0),a++;t++}}else"Polygon"!==e.type&&"MultiPolygon"!==e.type||(0,a.m)(r,e)&&(c=!0);l++}if(c)return r;{const e=(0,s.Lr)([]);for(let r=0;r<t.features.length;r++)e.features=e.features.concat((0,n.G)(t.features[r]).features);return(0,s.zx)((0,i.x)(r,e).geometry.coordinates)}}function p(e){return"FeatureCollection"!==e.type?"Feature"!==e.type?(0,s.Lr)([(0,s.N4)(e)]):(0,s.Lr)([e]):e}function f(e,t,r,n,o,i){return Math.sqrt((o-r)*(o-r)+(i-n)*(i-n))===Math.sqrt((e-r)*(e-r)+(t-n)*(t-n))+Math.sqrt((o-e)*(o-e)+(i-t)*(i-t))}l(u,"pointOnFeature"),l(p,"normalize"),l(f,"pointOnSegment")}}]);