(self.webpackChunkturf_www=self.webpackChunkturf_www||[]).push([[83274],{19363:(e,r,t)=>{"use strict";t.r(r),t.d(r,{Map0:()=>f,assets:()=>u,contentTitle:()=>d,default:()=>g,frontMatter:()=>c,metadata:()=>p,toc:()=>h});var o=t(74848),n=t(28453),i=t(67149),s=t(19293),l=t(36145),a=t(78478);const c={title:"polygonToLine"},d=void 0,p={id:"api/polygonToLine",title:"polygonToLine",description:"Description",source:"@site/versioned_docs/version-7.0.0/api/polygonToLine.mdx",sourceDirName:"api",slug:"/api/polygonToLine",permalink:"/docs/api/polygonToLine",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-7.0.0/api/polygonToLine.mdx",tags:[],version:"7.0.0",frontMatter:{title:"polygonToLine"},sidebar:"apiSidebar",previous:{title:"lineToPolygon",permalink:"/docs/api/lineToPolygon"},next:{title:"polygonize",permalink:"/docs/api/polygonize"}},u={},h=[{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3},{value:"Installation",id:"installation",level:3}];function f(){var e=i.n1([[[125,-30],[145,-30],[145,-20],[125,-20],[125,-30]]]),r={line:s.CN(e)};return(0,o.jsx)(l.A,{addToMap:r})}function y(e){const r={a:"a",code:"code",em:"em",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.h3,{id:"description",children:"Description"}),"\n",(0,o.jsxs)(r.p,{children:["Converts a ",(0,o.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.6",children:"Polygon"})," to ",(0,o.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.4",children:"(Multi)LineString"})," or ",(0,o.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.7",children:"MultiPolygon"})," to a\n",(0,o.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.3",children:"FeatureCollection"})," of ",(0,o.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.4",children:"(Multi)LineString"}),"."]}),"\n",(0,o.jsx)(r.h3,{id:"parameters",children:"Parameters"}),"\n",(0,o.jsxs)(r.table,{children:[(0,o.jsx)(r.thead,{children:(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.th,{children:"Name"}),(0,o.jsx)(r.th,{children:"Type"}),(0,o.jsx)(r.th,{children:"Description"})]})}),(0,o.jsxs)(r.tbody,{children:[(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:"poly"}),(0,o.jsx)(r.td,{children:(0,o.jsxs)(r.strong,{children:[(0,o.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.2",children:"Feature"}),"<",(0,o.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.6",children:"Polygon"})," | ",(0,o.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.7",children:"MultiPolygon"}),">"]})}),(0,o.jsx)(r.td,{children:"Feature to convert"})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsxs)(r.td,{children:["options",(0,o.jsx)("i",{children:"?"})]}),(0,o.jsx)(r.td,{children:(0,o.jsx)(r.strong,{children:"Object"})}),(0,o.jsxs)(r.td,{children:["Optional parameters ",(0,o.jsx)(r.em,{children:"(default {})"})]})]}),(0,o.jsxs)(r.tr,{children:[(0,o.jsxs)(r.td,{children:["options.properties",(0,o.jsx)("i",{children:"?"})]}),(0,o.jsx)(r.td,{children:(0,o.jsx)(r.strong,{children:"Object"})}),(0,o.jsxs)(r.td,{children:["translates GeoJSON properties to Feature ",(0,o.jsx)(r.em,{children:"(default {})"})]})]})]})]}),"\n",(0,o.jsx)(r.h3,{id:"returns",children:"Returns"}),"\n",(0,o.jsx)("ul",{children:(0,o.jsxs)(r.p,{children:[(0,o.jsxs)(r.strong,{children:[(0,o.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.3",children:"FeatureCollection"})," | ",(0,o.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.2",children:"Feature"}),"<",(0,o.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.4",children:"LineString"})," | MultiLinestring>"]})," converted (Multi)Polygon to (Multi)LineString"]})}),"\n",(0,o.jsx)(r.h3,{id:"examples",children:"Examples"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-javascript",children:"var poly = turf.polygon([\n  [\n    [125, -30],\n    [145, -30],\n    [145, -20],\n    [125, -20],\n    [125, -30],\n  ],\n]);\n\nvar line = turf.polygonToLine(poly);\n"})}),"\n","\n",(0,o.jsx)(a.A,{children:()=>(0,o.jsx)(f,{})}),"\n",(0,o.jsx)(r.h3,{id:"installation",children:"Installation"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-javascript",children:'$ npm install @turf/polygon-to-line\n\nimport { polygonToLine } from "@turf/polygon-to-line";\nconst result = polygonToLine(...);\n'})}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-javascript",children:'$ npm install @turf/turf\n\nimport * as turf from "@turf/turf";\nconst result = turf.polygonToLine(...);\n'})})]})}function g(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(y,{...e})}):y(e)}},42634:()=>{},83490:(e,r,t)=>{"use strict";t.d(r,{$R:()=>l,Pw:()=>p,bg:()=>d,iw:()=>c,mo:()=>a,uG:()=>s});var o=t(67149),n=Object.defineProperty,i=(e,r)=>n(e,"name",{value:r,configurable:!0});function s(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return[...e.geometry.coordinates];if("Point"===e.type)return[...e.coordinates]}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return[...e];throw new Error("coord must be GeoJSON Point or an Array of numbers")}function l(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function a(e,r,t){if(!e)throw new Error("No feature passed");if(!t)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!e.geometry||e.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.geometry.type)}function c(e,r,t){if(!e)throw new Error("No featureCollection passed");if(!t)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+t+", FeatureCollection required");for(const o of e.features){if(!o||"Feature"!==o.type||!o.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!o.geometry||o.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+o.geometry.type)}}function d(e){return"Feature"===e.type?e.geometry:e}function p(e,r){return"FeatureCollection"===e.type?"FeatureCollection":"GeometryCollection"===e.type?"GeometryCollection":"Feature"===e.type&&null!==e.geometry?e.geometry.type:e.type}i(s,"getCoord"),i(l,"getCoords"),i((function e(r){if(r.length>1&&(0,o.Et)(r[0])&&(0,o.Et)(r[1]))return!0;if(Array.isArray(r[0])&&r[0].length)return e(r[0]);throw new Error("coordinates must only contain numbers")}),"containsNumber"),i((function(e,r,t){if(!r||!t)throw new Error("type and name required");if(!e||e.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.type)}),"geojsonType"),i(a,"featureOf"),i(c,"collectionOf"),i(d,"getGeom"),i(p,"getType")},19293:(e,r,t)=>{"use strict";t.d(r,{CN:()=>l});var o=t(67149),n=t(83490),i=Object.defineProperty,s=(e,r)=>i(e,"name",{value:r,configurable:!0});function l(e,r={}){const t=(0,n.bg)(e);switch(r.properties||"Feature"!==e.type||(r.properties=e.properties),t.type){case"Polygon":return a(t,r);case"MultiPolygon":return c(t,r);default:throw new Error("invalid poly")}}function a(e,r={}){return d((0,n.bg)(e).coordinates,r.properties?r.properties:"Feature"===e.type?e.properties:{})}function c(e,r={}){const t=(0,n.bg)(e).coordinates,i=r.properties?r.properties:"Feature"===e.type?e.properties:{},s=[];return t.forEach((e=>{s.push(d(e,i))})),(0,o.Lr)(s)}function d(e,r){return e.length>1?(0,o.NU)(e,r):(0,o.wi)(e[0],r)}s(l,"polygonToLine"),s(a,"singlePolygonToLine"),s(c,"multiPolygonToLine"),s(d,"coordsToLine")}}]);