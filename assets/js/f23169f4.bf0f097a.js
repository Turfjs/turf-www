(self.webpackChunkturf_www=self.webpackChunkturf_www||[]).push([[42918],{50994:(e,r,t)=>{"use strict";t.r(r),t.d(r,{Map0:()=>p,assets:()=>u,contentTitle:()=>d,default:()=>g,frontMatter:()=>l,metadata:()=>c,toc:()=>h});var n=t(74848),i=t(28453),s=t(98199),o=t(36145),a=t(78478);const l={title:"triangleGrid"},d=void 0,c={id:"api/triangleGrid",title:"triangleGrid",description:"Description",source:"@site/versioned_docs/version-7.0.0/api/triangleGrid.mdx",sourceDirName:"api",slug:"/api/triangleGrid",permalink:"/docs/api/triangleGrid",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-7.0.0/api/triangleGrid.mdx",tags:[],version:"7.0.0",frontMatter:{title:"triangleGrid"},sidebar:"apiSidebar",previous:{title:"squareGrid",permalink:"/docs/api/squareGrid"},next:{title:"nearestPoint",permalink:"/docs/api/nearestPoint"}},u={},h=[{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3},{value:"Installation",id:"installation",level:3}];function p(){var e={triangleGrid:s.V([-95,30,-85,40],50,{units:"miles"})};return(0,n.jsx)(o.A,{addToMap:e})}function f(e){const r={a:"a",code:"code",em:"em",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h3,{id:"description",children:"Description"}),"\n",(0,n.jsxs)(r.p,{children:["Takes a bounding box and a cell depth and returns a set of triangular ",(0,n.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.6",children:"polygons"})," in a grid."]}),"\n",(0,n.jsx)(r.h3,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Name"}),(0,n.jsx)(r.th,{children:"Type"}),(0,n.jsx)(r.th,{children:"Description"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"bbox"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.strong,{children:"Array<number>"})}),(0,n.jsx)(r.td,{children:"extent in [minX, minY, maxX, maxY] order"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"cellSide"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.strong,{children:"number"})}),(0,n.jsx)(r.td,{children:"dimension of each cell"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsxs)(r.td,{children:["options",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.strong,{children:"Object"})}),(0,n.jsxs)(r.td,{children:["Optional parameters ",(0,n.jsx)(r.em,{children:"(default {})"})]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsxs)(r.td,{children:["options.units",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.strong,{children:"string"})}),(0,n.jsxs)(r.td,{children:["used in calculating cellSide, can be degrees, radians, miles, or kilometers ",(0,n.jsx)(r.em,{children:"(default 'kilometers')"})]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsxs)(r.td,{children:["options.mask",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(r.td,{children:(0,n.jsxs)(r.strong,{children:[(0,n.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.2",children:"Feature"}),"<",(0,n.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.6",children:"Polygon"}),">"]})}),(0,n.jsx)(r.td,{children:"if passed a Polygon or MultiPolygon, the grid Points will be created only inside it"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsxs)(r.td,{children:["options.properties",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.strong,{children:"Object"})}),(0,n.jsxs)(r.td,{children:["passed to each point of the grid ",(0,n.jsx)(r.em,{children:"(default {})"})]})]})]})]}),"\n",(0,n.jsx)(r.h3,{id:"returns",children:"Returns"}),"\n",(0,n.jsx)("ul",{children:(0,n.jsxs)(r.p,{children:[(0,n.jsxs)(r.strong,{children:[(0,n.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.3",children:"FeatureCollection"}),"<",(0,n.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.6",children:"Polygon"}),">"]})," grid of polygons"]})}),"\n",(0,n.jsx)(r.h3,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-javascript",children:'var bbox = [-95, 30, -85, 40];\nvar cellSide = 50;\nvar options = { units: "miles" };\n\nvar triangleGrid = turf.triangleGrid(bbox, cellSide, options);\n'})}),"\n","\n",(0,n.jsx)(a.A,{children:()=>(0,n.jsx)(p,{})}),"\n",(0,n.jsx)(r.h3,{id:"installation",children:"Installation"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-javascript",children:'$ npm install @turf/triangle-grid\n\nimport { triangleGrid } from "@turf/triangle-grid";\nconst result = triangleGrid(...);\n'})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-javascript",children:'$ npm install @turf/turf\n\nimport * as turf from "@turf/turf";\nconst result = turf.triangleGrid(...);\n'})})]})}function g(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(f,{...e})}):f(e)}},42634:()=>{},18685:(e,r,t)=>{"use strict";t.d(r,{I:()=>s});var n=t(83490),i=t(67149);function s(e,r,t={}){var s=(0,n.uG)(e),o=(0,n.uG)(r),a=(0,i.tR)(o[1]-s[1]),l=(0,i.tR)(o[0]-s[0]),d=(0,i.tR)(s[1]),c=(0,i.tR)(o[1]),u=Math.pow(Math.sin(a/2),2)+Math.pow(Math.sin(l/2),2)*Math.cos(d)*Math.cos(c);return(0,i.cJ)(2*Math.atan2(Math.sqrt(u),Math.sqrt(1-u)),t.units)}(0,Object.defineProperty)(s,"name",{value:"distance",configurable:!0})},1529:(e,r,t)=>{"use strict";t.d(r,{y:()=>o});var n=t(67149),i=t(63399),s=t(59004);function o(e,r={}){const t=[];if((0,i.kX)(e,(e=>{t.push(e.coordinates)})),t.length<2)throw new Error("Must specify at least 2 geometries");const o=s.intersection(t[0],...t.slice(1));return 0===o.length?null:1===o.length?(0,n.n1)(o[0],r.properties):(0,n.g5)(o,r.properties)}(0,Object.defineProperty)(o,"name",{value:"intersect",configurable:!0})},83490:(e,r,t)=>{"use strict";t.d(r,{$R:()=>a,Pw:()=>u,bg:()=>c,iw:()=>d,mo:()=>l,uG:()=>o});var n=t(67149),i=Object.defineProperty,s=(e,r)=>i(e,"name",{value:r,configurable:!0});function o(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return[...e.geometry.coordinates];if("Point"===e.type)return[...e.coordinates]}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return[...e];throw new Error("coord must be GeoJSON Point or an Array of numbers")}function a(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function l(e,r,t){if(!e)throw new Error("No feature passed");if(!t)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!e.geometry||e.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.geometry.type)}function d(e,r,t){if(!e)throw new Error("No featureCollection passed");if(!t)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+t+", FeatureCollection required");for(const n of e.features){if(!n||"Feature"!==n.type||!n.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!n.geometry||n.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+n.geometry.type)}}function c(e){return"Feature"===e.type?e.geometry:e}function u(e,r){return"FeatureCollection"===e.type?"FeatureCollection":"GeometryCollection"===e.type?"GeometryCollection":"Feature"===e.type&&null!==e.geometry?e.geometry.type:e.type}s(o,"getCoord"),s(a,"getCoords"),s((function e(r){if(r.length>1&&(0,n.Et)(r[0])&&(0,n.Et)(r[1]))return!0;if(Array.isArray(r[0])&&r[0].length)return e(r[0]);throw new Error("coordinates must only contain numbers")}),"containsNumber"),s((function(e,r,t){if(!r||!t)throw new Error("type and name required");if(!e||e.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.type)}),"geojsonType"),s(l,"featureOf"),s(d,"collectionOf"),s(c,"getGeom"),s(u,"getType")},98199:(e,r,t)=>{"use strict";t.d(r,{V:()=>o});var n=t(18685),i=t(1529),s=t(67149);function o(e,r,t={}){for(var o=[],a=r/(0,n.I)([e[0],e[1]],[e[2],e[1]],t)*(e[2]-e[0]),l=r/(0,n.I)([e[0],e[1]],[e[0],e[3]],t)*(e[3]-e[1]),d=0,c=e[0];c<=e[2];){for(var u=0,h=e[1];h<=e[3];){var p=null,f=null;d%2==0&&u%2==0?(p=(0,s.n1)([[[c,h],[c,h+l],[c+a,h],[c,h]]],t.properties),f=(0,s.n1)([[[c,h+l],[c+a,h+l],[c+a,h],[c,h+l]]],t.properties)):d%2==0&&u%2==1?(p=(0,s.n1)([[[c,h],[c+a,h+l],[c+a,h],[c,h]]],t.properties),f=(0,s.n1)([[[c,h],[c,h+l],[c+a,h+l],[c,h]]],t.properties)):u%2==0&&d%2==1?(p=(0,s.n1)([[[c,h],[c,h+l],[c+a,h+l],[c,h]]],t.properties),f=(0,s.n1)([[[c,h],[c+a,h+l],[c+a,h],[c,h]]],t.properties)):u%2==1&&d%2==1&&(p=(0,s.n1)([[[c,h],[c,h+l],[c+a,h],[c,h]]],t.properties),f=(0,s.n1)([[[c,h+l],[c+a,h+l],[c+a,h],[c,h+l]]],t.properties)),t.mask?((0,i.y)((0,s.Lr)([t.mask,p]))&&o.push(p),(0,i.y)((0,s.Lr)([t.mask,f]))&&o.push(f)):(o.push(p),o.push(f)),h+=l,u++}d++,c+=a}return(0,s.Lr)(o)}(0,Object.defineProperty)(o,"name",{value:"triangleGrid",configurable:!0})}}]);