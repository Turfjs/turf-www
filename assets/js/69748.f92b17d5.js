"use strict";(self.webpackChunkturf_www=self.webpackChunkturf_www||[]).push([[69748],{23494:(e,t,r)=>{r.d(t,{A:()=>y});class n{constructor(e=[],t=o){if(this.data=e,this.length=this.data.length,this.compare=t,this.length>0)for(let r=(this.length>>1)-1;r>=0;r--)this._down(r)}push(e){this.data.push(e),this.length++,this._up(this.length-1)}pop(){if(0===this.length)return;const e=this.data[0],t=this.data.pop();return this.length--,this.length>0&&(this.data[0]=t,this._down(0)),e}peek(){return this.data[0]}_up(e){const{data:t,compare:r}=this,n=t[e];for(;e>0;){const o=e-1>>1,i=t[o];if(r(n,i)>=0)break;t[e]=i,e=o}t[e]=n}_down(e){const{data:t,compare:r}=this,n=this.length>>1,o=t[e];for(;e<n;){let n=1+(e<<1),i=t[n];const s=n+1;if(s<this.length&&r(t[s],i)<0&&(n=s,i=t[s]),r(i,o)>=0)break;t[e]=i,e=n}t[e]=o}}function o(e,t){return e<t?-1:e>t?1:0}function i(e,t){return e.p.x>t.p.x?1:e.p.x<t.p.x?-1:e.p.y!==t.p.y?e.p.y>t.p.y?1:-1:1}function s(e,t){return e.rightSweepEvent.p.x>t.rightSweepEvent.p.x?1:e.rightSweepEvent.p.x<t.rightSweepEvent.p.x?-1:e.rightSweepEvent.p.y!==t.rightSweepEvent.p.y?e.rightSweepEvent.p.y<t.rightSweepEvent.p.y?1:-1:1}class u{constructor(e,t,r,n){this.p={x:e[0],y:e[1]},this.featureId=t,this.ringId=r,this.eventId=n,this.otherEvent=null,this.isLeftEndpoint=null}isSamePoint(e){return this.p.x===e.p.x&&this.p.y===e.p.y}}let a=0,p=0,l=0;function f(e,t){const r="Feature"===e.type?e.geometry:e;let n=r.coordinates;"Polygon"!==r.type&&"MultiLineString"!==r.type||(n=[n]),"LineString"===r.type&&(n=[[n]]);for(let o=0;o<n.length;o++)for(let e=0;e<n[o].length;e++){let r=n[o][e][0],s=null;p+=1;for(let f=0;f<n[o][e].length-1;f++){s=n[o][e][f+1];const c=new u(r,a,p,l),h=new u(s,a,p,l+1);c.otherEvent=h,h.otherEvent=c,i(c,h)>0?(h.isLeftEndpoint=!0,c.isLeftEndpoint=!1):(c.isLeftEndpoint=!0,h.isLeftEndpoint=!1),t.push(c),t.push(h),r=s,l+=1}}a+=1}class c{constructor(e){this.leftSweepEvent=e,this.rightSweepEvent=e.otherEvent}}function h(e,t){if(null===e||null===t)return!1;if(e.leftSweepEvent.ringId===t.leftSweepEvent.ringId&&(e.rightSweepEvent.isSamePoint(t.leftSweepEvent)||e.rightSweepEvent.isSamePoint(t.leftSweepEvent)||e.rightSweepEvent.isSamePoint(t.rightSweepEvent)||e.leftSweepEvent.isSamePoint(t.leftSweepEvent)||e.leftSweepEvent.isSamePoint(t.rightSweepEvent)))return!1;const r=e.leftSweepEvent.p.x,n=e.leftSweepEvent.p.y,o=e.rightSweepEvent.p.x,i=e.rightSweepEvent.p.y,s=t.leftSweepEvent.p.x,u=t.leftSweepEvent.p.y,a=t.rightSweepEvent.p.x,p=t.rightSweepEvent.p.y,l=(p-u)*(o-r)-(a-s)*(i-n),f=(a-s)*(n-u)-(p-u)*(r-s),c=(o-r)*(n-u)-(i-n)*(r-s);if(0===l)return!1;const h=f/l,y=c/l;if(h>=0&&h<=1&&y>=0&&y<=1){return[r+h*(o-r),n+h*(i-n)]}return!1}const y=function(e,t){const r=new n([],i);return function(e,t){if("FeatureCollection"===e.type){const r=e.features;for(let e=0;e<r.length;e++)f(r[e],t)}else f(e,t)}(e,r),function(e,t){t=t||!1;const r=[],o=new n([],s);for(;e.length;){const n=e.pop();if(n.isLeftEndpoint){const e=new c(n);for(let i=0;i<o.data.length;i++){const s=o.data[i];if(t&&s.leftSweepEvent.featureId===n.featureId)continue;const u=h(e,s);!1!==u&&r.push(u)}o.push(e)}else!1===n.isLeftEndpoint&&o.pop()}return r}(r,t)}},10200:(e,t,r)=>{r.d(t,{m:()=>u});const n=function(e,t){for(var r=0,n=0,o=0,i=0,s=0,u=0,a=0,p=0,l=null,f=null,c=e[0],h=e[1],y=t.length;r<y;r++){n=0;var g=t[r].length-1,w=t[r];if((l=w[0])[0]!==w[g][0]&&l[1]!==w[g][1])throw new Error("First and last coordinates in a ring must be the same");for(s=l[0]-c,u=l[1]-h;n<g;n++)if(p=(f=w[n+1])[1]-h,u<0&&p<0||u>0&&p>0)u=p,s=(l=f)[0]-c;else{if(a=f[0]-e[0],p>0&&u<=0){if((i=s*p-a*u)>0)o+=1;else if(0===i)return 0}else if(u>0&&p<=0){if((i=s*p-a*u)<0)o+=1;else if(0===i)return 0}else if(0===p&&u<0){if(0===(i=s*p-a*u))return 0}else if(0===u&&p<0){if(0===(i=s*p-a*u))return 0}else if(0===u&&0===p){if(a<=0&&s>=0)return 0;if(s<=0&&a>=0)return 0}l=f,u=p,s=a}}return o%2!=0};var o=r(83490),i=Object.defineProperty,s=(e,t)=>i(e,"name",{value:t,configurable:!0});function u(e,t,r={}){if(!e)throw new Error("point is required");if(!t)throw new Error("polygon is required");const i=(0,o.uG)(e),s=(0,o.bg)(t),u=s.type,p=t.bbox;let l=s.coordinates;if(p&&!1===a(i,p))return!1;"Polygon"===u&&(l=[l]);let f=!1;for(var c=0;c<l.length;++c){const e=n(i,l[c]);if(0===e)return!r.ignoreBoundary;e&&(f=!0)}return f}function a(e,t){return t[0]<=e[0]&&t[1]<=e[1]&&t[2]>=e[0]&&t[3]>=e[1]}s(u,"booleanPointInPolygon"),s(a,"inBBox")},83490:(e,t,r)=>{r.d(t,{$R:()=>u,Pw:()=>f,bg:()=>l,iw:()=>p,mo:()=>a,uG:()=>s});var n=r(67149),o=Object.defineProperty,i=(e,t)=>o(e,"name",{value:t,configurable:!0});function s(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return[...e.geometry.coordinates];if("Point"===e.type)return[...e.coordinates]}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return[...e];throw new Error("coord must be GeoJSON Point or an Array of numbers")}function u(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function a(e,t,r){if(!e)throw new Error("No feature passed");if(!r)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!e.geometry||e.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.geometry.type)}function p(e,t,r){if(!e)throw new Error("No featureCollection passed");if(!r)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+r+", FeatureCollection required");for(const n of e.features){if(!n||"Feature"!==n.type||!n.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!n.geometry||n.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+n.geometry.type)}}function l(e){return"Feature"===e.type?e.geometry:e}function f(e,t){return"FeatureCollection"===e.type?"FeatureCollection":"GeometryCollection"===e.type?"GeometryCollection":"Feature"===e.type&&null!==e.geometry?e.geometry.type:e.type}i(s,"getCoord"),i(u,"getCoords"),i((function e(t){if(t.length>1&&(0,n.Et)(t[0])&&(0,n.Et)(t[1]))return!0;if(Array.isArray(t[0])&&t[0].length)return e(t[0]);throw new Error("coordinates must only contain numbers")}),"containsNumber"),i((function(e,t,r){if(!t||!r)throw new Error("type and name required");if(!e||e.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.type)}),"geojsonType"),i(a,"featureOf"),i(p,"collectionOf"),i(l,"getGeom"),i(f,"getType")},90522:(e,t,r)=>{r.d(t,{k:()=>u});var n=r(67149),o=r(23494),i=Object.defineProperty,s=o.A;function u(e,t,r={}){const{removeDuplicates:o=!0,ignoreSelfIntersections:i=!1}=r;let u=[];"FeatureCollection"===e.type?u=u.concat(e.features):"Feature"===e.type?u.push(e):"LineString"!==e.type&&"Polygon"!==e.type&&"MultiLineString"!==e.type&&"MultiPolygon"!==e.type||u.push((0,n.N4)(e)),"FeatureCollection"===t.type?u=u.concat(t.features):"Feature"===t.type?u.push(t):"LineString"!==t.type&&"Polygon"!==t.type&&"MultiLineString"!==t.type&&"MultiPolygon"!==t.type||u.push((0,n.N4)(t));const a=s((0,n.Lr)(u),i);let p=[];if(o){const e={};a.forEach((t=>{const r=t.join(",");e[r]||(e[r]=!0,p.push(t))}))}else p=a;return(0,n.Lr)(p.map((e=>(0,n.zx)(e))))}i(u,"name",{value:"lineIntersect",configurable:!0})},19293:(e,t,r)=>{r.d(t,{CN:()=>u});var n=r(67149),o=r(83490),i=Object.defineProperty,s=(e,t)=>i(e,"name",{value:t,configurable:!0});function u(e,t={}){const r=(0,o.bg)(e);switch(t.properties||"Feature"!==e.type||(t.properties=e.properties),r.type){case"Polygon":return a(r,t);case"MultiPolygon":return p(r,t);default:throw new Error("invalid poly")}}function a(e,t={}){return l((0,o.bg)(e).coordinates,t.properties?t.properties:"Feature"===e.type?e.properties:{})}function p(e,t={}){const r=(0,o.bg)(e).coordinates,i=t.properties?t.properties:"Feature"===e.type?e.properties:{},s=[];return r.forEach((e=>{s.push(l(e,i))})),(0,n.Lr)(s)}function l(e,t){return e.length>1?(0,n.NU)(e,t):(0,n.wi)(e[0],t)}s(u,"polygonToLine"),s(a,"singlePolygonToLine"),s(p,"multiPolygonToLine"),s(l,"coordsToLine")},69748:(e,t,r)=>{r.d(t,{c:()=>b});var n=r(10200),o=r(90522),i=r(63399),s=r(19293),u=Object.defineProperty,a=(e,t)=>u(e,"name",{value:t,configurable:!0});function p(e,t){let r=!0;return(0,i.iw)(e,(e=>{(0,i.iw)(t,(t=>{if(!1===r)return!1;r=l(e.geometry,t.geometry)}))})),r}function l(e,t){switch(e.type){case"Point":switch(t.type){case"Point":return!w(e.coordinates,t.coordinates);case"LineString":return!f(t,e);case"Polygon":return!(0,n.m)(e,t)}break;case"LineString":switch(t.type){case"Point":return!f(e,t);case"LineString":return!c(e,t);case"Polygon":return!h(t,e)}break;case"Polygon":switch(t.type){case"Point":return!(0,n.m)(t,e);case"LineString":return!h(e,t);case"Polygon":return!y(t,e)}}return!1}function f(e,t){for(let r=0;r<e.coordinates.length-1;r++)if(g(e.coordinates[r],e.coordinates[r+1],t.coordinates))return!0;return!1}function c(e,t){return(0,o.k)(e,t).features.length>0}function h(e,t){for(const r of t.coordinates)if((0,n.m)(r,e))return!0;return(0,o.k)(t,(0,s.CN)(e)).features.length>0}function y(e,t){for(const r of e.coordinates[0])if((0,n.m)(r,t))return!0;for(const r of t.coordinates[0])if((0,n.m)(r,e))return!0;return(0,o.k)((0,s.CN)(e),(0,s.CN)(t)).features.length>0}function g(e,t,r){const n=r[0]-e[0],o=r[1]-e[1],i=t[0]-e[0],s=t[1]-e[1];return 0==n*s-o*i&&(Math.abs(i)>=Math.abs(s)?i>0?e[0]<=r[0]&&r[0]<=t[0]:t[0]<=r[0]&&r[0]<=e[0]:s>0?e[1]<=r[1]&&r[1]<=t[1]:t[1]<=r[1]&&r[1]<=e[1])}function w(e,t){return e[0]===t[0]&&e[1]===t[1]}a(p,"booleanDisjoint"),a(l,"disjoint"),a(f,"isPointOnLine"),a(c,"isLineOnLine"),a(h,"isLineInPoly"),a(y,"isPolyInPoly"),a(g,"isPointOnLineSegment"),a(w,"compareCoords");function d(e,t){let r=!1;return(0,i.iw)(e,(e=>{(0,i.iw)(t,(t=>{if(!0===r)return!0;r=!p(e.geometry,t.geometry)}))})),r}(0,Object.defineProperty)(d,"name",{value:"booleanIntersects",configurable:!0});var m=r(67149),v=Object.defineProperty;function E(e,t,r,n={}){const o=[],i=e[0],s=e[1],u=e[2],a=e[3],p=u-i,l=(0,m.I3)(t,n.units,"degrees"),f=a-s,c=(0,m.I3)(r,n.units,"degrees"),h=Math.floor(Math.abs(p)/l),y=Math.floor(Math.abs(f)/c),g=(f-y*c)/2;let w=i+(p-h*l)/2;for(let v=0;v<h;v++){let e=s+g;for(let t=0;t<y;t++){const t=(0,m.n1)([[[w,e],[w,e+c],[w+l,e+c],[w+l,e],[w,e]]],n.properties);n.mask?d(n.mask,t)&&o.push(t):o.push(t),e+=c}w+=l}return(0,m.Lr)(o)}((e,t)=>{v(e,"name",{value:t,configurable:!0})})(E,"rectangleGrid");var S=Object.defineProperty;function b(e,t,r={}){return E(e,t,t,r)}((e,t)=>{S(e,"name",{value:t,configurable:!0})})(b,"squareGrid")}}]);