"use strict";(self.webpackChunkturf_www=self.webpackChunkturf_www||[]).push([[5521],{7769:(t,e,n)=>{n.r(e),n.d(e,{Map0:()=>u,assets:()=>d,contentTitle:()=>a,default:()=>f,frontMatter:()=>c,metadata:()=>p,toc:()=>h});var r=n(4848),o=n(8453),l=n(800),s=n(6145),i=n(8478);const c={title:"collect"},a=void 0,p={id:"api/collect",title:"collect",description:"Description",source:"@site/docs/api/collect.mdx",sourceDirName:"api",slug:"/api/collect",permalink:"/docs/api/collect",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/collect.mdx",tags:[],version:"current",frontMatter:{title:"collect"},sidebar:"apiSidebar",previous:{title:"clustersKmeans",permalink:"/docs/api/clustersKmeans"},next:{title:"clusterEach",permalink:"/docs/api/clusterEach"}},d={},h=[{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3},{value:"Installation",id:"installation",level:3}];function u(){var t=l.n1([[[0,0],[10,0],[10,10],[0,10],[0,0]]]),e=l.n1([[[10,0],[20,10],[20,20],[20,0],[10,0]]]),n=l.Lrk([t,e]),o=l.zx7([5,5],{population:200}),i=l.zx7([1,3],{population:600}),c=l.zx7([14,2],{population:100}),a=l.zx7([13,1],{population:200}),p=l.zx7([19,7],{population:300}),d=l.Lrk([o,i,c,a,p]),h=l.Fod(n,d,"population","values"),u=(h.features[0].properties.values,{pointFC:d,collected:h});return(0,r.jsx)(s.A,{addToMap:u})}function x(t){const e={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h3,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(e.p,{children:["Merges a specified property from a FeatureCollection of points into a\nFeatureCollection of polygons. Given an ",(0,r.jsx)(e.code,{children:"inProperty"})," on points and an ",(0,r.jsx)(e.code,{children:"outProperty"}),"\nfor polygons, this finds every point that lies within each polygon, collects the\n",(0,r.jsx)(e.code,{children:"inProperty"})," values from those points, and adds them as an array to ",(0,r.jsx)(e.code,{children:"outProperty"}),"\non the polygon."]}),"\n",(0,r.jsx)(e.h3,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"Name"}),(0,r.jsx)(e.th,{children:"Type"}),(0,r.jsx)(e.th,{children:"Description"})]})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"polygons"}),(0,r.jsx)(e.td,{children:(0,r.jsxs)(e.strong,{children:[(0,r.jsx)(e.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.3",children:"FeatureCollection"}),"<",(0,r.jsx)(e.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.6",children:"Polygon"}),">"]})}),(0,r.jsx)(e.td,{children:"polygons with values on which to aggregate"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"points"}),(0,r.jsx)(e.td,{children:(0,r.jsxs)(e.strong,{children:[(0,r.jsx)(e.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.3",children:"FeatureCollection"}),"<",(0,r.jsx)(e.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.2",children:"Point"}),">"]})}),(0,r.jsx)(e.td,{children:"points to be aggregated"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"inProperty"}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.strong,{children:"string"})}),(0,r.jsx)(e.td,{children:"property to be nested from"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"outProperty"}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.strong,{children:"string"})}),(0,r.jsx)(e.td,{children:"property to be nested into"})]})]})]}),"\n",(0,r.jsx)(e.h3,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)("ul",{children:(0,r.jsxs)(e.p,{children:[(0,r.jsxs)(e.strong,{children:[(0,r.jsx)(e.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.3",children:"FeatureCollection"}),"<",(0,r.jsx)(e.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.6",children:"Polygon"}),">"]})," polygons with properties listed based on ",(0,r.jsx)(e.code,{children:"outField"})]})}),"\n",(0,r.jsx)(e.h3,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:'var poly1 = turf.polygon([\n  [\n    [0, 0],\n    [10, 0],\n    [10, 10],\n    [0, 10],\n    [0, 0],\n  ],\n]);\nvar poly2 = turf.polygon([\n  [\n    [10, 0],\n    [20, 10],\n    [20, 20],\n    [20, 0],\n    [10, 0],\n  ],\n]);\nvar polyFC = turf.featureCollection([poly1, poly2]);\nvar pt1 = turf.point([5, 5], { population: 200 });\nvar pt2 = turf.point([1, 3], { population: 600 });\nvar pt3 = turf.point([14, 2], { population: 100 });\nvar pt4 = turf.point([13, 1], { population: 200 });\nvar pt5 = turf.point([19, 7], { population: 300 });\nvar pointFC = turf.featureCollection([pt1, pt2, pt3, pt4, pt5]);\nvar collected = turf.collect(polyFC, pointFC, "population", "values");\nvar values = collected.features[0].properties.values;\n//=values => [200, 600]\n'})}),"\n","\n",(0,r.jsx)(i.A,{children:()=>(0,r.jsx)(u,{})}),"\n",(0,r.jsx)(e.h3,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:'$ npm install @turf/collect\n\nimport { collect } from "@turf/collect";\nconst result = collect(...);\n'})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:'$ npm install @turf/turf\n\nimport * as turf from "@turf/turf";\nconst result = turf.collect(...);\n'})})]})}function f(t={}){const{wrapper:e}={...(0,o.R)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(x,{...t})}):x(t)}}}]);