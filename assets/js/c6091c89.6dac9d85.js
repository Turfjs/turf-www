(self.webpackChunkturf_www=self.webpackChunkturf_www||[]).push([[66216],{23055:(e,r,t)=>{"use strict";t.r(r),t.d(r,{Map0:()=>f,assets:()=>p,contentTitle:()=>u,default:()=>y,frontMatter:()=>c,metadata:()=>d,toc:()=>h});var n=t(74848),i=t(28453),o=t(67149),s=t(26753),a=t(36145),l=t(78478);const c={title:"simplify"},u=void 0,d={id:"api/simplify",title:"simplify",description:"Description",source:"@site/versioned_docs/version-7.0.0/api/simplify.mdx",sourceDirName:"api",slug:"/api/simplify",permalink:"/docs/api/simplify",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-7.0.0/api/simplify.mdx",tags:[],version:"7.0.0",frontMatter:{title:"simplify"},sidebar:"apiSidebar",previous:{title:"polygonSmooth",permalink:"/docs/api/polygonSmooth"},next:{title:"tesselate",permalink:"/docs/api/tesselate"}},p={},h=[{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3},{value:"Installation",id:"installation",level:3}];function f(){var e=o.n1([[[-70.603637,-33.399918],[-70.614624,-33.395332],[-70.639343,-33.392466],[-70.659942,-33.394759],[-70.683975,-33.404504],[-70.697021,-33.419406],[-70.701141,-33.434306],[-70.700454,-33.446339],[-70.694274,-33.458369],[-70.682601,-33.465816],[-70.668869,-33.472117],[-70.646209,-33.473835],[-70.624923,-33.472117],[-70.609817,-33.468107],[-70.595397,-33.458369],[-70.587158,-33.442901],[-70.587158,-33.426283],[-70.590591,-33.414248],[-70.594711,-33.406224],[-70.603637,-33.399918]]]),r={geojson:e,simplified:s.C(e,{tolerance:.01,highQuality:!1})};return(0,n.jsx)(a.A,{addToMap:r})}function m(e){const r={a:"a",code:"code",em:"em",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h3,{id:"description",children:"Description"}),"\n",(0,n.jsxs)(r.p,{children:["Takes a ",(0,n.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946#section-3",children:"GeoJSON"})," object and returns a simplified version. Internally uses the 2d version of\n",(0,n.jsx)(r.a,{href:"http://mourner.github.io/simplify-js/",children:"simplify-js"})," to perform simplification using the Ramer-Douglas-Peucker algorithm."]}),"\n",(0,n.jsx)(r.h3,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Name"}),(0,n.jsx)(r.th,{children:"Type"}),(0,n.jsx)(r.th,{children:"Description"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"geojson"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.strong,{children:(0,n.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946#section-3",children:"GeoJSON"})})}),(0,n.jsx)(r.td,{children:"object to be simplified"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsxs)(r.td,{children:["options",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.strong,{children:"Object"})}),(0,n.jsxs)(r.td,{children:["Optional parameters ",(0,n.jsx)(r.em,{children:"(default {})"})]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsxs)(r.td,{children:["options.tolerance",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.strong,{children:"number"})}),(0,n.jsxs)(r.td,{children:["simplification tolerance ",(0,n.jsx)(r.em,{children:"(default 1)"})]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsxs)(r.td,{children:["options.highQuality",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.strong,{children:"boolean"})}),(0,n.jsxs)(r.td,{children:["whether or not to spend more time to create a higher-quality simplification with a different algorithm ",(0,n.jsx)(r.em,{children:"(default false)"})]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsxs)(r.td,{children:["options.mutate",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.strong,{children:"boolean"})}),(0,n.jsxs)(r.td,{children:["allows GeoJSON input to be mutated (significant performance increase if true) ",(0,n.jsx)(r.em,{children:"(default false)"})]})]})]})]}),"\n",(0,n.jsx)(r.h3,{id:"returns",children:"Returns"}),"\n",(0,n.jsx)("ul",{children:(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:(0,n.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946#section-3",children:"GeoJSON"})})," a simplified GeoJSON"]})}),"\n",(0,n.jsx)(r.h3,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-javascript",children:"var geojson = turf.polygon([\n  [\n    [-70.603637, -33.399918],\n    [-70.614624, -33.395332],\n    [-70.639343, -33.392466],\n    [-70.659942, -33.394759],\n    [-70.683975, -33.404504],\n    [-70.697021, -33.419406],\n    [-70.701141, -33.434306],\n    [-70.700454, -33.446339],\n    [-70.694274, -33.458369],\n    [-70.682601, -33.465816],\n    [-70.668869, -33.472117],\n    [-70.646209, -33.473835],\n    [-70.624923, -33.472117],\n    [-70.609817, -33.468107],\n    [-70.595397, -33.458369],\n    [-70.587158, -33.442901],\n    [-70.587158, -33.426283],\n    [-70.590591, -33.414248],\n    [-70.594711, -33.406224],\n    [-70.603637, -33.399918],\n  ],\n]);\nvar options = { tolerance: 0.01, highQuality: false };\nvar simplified = turf.simplify(geojson, options);\n"})}),"\n","\n",(0,n.jsx)(l.A,{children:()=>(0,n.jsx)(f,{})}),"\n",(0,n.jsx)(r.h3,{id:"installation",children:"Installation"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-javascript",children:'$ npm install @turf/simplify\n\nimport { simplify } from "@turf/simplify";\nconst result = simplify(...);\n'})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-javascript",children:'$ npm install @turf/turf\n\nimport * as turf from "@turf/turf";\nconst result = turf.simplify(...);\n'})})]})}function y(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}},42634:()=>{},86150:(e,r,t)=>{"use strict";t.d(r,{a:()=>a});var n=t(67149),i=t(83490),o=Object.defineProperty,s=(e,r)=>o(e,"name",{value:r,configurable:!0});function a(e,r={}){var t="object"==typeof r?r.mutate:r;if(!e)throw new Error("geojson is required");var o=(0,i.Pw)(e),s=[];switch(o){case"LineString":s=l(e,o);break;case"MultiLineString":case"Polygon":(0,i.$R)(e).forEach((function(e){s.push(l(e,o))}));break;case"MultiPolygon":(0,i.$R)(e).forEach((function(e){var r=[];e.forEach((function(e){r.push(l(e,o))})),s.push(r)}));break;case"Point":return e;case"MultiPoint":var a={};(0,i.$R)(e).forEach((function(e){var r=e.join("-");Object.prototype.hasOwnProperty.call(a,r)||(s.push(e),a[r]=!0)}));break;default:throw new Error(o+" geometry not supported")}return e.coordinates?!0===t?(e.coordinates=s,e):{type:o,coordinates:s}:!0===t?(e.geometry.coordinates=s,e):(0,n.N4)({type:o,coordinates:s},e.properties,{bbox:e.bbox,id:e.id})}function l(e,r){var t=(0,i.$R)(e);if(2===t.length&&!c(t[0],t[1]))return t;var n=[],o=t.length-1,s=n.length;n.push(t[0]);for(var a=1;a<o;a++){var l=n[n.length-1];t[a][0]===l[0]&&t[a][1]===l[1]||(n.push(t[a]),(s=n.length)>2&&u(n[s-3],n[s-1],n[s-2])&&n.splice(n.length-2,1))}if(n.push(t[t.length-1]),s=n.length,("Polygon"===r||"MultiPolygon"===r)&&c(t[0],t[t.length-1])&&s<4)throw new Error("invalid polygon");return"LineString"===r&&s<3||u(n[s-3],n[s-1],n[s-2])&&n.splice(n.length-2,1),n}function c(e,r){return e[0]===r[0]&&e[1]===r[1]}function u(e,r,t){var n=t[0],i=t[1],o=e[0],s=e[1],a=r[0],l=r[1],c=a-o,u=l-s;return 0===(n-o)*u-(i-s)*c&&(Math.abs(c)>=Math.abs(u)?c>0?o<=n&&n<=a:a<=n&&n<=o:u>0?s<=i&&i<=l:l<=i&&i<=s)}s(a,"cleanCoords"),s(l,"cleanLine"),s(c,"equals"),s(u,"isPointOnLineSegment")},53257:(e,r,t)=>{"use strict";t.d(r,{Rd:()=>a,o8:()=>o});var n=Object.defineProperty,i=(e,r)=>n(e,"name",{value:r,configurable:!0});function o(e){if(!e)throw new Error("geojson is required");switch(e.type){case"Feature":return s(e);case"FeatureCollection":return l(e);case"Point":case"LineString":case"Polygon":case"MultiPoint":case"MultiLineString":case"MultiPolygon":case"GeometryCollection":return c(e);default:throw new Error("unknown GeoJSON type")}}function s(e){const r={type:"Feature"};return Object.keys(e).forEach((t=>{switch(t){case"type":case"properties":case"geometry":return;default:r[t]=e[t]}})),r.properties=a(e.properties),null==e.geometry?r.geometry=null:r.geometry=c(e.geometry),r}function a(e){const r={};return e?(Object.keys(e).forEach((t=>{const n=e[t];"object"==typeof n?null===n?r[t]=null:Array.isArray(n)?r[t]=n.map((e=>e)):r[t]=a(n):r[t]=n})),r):r}function l(e){const r={type:"FeatureCollection"};return Object.keys(e).forEach((t=>{switch(t){case"type":case"features":return;default:r[t]=e[t]}})),r.features=e.features.map((e=>s(e))),r}function c(e){const r={type:e.type};return e.bbox&&(r.bbox=e.bbox),"GeometryCollection"===e.type?(r.geometries=e.geometries.map((e=>c(e))),r):(r.coordinates=u(e.coordinates),r)}function u(e){const r=e;return"object"!=typeof r[0]?r.slice():r.map((e=>u(e)))}i(o,"clone"),i(s,"cloneFeature"),i(a,"cloneProperties"),i(l,"cloneFeatureCollection"),i(c,"cloneGeometry"),i(u,"deepSlice")},83490:(e,r,t)=>{"use strict";t.d(r,{$R:()=>a,Pw:()=>d,bg:()=>u,iw:()=>c,mo:()=>l,uG:()=>s});var n=t(67149),i=Object.defineProperty,o=(e,r)=>i(e,"name",{value:r,configurable:!0});function s(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return[...e.geometry.coordinates];if("Point"===e.type)return[...e.coordinates]}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return[...e];throw new Error("coord must be GeoJSON Point or an Array of numbers")}function a(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function l(e,r,t){if(!e)throw new Error("No feature passed");if(!t)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!e.geometry||e.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.geometry.type)}function c(e,r,t){if(!e)throw new Error("No featureCollection passed");if(!t)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+t+", FeatureCollection required");for(const n of e.features){if(!n||"Feature"!==n.type||!n.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!n.geometry||n.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+n.geometry.type)}}function u(e){return"Feature"===e.type?e.geometry:e}function d(e,r){return"FeatureCollection"===e.type?"FeatureCollection":"GeometryCollection"===e.type?"GeometryCollection":"Feature"===e.type&&null!==e.geometry?e.geometry.type:e.type}o(s,"getCoord"),o(a,"getCoords"),o((function e(r){if(r.length>1&&(0,n.Et)(r[0])&&(0,n.Et)(r[1]))return!0;if(Array.isArray(r[0])&&r[0].length)return e(r[0]);throw new Error("coordinates must only contain numbers")}),"containsNumber"),o((function(e,r,t){if(!r||!t)throw new Error("type and name required");if(!e||e.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.type)}),"geojsonType"),o(l,"featureOf"),o(c,"collectionOf"),o(u,"getGeom"),o(d,"getType")},26753:(e,r,t)=>{"use strict";t.d(r,{C:()=>m});var n=t(86150),i=t(53257),o=t(63399),s=t(67149),a=Object.defineProperty,l=(e,r)=>a(e,"name",{value:r,configurable:!0});function c(e,r){var t=e[0]-r[0],n=e[1]-r[1];return t*t+n*n}function u(e,r,t){var n=r[0],i=r[1],o=t[0]-n,s=t[1]-i;if(0!==o||0!==s){var a=((e[0]-n)*o+(e[1]-i)*s)/(o*o+s*s);a>1?(n=t[0],i=t[1]):a>0&&(n+=o*a,i+=s*a)}return(o=e[0]-n)*o+(s=e[1]-i)*s}function d(e,r){for(var t,n=e[0],i=[n],o=1,s=e.length;o<s;o++)c(t=e[o],n)>r&&(i.push(t),n=t);return n!==t&&i.push(t),i}function p(e,r,t,n,i){for(var o,s=n,a=r+1;a<t;a++){var l=u(e[a],e[r],e[t]);l>s&&(o=a,s=l)}s>n&&(o-r>1&&p(e,r,o,n,i),i.push(e[o]),t-o>1&&p(e,o,t,n,i))}function h(e,r){var t=e.length-1,n=[e[0]];return p(e,0,t,r,n),n.push(e[t]),n}function f(e,r,t){if(e.length<=2)return e;var n=void 0!==r?r*r:1;return e=h(e=t?e:d(e,n),n)}function m(e,r={}){var t,n,a;if(r=null!=r?r:{},!(0,s.Gv)(r))throw new Error("options is invalid");const l=null!=(t=r.tolerance)?t:1,c=null!=(n=r.highQuality)&&n,u=null!=(a=r.mutate)&&a;if(!e)throw new Error("geojson is required");if(l&&l<0)throw new Error("invalid tolerance");return!0!==u&&(e=(0,i.o8)(e)),(0,o.kX)(e,(function(e){y(e,l,c)})),e}function y(e,r,t){const i=e.type;if("Point"===i||"MultiPoint"===i)return e;if((0,n.a)(e,{mutate:!0}),"GeometryCollection"!==i)switch(i){case"LineString":e.coordinates=f(e.coordinates,r,t);break;case"MultiLineString":e.coordinates=e.coordinates.map((e=>f(e,r,t)));break;case"Polygon":e.coordinates=g(e.coordinates,r,t);break;case"MultiPolygon":e.coordinates=e.coordinates.map((e=>g(e,r,t)))}return e}function g(e,r,t){return e.map((function(e){if(e.length<4)throw new Error("invalid polygon");let n=r,i=f(e,n,t);for(;!j(i);)n-=.01*n,i=f(e,n,t);return i[i.length-1][0]===i[0][0]&&i[i.length-1][1]===i[0][1]||i.push(i[0]),i}))}function j(e){return!(e.length<3)&&!(3===e.length&&e[2][0]===e[0][0]&&e[2][1]===e[0][1])}l(c,"getSqDist"),l(u,"getSqSegDist"),l(d,"simplifyRadialDist"),l(p,"simplifyDPStep"),l(h,"simplifyDouglasPeucker"),l(f,"simplify"),l(m,"simplify"),l(y,"simplifyGeom"),l(g,"simplifyPolygon"),l(j,"checkValidity")}}]);