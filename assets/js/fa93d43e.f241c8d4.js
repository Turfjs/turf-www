"use strict";(self.webpackChunkturf_www=self.webpackChunkturf_www||[]).push([[94020],{42436:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=n(74848),s=n(28453);n(36145),n(78478);const a={title:"segmentEach"},i=void 0,l={id:"api/segmentEach",title:"segmentEach",description:"Description",source:"@site/versioned_docs/version-7.0.0/api/segmentEach.mdx",sourceDirName:"api",slug:"/api/segmentEach",permalink:"/docs/api/segmentEach",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-7.0.0/api/segmentEach.mdx",tags:[],version:"7.0.0",frontMatter:{title:"segmentEach"},sidebar:"apiSidebar",previous:{title:"propReduce",permalink:"/docs/api/propReduce"},next:{title:"segmentReduce",permalink:"/docs/api/segmentReduce"}},o={},c=[{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3},{value:"Installation",id:"installation",level:3}];function d(e){const t={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h3,{id:"description",children:"Description"}),"\n",(0,r.jsx)(t.p,{children:"Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n(Multi)Point geometries do not contain segments therefore they are ignored during this operation."}),"\n",(0,r.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"geojson"}),(0,r.jsx)(t.td,{children:(0,r.jsxs)(t.strong,{children:[(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.3",children:"FeatureCollection"})," | ",(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.2",children:"Feature"})," | ",(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1",children:"Geometry"})]})}),(0,r.jsx)(t.td,{children:"any GeoJSON"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"callback"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"Function"})}),(0,r.jsx)(t.td,{children:"a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)"})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)("ul",{children:(0,r.jsx)(t.strong,{children:"void"})}),"\n",(0,r.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:"var polygon = turf.polygon([\n  [\n    [-50, 5],\n    [-40, -10],\n    [-50, -10],\n    [-40, 5],\n    [-50, 5],\n  ],\n]);\n\n// Iterate over GeoJSON by 2-vertex segments\nturf.segmentEach(\n  polygon,\n  function (\n    currentSegment,\n    featureIndex,\n    multiFeatureIndex,\n    geometryIndex,\n    segmentIndex,\n  ) {\n    //=currentSegment\n    //=featureIndex\n    //=multiFeatureIndex\n    //=geometryIndex\n    //=segmentIndex\n  },\n);\n\n// Calculate the total number of segments\nvar total = 0;\nturf.segmentEach(polygon, function () {\n  total++;\n});\n"})}),"\n",(0,r.jsx)(t.h3,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/meta\n\nimport { segmentEach } from "@turf/meta";\nconst result = segmentEach(...);\n'})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/turf\n\nimport * as turf from "@turf/turf";\nconst result = turf.segmentEach(...);\n'})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);