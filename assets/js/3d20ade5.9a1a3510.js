"use strict";(self.webpackChunkturf_www=self.webpackChunkturf_www||[]).push([[813],{3615:(e,t,n)=>{n.r(t),n.d(t,{Map0:()=>x,assets:()=>h,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>c,toc:()=>p});var i=n(4848),s=n(8453),r=n(800),d=n(6145),a=n(8478);const l={title:"destination"},o=void 0,c={id:"api/destination",title:"destination",description:"Description",source:"@site/docs/api/destination.mdx",sourceDirName:"api",slug:"/api/destination",permalink:"/docs/api/destination",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/destination.mdx",tags:[],version:"current",frontMatter:{title:"destination"},sidebar:"apiSidebar",previous:{title:"centroid",permalink:"/docs/api/centroid"},next:{title:"distance",permalink:"/docs/api/distance"}},h={},p=[{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3},{value:"Installation",id:"installation",level:3}];function x(){var e=r.zx7([-75.343,39.984]),t=r.j_(e,50,90,{units:"miles"}),n={point:e,destination:t};return t.properties["marker-color"]="#f00",e.properties["marker-color"]="#0f0",(0,i.jsx)(d.A,{addToMap:n})}function j(e){const t={a:"a",code:"code",em:"em",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h3,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(t.p,{children:["Takes a ",(0,i.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.2",children:"Point"})," and calculates the location of a destination point given a distance in\ndegrees, radians, miles, or kilometers; and bearing in degrees.\nThis uses the ",(0,i.jsx)(t.a,{href:"http://en.wikipedia.org/wiki/Haversine_formula",children:"Haversine formula"})," to account for global curvature."]}),"\n",(0,i.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Name"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"origin"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.1",children:"Coord"})})}),(0,i.jsx)(t.td,{children:"starting point"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"distance"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"number"})}),(0,i.jsx)(t.td,{children:"distance from the origin point"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"bearing"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"number"})}),(0,i.jsx)(t.td,{children:"ranging from -180 to 180"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:["options",(0,i.jsx)("i",{children:"?"})]}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"Object"})}),(0,i.jsxs)(t.td,{children:["Optional parameters ",(0,i.jsx)(t.em,{children:"(default {})"})]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:["options.units",(0,i.jsx)("i",{children:"?"})]}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"string"})}),(0,i.jsxs)(t.td,{children:["miles, kilometers, degrees, or radians ",(0,i.jsx)(t.em,{children:"(default 'kilometers')"})]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:["options.properties",(0,i.jsx)("i",{children:"?"})]}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.strong,{children:"Object"})}),(0,i.jsxs)(t.td,{children:["Translate properties to Point ",(0,i.jsx)(t.em,{children:"(default {})"})]})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,i.jsx)("ul",{children:(0,i.jsxs)(t.p,{children:[(0,i.jsxs)(t.strong,{children:[(0,i.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.2",children:"Feature"}),"<",(0,i.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.2",children:"Point"}),">"]})," destination point"]})}),"\n",(0,i.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-javascript",children:'var point = turf.point([-75.343, 39.984]);\nvar distance = 50;\nvar bearing = 90;\nvar options = { units: "miles" };\n\nvar destination = turf.destination(point, distance, bearing, options);\n'})}),"\n","\n",(0,i.jsx)(a.A,{children:()=>(0,i.jsx)(x,{})}),"\n",(0,i.jsx)(t.h3,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/destination\n\nimport { destination } from "@turf/destination";\nconst result = destination(...);\n'})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/turf\n\nimport * as turf from "@turf/turf";\nconst result = turf.destination(...);\n'})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(j,{...e})}):j(e)}}}]);