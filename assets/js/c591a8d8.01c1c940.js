"use strict";(self.webpackChunkturf_www=self.webpackChunkturf_www||[]).push([[98014],{5905:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var n=r(74848),s=r(28453);r(36145),r(78478);const i={title:"convertArea"},a=void 0,c={id:"api/convertArea",title:"convertArea",description:"Description",source:"@site/docs/api/convertArea.mdx",sourceDirName:"api",slug:"/api/convertArea",permalink:"/docs/next/api/convertArea",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/convertArea.mdx",tags:[],version:"current",frontMatter:{title:"convertArea"},sidebar:"apiSidebar",previous:{title:"bearingToAzimuth",permalink:"/docs/next/api/bearingToAzimuth"},next:{title:"convertLength",permalink:"/docs/next/api/convertLength"}},l={},d=[{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Installation",id:"installation",level:3}];function o(e){const t={code:"code",em:"em",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h3,{id:"description",children:"Description"}),"\n",(0,n.jsx)(t.p,{children:"Converts a area to the requested unit.\nValid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches, hectares"}),"\n",(0,n.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"area"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"number"})}),(0,n.jsx)(t.td,{children:"to be converted"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:["originalUnit",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Units"})}),(0,n.jsxs)(t.td,{children:["of the distance ",(0,n.jsx)(t.em,{children:'(default "meters")'})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:["finalUnit",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Units"})}),(0,n.jsxs)(t.td,{children:["returned unit ",(0,n.jsx)(t.em,{children:'(default "kilometers")'})]})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,n.jsx)("ul",{children:(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"number"})," the converted area"]})}),"\n",(0,n.jsx)(t.h3,{id:"installation",children:"Installation"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/helpers\n\nimport { convertArea } from "@turf/helpers";\nconst result = convertArea(...);\n'})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/turf\n\nimport * as turf from "@turf/turf";\nconst result = turf.convertArea(...);\n'})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}}}]);