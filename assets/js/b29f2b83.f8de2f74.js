(self.webpackChunkturf_www=self.webpackChunkturf_www||[]).push([[98765],{27275:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Map0:()=>u,assets:()=>p,contentTitle:()=>h,default:()=>j,frontMatter:()=>c,metadata:()=>d,toc:()=>f});var r=n(74848),i=n(28453),s=n(67149),l=n(68160),o=n(36145),a=n(78478);const c={title:"lineOverlap"},h=void 0,d={id:"api/lineOverlap",title:"lineOverlap",description:"Description",source:"@site/versioned_docs/version-7.0.0/api/lineOverlap.mdx",sourceDirName:"api",slug:"/api/lineOverlap",permalink:"/docs/api/lineOverlap",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-7.0.0/api/lineOverlap.mdx",tags:[],version:"7.0.0",frontMatter:{title:"lineOverlap"},sidebar:"apiSidebar",previous:{title:"lineIntersect",permalink:"/docs/api/lineIntersect"},next:{title:"lineSegment",permalink:"/docs/api/lineSegment"}},p={},f=[{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3},{value:"Installation",id:"installation",level:3}];function u(){var e=s.wi([[115,-35],[125,-30],[135,-30],[145,-35]]),t=s.wi([[115,-25],[125,-30],[135,-30],[145,-25]]),n={line1:e,line2:t,overlapping:l._(e,t)};return(0,r.jsx)(o.A,{addToMap:n})}function x(e){const t={a:"a",code:"code",em:"em",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h3,{id:"description",children:"Description"}),"\n",(0,r.jsx)(t.p,{children:"Takes any LineString or Polygon and returns the overlapping lines between both features."}),"\n",(0,r.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"line1"}),(0,r.jsx)(t.td,{children:(0,r.jsxs)(t.strong,{children:[(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1",children:"Geometry"})," | ",(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.2",children:"Feature"}),"<",(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.4",children:"LineString"})," | ",(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.5",children:"MultiLineString"})," | ",(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.6",children:"Polygon"})," | ",(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.7",children:"MultiPolygon"}),">"]})}),(0,r.jsx)(t.td,{children:"any LineString or Polygon"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"line2"}),(0,r.jsx)(t.td,{children:(0,r.jsxs)(t.strong,{children:[(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1",children:"Geometry"})," | ",(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.2",children:"Feature"}),"<",(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.4",children:"LineString"})," | ",(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.5",children:"MultiLineString"})," | ",(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.6",children:"Polygon"})," | ",(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.7",children:"MultiPolygon"}),">"]})}),(0,r.jsx)(t.td,{children:"any LineString or Polygon"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{children:["options",(0,r.jsx)("i",{children:"?"})]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"Object"})}),(0,r.jsxs)(t.td,{children:["Optional parameters ",(0,r.jsx)(t.em,{children:"(default {})"})]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{children:["options.tolerance",(0,r.jsx)("i",{children:"?"})]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"number"})}),(0,r.jsxs)(t.td,{children:["Tolerance distance to match overlapping line segments (in kilometers) ",(0,r.jsx)(t.em,{children:"(default 0)"})]})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)("ul",{children:(0,r.jsxs)(t.p,{children:[(0,r.jsxs)(t.strong,{children:[(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.3",children:"FeatureCollection"}),"<",(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.4",children:"LineString"}),">"]})," lines(s) that are overlapping between both features"]})}),"\n",(0,r.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:"var line1 = turf.lineString([\n  [115, -35],\n  [125, -30],\n  [135, -30],\n  [145, -35],\n]);\nvar line2 = turf.lineString([\n  [115, -25],\n  [125, -30],\n  [135, -30],\n  [145, -25],\n]);\n\nvar overlapping = turf.lineOverlap(line1, line2);\n"})}),"\n","\n",(0,r.jsx)(a.A,{children:()=>(0,r.jsx)(u,{})}),"\n",(0,r.jsx)(t.h3,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/line-overlap\n\nimport { lineOverlap } from "@turf/line-overlap";\nconst result = lineOverlap(...);\n'})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/turf\n\nimport * as turf from "@turf/turf";\nconst result = turf.lineOverlap(...);\n'})})]})}function j(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(x,{...e})}):x(e)}},42634:()=>{},85078:(e,t,n)=>{"use strict";n.d(t,{O:()=>l});var r=n(83490),i=Object.defineProperty,s=(e,t)=>i(e,"name",{value:t,configurable:!0});function l(e,t,n={}){const i=(0,r.uG)(e),s=(0,r.$R)(t);for(let r=0;r<s.length-1;r++){let e=!1;if(n.ignoreEndVertices&&(0===r&&(e="start"),r===s.length-2&&(e="end"),0===r&&r+1===s.length-1&&(e="both")),o(s[r],s[r+1],i,e,void 0===n.epsilon?null:n.epsilon))return!0}return!1}function o(e,t,n,r,i){const s=n[0],l=n[1],o=e[0],a=e[1],c=t[0],h=t[1],d=c-o,p=h-a,f=(n[0]-o)*p-(n[1]-a)*d;if(null!==i){if(Math.abs(f)>i)return!1}else if(0!==f)return!1;return r?"start"===r?Math.abs(d)>=Math.abs(p)?d>0?o<s&&s<=c:c<=s&&s<o:p>0?a<l&&l<=h:h<=l&&l<a:"end"===r?Math.abs(d)>=Math.abs(p)?d>0?o<=s&&s<c:c<s&&s<=o:p>0?a<=l&&l<h:h<l&&l<=a:"both"===r&&(Math.abs(d)>=Math.abs(p)?d>0?o<s&&s<c:c<s&&s<o:p>0?a<l&&l<h:h<l&&l<a):Math.abs(d)>=Math.abs(p)?d>0?o<=s&&s<=c:c<=s&&s<=o:p>0?a<=l&&l<=h:h<=l&&l<=a}s(l,"booleanPointOnLine"),s(o,"isPointOnLineSegment")},68160:(e,t,n)=>{"use strict";n.d(t,{_:()=>f});var r=n(37726),i=n(24838),s=n(11904),l=n(85078),o=n(83490),a=n(63399),c=n(67149),h=n(60851),d=Object.defineProperty,p=(e,t)=>d(e,"name",{value:t,configurable:!0});function f(e,t,n={}){if(n=n||{},!(0,c.Gv)(n))throw new Error("options is invalid");var d=n.tolerance||0,p=[],f=(0,r.s)();const x=(0,i.w)(e);var j;f.load(x);let g=[];return(0,a.RP)(t,(function(e){var t=!1;e&&((0,a.us)(f.search(e),(function(n){if(!1===t){var r=(0,o.$R)(e).sort(),i=(0,o.$R)(n).sort();if(h(r,i))t=!0,j=j?u(j,e)||j:e;else if(0===d?(0,l.O)(r[0],n)&&(0,l.O)(r[1],n):(0,s.W)(n,r[0]).properties.dist<=d&&(0,s.W)(n,r[1]).properties.dist<=d)t=!0,j=j?u(j,e)||j:e;else if(0===d?(0,l.O)(i[0],e)&&(0,l.O)(i[1],e):(0,s.W)(e,i[0]).properties.dist<=d&&(0,s.W)(e,i[1]).properties.dist<=d)if(j){const e=u(j,n);e?j=e:g.push(n)}else j=n}})),!1===t&&j&&(p.push(j),g.length&&(p=p.concat(g),g=[]),j=void 0))})),j&&p.push(j),(0,c.Lr)(p)}function u(e,t){var n=(0,o.$R)(t),r=(0,o.$R)(e),i=r[0],s=r[r.length-1],l=e.geometry.coordinates;if(h(n[0],i))l.unshift(n[1]);else if(h(n[0],s))l.push(n[1]);else if(h(n[1],i))l.unshift(n[0]);else{if(!h(n[1],s))return;l.push(n[0])}return e}p(f,"lineOverlap"),p(u,"concatSegment")}}]);