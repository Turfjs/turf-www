(self.webpackChunkturf_www=self.webpackChunkturf_www||[]).push([[27978],{77496:(e,t,r)=>{"use strict";r.r(t),r.d(t,{Map0:()=>m,assets:()=>h,contentTitle:()=>u,default:()=>x,frontMatter:()=>c,metadata:()=>d,toc:()=>f});var n=r(74848),s=r(28453),o=r(84245),a=r(50539),i=r(36145),l=r(78478);const c={title:"clustersKmeans"},u=void 0,d={id:"api/clustersKmeans",title:"clustersKmeans",description:"Description",source:"@site/versioned_docs/version-7.0.0/api/clustersKmeans.mdx",sourceDirName:"api",slug:"/api/clustersKmeans",permalink:"/docs/api/clustersKmeans",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-7.0.0/api/clustersKmeans.mdx",tags:[],version:"7.0.0",frontMatter:{title:"clustersKmeans"},sidebar:"apiSidebar",previous:{title:"clustersDbscan",permalink:"/docs/api/clustersDbscan"},next:{title:"collect",permalink:"/docs/api/collect"}},h={},f=[{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3},{value:"Installation",id:"installation",level:3}];function m(){var e=o._e(100,{bbox:[0,30,20,50]}),t={clustered:a.p(e,{numberOfClusters:7})};return(0,n.jsx)(i.A,{addToMap:t})}function p(e){const t={a:"a",code:"code",em:"em",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h3,{id:"description",children:"Description"}),"\n",(0,n.jsxs)(t.p,{children:["Takes a set of ",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.2",children:"points"})," and partition them into clusters using the k-mean .\nIt uses the ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/K-means_clustering",children:"k-means algorithm"})]}),"\n",(0,n.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"points"}),(0,n.jsx)(t.td,{children:(0,n.jsxs)(t.strong,{children:[(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.3",children:"FeatureCollection"}),"<",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.2",children:"Point"}),">"]})}),(0,n.jsx)(t.td,{children:"to be clustered"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:["options",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Object"})}),(0,n.jsxs)(t.td,{children:["Optional parameters ",(0,n.jsx)(t.em,{children:"(default {})"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:["options.numberOfClusters",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"number"})}),(0,n.jsxs)(t.td,{children:["numberOfClusters that will be generated ",(0,n.jsx)(t.em,{children:"(default Math.sqrt(numberOfPoints/2))"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:["options.mutate",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"boolean"})}),(0,n.jsxs)(t.td,{children:["allows GeoJSON input to be mutated (significant performance increase if true) ",(0,n.jsx)(t.em,{children:"(default false)"})]})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,n.jsxs)("ul",{children:[(0,n.jsxs)(t.p,{children:[(0,n.jsxs)(t.strong,{children:[(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.3",children:"FeatureCollection"}),"<",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.2",children:"Point"}),">"]})," Clustered Points with an additional two properties associated to each Feature:"]}),(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"{number} cluster - the associated clusterId"}),"\n",(0,n.jsx)(t.li,{children:"{[number, number]} centroid - Centroid of the cluster [Longitude, Latitude]"}),"\n"]})]}),"\n",(0,n.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"// create random points with random z-values in their properties\nvar points = turf.randomPoint(100, { bbox: [0, 30, 20, 50] });\nvar options = { numberOfClusters: 7 };\nvar clustered = turf.clustersKmeans(points, options);\n"})}),"\n","\n",(0,n.jsx)(l.A,{children:()=>(0,n.jsx)(m,{})}),"\n",(0,n.jsx)(t.h3,{id:"installation",children:"Installation"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/clusters-kmeans\n\nimport { clustersKmeans } from "@turf/clusters-kmeans";\nconst result = clustersKmeans(...);\n'})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/turf\n\nimport * as turf from "@turf/turf";\nconst result = turf.clustersKmeans(...);\n'})})]})}function x(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},96766:e=>{"use strict";e.exports={eudist:function(e,t,r){for(var n=e.length,s=0,o=0;o<n;o++){var a=(e[o]||0)-(t[o]||0);s+=a*a}return r?Math.sqrt(s):s},mandist:function(e,t,r){for(var n=e.length,s=0,o=0;o<n;o++)s+=Math.abs((e[o]||0)-(t[o]||0));return r?Math.sqrt(s):s},dist:function(e,t,r){var n=Math.abs(e-t);return r?n:n*n}}},5810:(e,t,r)=>{"use strict";var n=r(96766),s=n.eudist,o=n.dist;e.exports={kmrand:function(e,t){for(var r={},n=[],s=t<<2,o=e.length,a=e[0].length>0;n.length<t&&s-- >0;){var i=e[Math.floor(Math.random()*o)],l=a?i.join("_"):""+i;r[l]||(r[l]=!0,n.push(i))}if(n.length<t)throw new Error("Error initializating clusters");return n},kmpp:function(e,t){var r=e[0].length?s:o,n=[],a=e.length,i=e[0].length>0,l=e[Math.floor(Math.random()*a)];i&&l.join("_");for(n.push(l);n.length<t;){for(var c=[],u=n.length,d=0,h=[],f=0;f<a;f++){for(var m=1/0,p=0;p<u;p++){var x=r(e[f],n[p]);x<=m&&(m=x)}c[f]=m}for(var v=0;v<a;v++)d+=c[v];for(var b=0;b<a;b++)h[b]={i:b,v:e[b],pr:c[b]/d,cs:0};h.sort((function(e,t){return e.pr-t.pr})),h[0].cs=h[0].pr;for(var j=1;j<a;j++)h[j].cs=h[j-1].cs+h[j].pr;for(var g=Math.random(),y=0;y<a-1&&h[y++].cs<g;);n.push(h[y-1].v)}return n}}},61756:(e,t,r)=>{"use strict";var n=r(96766),s=r(5810),o=n.eudist,a=(n.mandist,n.dist,s.kmrand),i=s.kmpp;function l(e,t,r){r=r||[];for(var n=0;n<e;n++)r[n]=t;return r}e.exports=function(e,t,r,n){var s=[],c=[],u=[],d=[],h=!1,f=n||1e4,m=e.length,p=e[0].length,x=p>0,v=[];if(r)s="kmrand"==r?a(e,t):"kmpp"==r?i(e,t):r;else for(var b={};s.length<t;){var j=Math.floor(Math.random()*m);b[j]||(b[j]=!0,s.push(e[j]))}do{l(t,0,v);for(var g=0;g<m;g++){for(var y=1/0,M=0,k=0;k<t;k++){(d=x?o(e[g],s[k]):Math.abs(e[g]-s[k]))<=y&&(y=d,M=k)}u[g]=M,v[M]++}for(var w=[],_=(c=[],0);_<t;_++)w[_]=x?l(p,0,w[_]):0,c[_]=s[_];if(x){for(var O=0;O<t;O++)s[O]=[];for(var C=0;C<m;C++)for(var P=w[u[C]],E=e[C],K=0;K<p;K++)P[K]+=E[K];h=!0;for(var F=0;F<t;F++){for(var A=s[F],D=w[F],I=c[F],L=v[F],N=0;N<p;N++)A[N]=D[N]/L||0;if(h)for(var S=0;S<p;S++)if(I[S]!=A[S]){h=!1;break}}}else{for(var G=0;G<m;G++){w[u[G]]+=e[G]}for(var q=0;q<t;q++)s[q]=w[q]/v[q]||0;h=!0;for(var R=0;R<t;R++)if(c[R]!=s[R]){h=!1;break}}h=h||--f<=0}while(!h);return{it:1e4-f,k:t,idxs:u,centroids:s}}},42634:()=>{},53257:(e,t,r)=>{"use strict";r.d(t,{Rd:()=>i,o8:()=>o});var n=Object.defineProperty,s=(e,t)=>n(e,"name",{value:t,configurable:!0});function o(e){if(!e)throw new Error("geojson is required");switch(e.type){case"Feature":return a(e);case"FeatureCollection":return l(e);case"Point":case"LineString":case"Polygon":case"MultiPoint":case"MultiLineString":case"MultiPolygon":case"GeometryCollection":return c(e);default:throw new Error("unknown GeoJSON type")}}function a(e){const t={type:"Feature"};return Object.keys(e).forEach((r=>{switch(r){case"type":case"properties":case"geometry":return;default:t[r]=e[r]}})),t.properties=i(e.properties),null==e.geometry?t.geometry=null:t.geometry=c(e.geometry),t}function i(e){const t={};return e?(Object.keys(e).forEach((r=>{const n=e[r];"object"==typeof n?null===n?t[r]=null:Array.isArray(n)?t[r]=n.map((e=>e)):t[r]=i(n):t[r]=n})),t):t}function l(e){const t={type:"FeatureCollection"};return Object.keys(e).forEach((r=>{switch(r){case"type":case"features":return;default:t[r]=e[r]}})),t.features=e.features.map((e=>a(e))),t}function c(e){const t={type:e.type};return e.bbox&&(t.bbox=e.bbox),"GeometryCollection"===e.type?(t.geometries=e.geometries.map((e=>c(e))),t):(t.coordinates=u(e.coordinates),t)}function u(e){const t=e;return"object"!=typeof t[0]?t.slice():t.map((e=>u(e)))}s(o,"clone"),s(a,"cloneFeature"),s(i,"cloneProperties"),s(l,"cloneFeatureCollection"),s(c,"cloneGeometry"),s(u,"deepSlice")},50539:(e,t,r)=>{"use strict";r.d(t,{p:()=>a});var n=r(53257),s=r(63399),o=r(61756);function a(e,t={}){var r=e.features.length;t.numberOfClusters=t.numberOfClusters||Math.round(Math.sqrt(r/2)),t.numberOfClusters>r&&(t.numberOfClusters=r),!0!==t.mutate&&(e=(0,n.o8)(e));var a=(0,s.D3)(e),i=a.slice(0,t.numberOfClusters),l=o(a,t.numberOfClusters,i),c={};return l.centroids.forEach((function(e,t){c[t]=e})),(0,s.us)(e,(function(e,t){var r=l.idxs[t];e.properties.cluster=r,e.properties.centroid=c[r]})),e}(0,Object.defineProperty)(a,"name",{value:"clustersKmeans",configurable:!0})},84245:(e,t,r)=>{"use strict";r.d(t,{_e:()=>l});var n=r(67149),s=Object.defineProperty,o=(e,t)=>s(e,"name",{value:t,configurable:!0});function a(e){return Array.isArray(e)?f(e):e&&e.bbox?f(e.bbox):[d(),h()]}function i(e){null!=e&&(Array.isArray(e)?(0,n.O6)(e):null!=e.bbox&&(0,n.O6)(e.bbox))}function l(e,t={}){i(t.bbox),null==e&&(e=1);const r=[];for(let s=0;s<e;s++)r.push((0,n.zx)(a(t.bbox)));return(0,n.Lr)(r)}function c(e){return t=>[t[0]+e[0],t[1]+e[1]]}function u(){return Math.random()-.5}function d(){return 360*u()}function h(){return 180*u()}function f(e){return[Math.random()*(e[2]-e[0])+e[0],Math.random()*(e[3]-e[1])+e[1]]}o((function(e){return i(e),a(e)}),"randomPosition"),o(a,"randomPositionUnchecked"),o(i,"checkBBox"),o(l,"randomPoint"),o((function(e,t={}){i(t.bbox),null==e&&(e=1),(0,n.Et)(t.num_vertices)&&void 0!==t.num_vertices||(t.num_vertices=10),(0,n.Et)(t.max_radial_length)&&void 0!==t.max_radial_length||(t.max_radial_length=10);const r=[];for(let s=0;s<e;s++){let e=[];const s=[...Array(t.num_vertices+1)].map(Math.random);s.forEach(((e,t,r)=>{r[t]=t>0?e+r[t-1]:e})),s.forEach((r=>{r=2*r*Math.PI/s[s.length-1];const n=Math.random();e.push([n*(t.max_radial_length||10)*Math.sin(r),n*(t.max_radial_length||10)*Math.cos(r)])})),e[e.length-1]=e[0],e=e.map(c(a(t.bbox))),r.push((0,n.n1)([e]))}return(0,n.Lr)(r)}),"randomPolygon"),o((function(e,t={}){if(t=t||{},!(0,n.Gv)(t))throw new Error("options is invalid");const r=t.bbox;i(r);let s=t.num_vertices,o=t.max_length,l=t.max_rotation;null==e&&(e=1),(!(0,n.Et)(s)||void 0===s||s<2)&&(s=10),(0,n.Et)(o)&&void 0!==o||(o=1e-4),(0,n.Et)(l)&&void 0!==l||(l=Math.PI/8);const c=[];for(let i=0;i<e;i++){const e=[a(r)];for(let t=0;t<s-1;t++){const r=(0===t?2*Math.random()*Math.PI:Math.tan((e[t][1]-e[t-1][1])/(e[t][0]-e[t-1][0])))+(Math.random()-.5)*l*2,n=Math.random()*o;e.push([e[t][0]+n*Math.cos(r),e[t][1]+n*Math.sin(r)])}c.push((0,n.wi)(e))}return(0,n.Lr)(c)}),"randomLineString"),o(c,"vertexToCoordinate"),o(u,"rnd"),o(d,"lon"),o(h,"lat"),o(f,"coordInBBox")}}]);