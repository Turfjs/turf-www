"use strict";(self.webpackChunkturf_www=self.webpackChunkturf_www||[]).push([[31432],{86981:(e,t,r)=>{r.r(t),r.d(t,{Map0:()=>x,assets:()=>h,contentTitle:()=>a,default:()=>A,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var n=r(74848),s=r(28453),i=r(54550),l=r(36145),d=r(78478);const o={title:"interpolate"},a=void 0,c={id:"api/interpolate",title:"interpolate",description:"Description",source:"@site/versioned_docs/version-6.5.0/api/interpolate.mdx",sourceDirName:"api",slug:"/api/interpolate",permalink:"/docs/6.5.0/api/interpolate",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-6.5.0/api/interpolate.mdx",tags:[],version:"6.5.0",frontMatter:{title:"interpolate"},sidebar:"apiSidebar",previous:{title:"sample",permalink:"/docs/6.5.0/api/sample"},next:{title:"isobands",permalink:"/docs/6.5.0/api/isobands"}},h={},p=[{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3},{value:"Installation",id:"installation",level:3}];function x(){var e=i._eC(30,{bbox:[50,30,70,50]});i.usj(e,(function(e){e.properties.solRad=50*Math.random()}));var t={grid:i.GWP(e,100,{gridType:"points",property:"solRad",units:"miles"})};return(0,n.jsx)(l.A,{addToMap:t})}function j(e){const t={a:"a",code:"code",em:"em",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h3,{id:"description",children:"Description"}),"\n",(0,n.jsxs)(t.p,{children:["Takes a set of points and estimates their 'property' values on a grid using the ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Inverse_distance_weighting",children:"Inverse Distance Weighting (IDW) method"}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"points"}),(0,n.jsx)(t.td,{children:(0,n.jsxs)(t.strong,{children:[(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.3",children:"FeatureCollection"}),"<",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.2",children:"Point"}),">"]})}),(0,n.jsx)(t.td,{children:"with known value"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"cellSize"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"number"})}),(0,n.jsx)(t.td,{children:"the distance across each grid point"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:["options",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Object"})}),(0,n.jsxs)(t.td,{children:["Optional parameters ",(0,n.jsx)(t.em,{children:"(default {})"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:["options.gridType",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"string"})}),(0,n.jsxs)(t.td,{children:["defines the output format based on a Grid Type (options: 'square' | 'point' | 'hex' | 'triangle') ",(0,n.jsx)(t.em,{children:"(default 'square')"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:["options.property",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"string"})}),(0,n.jsxs)(t.td,{children:["the property name in ",(0,n.jsx)(t.code,{children:"points"})," from which z-values will be pulled, zValue fallbacks to 3rd coordinate if no property exists. ",(0,n.jsx)(t.em,{children:"(default 'elevation')"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:["options.units",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"string"})}),(0,n.jsxs)(t.td,{children:["used in calculating cellSize, can be degrees, radians, miles, or kilometers ",(0,n.jsx)(t.em,{children:"(default 'kilometers')"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:["options.weight",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"number"})}),(0,n.jsxs)(t.td,{children:["exponent regulating the distance-decay weighting ",(0,n.jsx)(t.em,{children:"(default 1)"})]})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,n.jsx)("ul",{children:(0,n.jsxs)(t.p,{children:[(0,n.jsxs)(t.strong,{children:[(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.3",children:"FeatureCollection"}),"<",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.2",children:"Point"})," | ",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.6",children:"Polygon"}),">"]})," grid of points or polygons with interpolated 'property'"]})}),"\n",(0,n.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:'var points = turf.randomPoint(30, { bbox: [50, 30, 70, 50] });\n\n// add a random property to each point\nturf.featureEach(points, function (point) {\n  point.properties.solRad = Math.random() * 50;\n});\nvar options = { gridType: "points", property: "solRad", units: "miles" };\nvar grid = turf.interpolate(points, 100, options);\n'})}),"\n","\n",(0,n.jsx)(d.A,{children:()=>(0,n.jsx)(x,{})}),"\n",(0,n.jsx)(t.h3,{id:"installation",children:"Installation"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/interpolate\n\nimport { interpolate } from "@turf/interpolate";\nconst result = interpolate(...);\n'})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/turf\n\nimport * as turf from "@turf/turf";\nconst result = turf.interpolate(...);\n'})})]})}function A(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(j,{...e})}):j(e)}},54550:(e,t,r)=>{r.d(t,{B8d:()=>xe.A,BoU:()=>Y.A,Bqz:()=>G.A,Bw9:()=>D.A,C0c:()=>me.A,CNZ:()=>Z.Ay,CRN:()=>a.A,EUY:()=>re.A,EwI:()=>j.A,FU4:()=>fe.F,Fc$:()=>te.A,Fod:()=>d.A,FsR:()=>Q.A,GWP:()=>We.A,Gdr:()=>b.A,Glg:()=>J.A,IoC:()=>w.A,JQ7:()=>O.A,K9N:()=>I.A,KCZ:()=>Re.A,KrA:()=>ie.A,LNI:()=>n.A,Lrk:()=>we.Lr,Ms8:()=>l.A,NAY:()=>g.A,O9B:()=>Ie.A,PVF:()=>u.A,Qk1:()=>y.A,QwJ:()=>M.A,Qwm:()=>q.A,REH:()=>x.A,TcI:()=>h.A,UUz:()=>o.A,Vwd:()=>Te.A,W1F:()=>C.A,W26:()=>S.A,WRA:()=>we.WR,Wcw:()=>N.A,XM1:()=>p.A,Zqw:()=>ce.A,_6q:()=>pe.A,_Jg:()=>X.A,_eC:()=>ve._e,a1F:()=>Ce.A,bmV:()=>ge.A,cS4:()=>Pe.A,dKf:()=>Fe.A,dcc:()=>T.A,eZr:()=>ue.A,g52:()=>we.g5,gP4:()=>$.A,gXo:()=>m.A,hq2:()=>B.A,iv2:()=>ye.A,j_:()=>W.A,kJI:()=>R.A,kVe:()=>K.A,kg7:()=>v.A,n1:()=>we.n1,n1W:()=>A.A,nIv:()=>de.A,nUT:()=>z.A,nYW:()=>k.A,ne9:()=>E.A,nj9:()=>i.A,pPd:()=>he.A,pw2:()=>je.A,qMT:()=>U.A,qS_:()=>le.A,ra8:()=>ke.A,rb:()=>Ae.A,rkH:()=>ee.A,rmV:()=>ne.A,tLh:()=>oe.A,uO7:()=>ae.A,ucs:()=>P.A,usj:()=>be.us,v4M:()=>se.A,vKl:()=>c.A,vh2:()=>f.A,wdR:()=>L.A,wiw:()=>we.wi,xCI:()=>_.A,xYr:()=>F.A,xvE:()=>V.A,y$5:()=>_e.A,y5H:()=>s.A,ywB:()=>H.A,zY8:()=>fe.z,zx7:()=>we.zx});var n=r(27082),s=r(57941),i=r(50360),l=r(64335),d=r(44660),o=r(90301),a=r(47109),c=r(26584),h=r(102),p=r(59788),x=r(58658),j=r(47969),A=r(96338),u=r(33922),m=r(25903),g=r(12102),f=r(17450),v=r(2343),w=r(30669),b=r(29307),y=r(75917),k=r(39654),R=r(31234),_=(r(22608),r(69399)),C=r(37028),I=r(2116),F=r(18034),P=r(96221),T=r(67604),W=r(96558),z=r(37654),M=r(89481),N=r(90999),q=r(20491),D=r(50802),E=r(59895),U=r(18743),B=r(83811),V=r(51204),G=r(40368),K=r(78640),S=r(91988),Y=r(46021),J=r(52282),L=r(75448),O=r(86069),Q=r(82861),Z=r(65875),$=r(6773),H=r(5266),X=r(20790),ee=r(46156),te=r(7743),re=r(78664),ne=r(7861),se=r(46977),ie=r(38197),le=(r(74169),r(5486)),de=r(91349),oe=r(11557),ae=r(17788),ce=(r(58649),r(28297),r(64284),r(50347),r(20145),r(27296),r(1958),r(3327),r(64078),r(55263),r(22900),r(40231)),he=r(37601),pe=(r(17885),r(52170),r(57784)),xe=r(13012),je=r(53416),Ae=r(75843),ue=r(87836),me=r(29611),ge=(r(66093),r(19117)),fe=(r(25590),r(38220),r(2811)),ve=r(60073),we=(r(67925),r(93279)),be=(r(45046),r(29987)),ye=r(50365),ke=r(57468),Re=r(14657),_e=r(95475),Ce=r(39721),Ie=r(68526),Fe=r(33102),Pe=r(84071),Te=r(51465),We=r(83185)}}]);