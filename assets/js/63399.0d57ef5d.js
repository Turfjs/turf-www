"use strict";(self.webpackChunkturf_www=self.webpackChunkturf_www||[]).push([[63399],{63399:(e,t,r)=>{r.d(t,{D3:()=>c,Fh:()=>a,OQ:()=>d,RP:()=>y,iw:()=>h,jE:()=>f,kX:()=>g,n4:()=>s,t0:()=>v,us:()=>l});var n=r(67149),o=Object.defineProperty,i=(e,t)=>o(e,"name",{value:t,configurable:!0});function a(e,t,r){if(null!==e)for(var n,o,i,u,l,s,c,g,f=0,h=0,y=e.type,d="FeatureCollection"===y,p="Feature"===y,v=d?e.features.length:1,w=0;w<v;w++){l=(g=!!(c=d?e.features[w].geometry:p?e.geometry:e)&&"GeometryCollection"===c.type)?c.geometries.length:1;for(var P=0;P<l;P++){var m=0,b=0;if(null!==(u=g?c.geometries[P]:c)){s=u.coordinates;var k=u.type;switch(f=!r||"Polygon"!==k&&"MultiPolygon"!==k?0:1,k){case null:break;case"Point":if(!1===t(s,h,w,m,b))return!1;h++,m++;break;case"LineString":case"MultiPoint":for(n=0;n<s.length;n++){if(!1===t(s[n],h,w,m,b))return!1;h++,"MultiPoint"===k&&m++}"LineString"===k&&m++;break;case"Polygon":case"MultiLineString":for(n=0;n<s.length;n++){for(o=0;o<s[n].length-f;o++){if(!1===t(s[n][o],h,w,m,b))return!1;h++}"MultiLineString"===k&&m++,"Polygon"===k&&b++}"Polygon"===k&&m++;break;case"MultiPolygon":for(n=0;n<s.length;n++){for(b=0,o=0;o<s[n].length;o++){for(i=0;i<s[n][o].length-f;i++){if(!1===t(s[n][o][i],h,w,m,b))return!1;h++}b++}m++}break;case"GeometryCollection":for(n=0;n<u.geometries.length;n++)if(!1===a(u.geometries[n],t,r))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function u(e,t){var r;switch(e.type){case"FeatureCollection":for(r=0;r<e.features.length&&!1!==t(e.features[r].properties,r);r++);break;case"Feature":t(e.properties,0)}}function l(e,t){if("Feature"===e.type)t(e,0);else if("FeatureCollection"===e.type)for(var r=0;r<e.features.length&&!1!==t(e.features[r],r);r++);}function s(e,t,r){var n=r;return l(e,(function(e,o){n=0===o&&void 0===r?e:t(n,e,o)})),n}function c(e){var t=[];return a(e,(function(e){t.push(e)})),t}function g(e,t){var r,n,o,i,a,u,l,s,c,g,f=0,h="FeatureCollection"===e.type,y="Feature"===e.type,d=h?e.features.length:1;for(r=0;r<d;r++){for(u=h?e.features[r].geometry:y?e.geometry:e,s=h?e.features[r].properties:y?e.properties:{},c=h?e.features[r].bbox:y?e.bbox:void 0,g=h?e.features[r].id:y?e.id:void 0,a=(l=!!u&&"GeometryCollection"===u.type)?u.geometries.length:1,o=0;o<a;o++)if(null!==(i=l?u.geometries[o]:u))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===t(i,f,s,c,g))return!1;break;case"GeometryCollection":for(n=0;n<i.geometries.length;n++)if(!1===t(i.geometries[n],f,s,c,g))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===t(null,f,s,c,g))return!1;f++}}function f(e,t,r){var n=r;return g(e,(function(e,o,i,a,u){n=0===o&&void 0===r?e:t(n,e,o,i,a,u)})),n}function h(e,t){g(e,(function(e,r,o,i,a){var u,l=null===e?null:e.type;switch(l){case null:case"Point":case"LineString":case"Polygon":return!1!==t((0,n.N4)(e,o,{bbox:i,id:a}),r,0)&&void 0}switch(l){case"MultiPoint":u="Point";break;case"MultiLineString":u="LineString";break;case"MultiPolygon":u="Polygon"}for(var s=0;s<e.coordinates.length;s++){var c={type:u,coordinates:e.coordinates[s]};if(!1===t((0,n.N4)(c,o),r,s))return!1}}))}function y(e,t){h(e,(function(e,r,o){var i=0;if(e.geometry){var u=e.geometry.type;if("Point"!==u&&"MultiPoint"!==u){var l,s=0,c=0,g=0;return!1!==a(e,(function(a,u,f,h,y){if(void 0===l||r>s||h>c||y>g)return l=a,s=r,c=h,g=y,void(i=0);var d=(0,n.wi)([l,a],e.properties);if(!1===t(d,r,o,y,i))return!1;i++,l=a}))&&void 0}}}))}function d(e,t,r){var n=r,o=!1;return y(e,(function(e,i,a,u,l){n=!1===o&&void 0===r?e:t(n,e,i,a,u,l),o=!0})),n}function p(e,t){if(!e)throw new Error("geojson is required");h(e,(function(e,r,o){if(null!==e.geometry){var i=e.geometry.type,a=e.geometry.coordinates;switch(i){case"LineString":if(!1===t(e,r,o,0,0))return!1;break;case"Polygon":for(var u=0;u<a.length;u++)if(!1===t((0,n.wi)(a[u],e.properties),r,o,u))return!1}}}))}function v(e,t,r){var n=r;return p(e,(function(e,o,i,a){n=0===o&&void 0===r?e:t(n,e,o,i,a)})),n}i(a,"coordEach"),i((function(e,t,r,n){var o=r;return a(e,(function(e,n,i,a,u){o=0===n&&void 0===r?e:t(o,e,n,i,a,u)}),n),o}),"coordReduce"),i(u,"propEach"),i((function(e,t,r){var n=r;return u(e,(function(e,o){n=0===o&&void 0===r?e:t(n,e,o)})),n}),"propReduce"),i(l,"featureEach"),i(s,"featureReduce"),i(c,"coordAll"),i(g,"geomEach"),i(f,"geomReduce"),i(h,"flattenEach"),i((function(e,t,r){var n=r;return h(e,(function(e,o,i){n=0===o&&0===i&&void 0===r?e:t(n,e,o,i)})),n}),"flattenReduce"),i(y,"segmentEach"),i(d,"segmentReduce"),i(p,"lineEach"),i(v,"lineReduce"),i((function(e,t){if(t=t||{},!(0,n.Gv)(t))throw new Error("options is invalid");var r,o=t.featureIndex||0,i=t.multiFeatureIndex||0,a=t.geometryIndex||0,u=t.segmentIndex||0,l=t.properties;switch(e.type){case"FeatureCollection":o<0&&(o=e.features.length+o),l=l||e.features[o].properties,r=e.features[o].geometry;break;case"Feature":l=l||e.properties,r=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":r=e;break;default:throw new Error("geojson is invalid")}if(null===r)return null;var s=r.coordinates;switch(r.type){case"Point":case"MultiPoint":return null;case"LineString":return u<0&&(u=s.length+u-1),(0,n.wi)([s[u],s[u+1]],l,t);case"Polygon":return a<0&&(a=s.length+a),u<0&&(u=s[a].length+u-1),(0,n.wi)([s[a][u],s[a][u+1]],l,t);case"MultiLineString":return i<0&&(i=s.length+i),u<0&&(u=s[i].length+u-1),(0,n.wi)([s[i][u],s[i][u+1]],l,t);case"MultiPolygon":return i<0&&(i=s.length+i),a<0&&(a=s[i].length+a),u<0&&(u=s[i][a].length-u-1),(0,n.wi)([s[i][a][u],s[i][a][u+1]],l,t)}throw new Error("geojson is invalid")}),"findSegment"),i((function(e,t){if(t=t||{},!(0,n.Gv)(t))throw new Error("options is invalid");var r,o=t.featureIndex||0,i=t.multiFeatureIndex||0,a=t.geometryIndex||0,u=t.coordIndex||0,l=t.properties;switch(e.type){case"FeatureCollection":o<0&&(o=e.features.length+o),l=l||e.features[o].properties,r=e.features[o].geometry;break;case"Feature":l=l||e.properties,r=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":r=e;break;default:throw new Error("geojson is invalid")}if(null===r)return null;var s=r.coordinates;switch(r.type){case"Point":return(0,n.zx)(s,l,t);case"MultiPoint":return i<0&&(i=s.length+i),(0,n.zx)(s[i],l,t);case"LineString":return u<0&&(u=s.length+u),(0,n.zx)(s[u],l,t);case"Polygon":return a<0&&(a=s.length+a),u<0&&(u=s[a].length+u),(0,n.zx)(s[a][u],l,t);case"MultiLineString":return i<0&&(i=s.length+i),u<0&&(u=s[i].length+u),(0,n.zx)(s[i][u],l,t);case"MultiPolygon":return i<0&&(i=s.length+i),a<0&&(a=s[i].length+a),u<0&&(u=s[i][a].length-u),(0,n.zx)(s[i][a][u],l,t)}throw new Error("geojson is invalid")}),"findPoint")}}]);