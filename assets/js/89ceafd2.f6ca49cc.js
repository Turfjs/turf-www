"use strict";(self.webpackChunkturf_www=self.webpackChunkturf_www||[]).push([[35225],{18414:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>o});var t=r(74848),n=r(28453);r(36145),r(78478);const i={title:"lengthToDegrees"},l=void 0,a={id:"api/lengthToDegrees",title:"lengthToDegrees",description:"Description",source:"@site/versioned_docs/version-7.0.0/api/lengthToDegrees.mdx",sourceDirName:"api",slug:"/api/lengthToDegrees",permalink:"/docs/api/lengthToDegrees",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-7.0.0/api/lengthToDegrees.mdx",tags:[],version:"7.0.0",frontMatter:{title:"lengthToDegrees"},sidebar:"apiSidebar",previous:{title:"degreesToRadians",permalink:"/docs/api/degreesToRadians"},next:{title:"lengthToRadians",permalink:"/docs/api/lengthToRadians"}},d={},o=[{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Installation",id:"installation",level:3}];function c(e){const s={code:"code",em:"em",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h3,{id:"description",children:"Description"}),"\n",(0,t.jsx)(s.p,{children:"Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\nValid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet"}),"\n",(0,t.jsx)(s.h3,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Name"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"distance"}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"number"})}),(0,t.jsx)(s.td,{children:"in real units"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{children:["units",(0,t.jsx)("i",{children:"?"})]}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"string"})}),(0,t.jsxs)(s.td,{children:["can be degrees, radians, miles, inches, yards, metres, meters, kilometres, kilometers. ",(0,t.jsx)(s.em,{children:'(default "kilometers")'})]})]})]})]}),"\n",(0,t.jsx)(s.h3,{id:"returns",children:"Returns"}),"\n",(0,t.jsx)("ul",{children:(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"number"})," degrees"]})}),"\n",(0,t.jsx)(s.h3,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:'$ npm install @turf/helpers\n\nimport { lengthToDegrees } from "@turf/helpers";\nconst result = lengthToDegrees(...);\n'})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:'$ npm install @turf/turf\n\nimport * as turf from "@turf/turf";\nconst result = turf.lengthToDegrees(...);\n'})})]})}function h(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);