"use strict";(self.webpackChunkturf_www=self.webpackChunkturf_www||[]).push([[6566],{4195:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>a});var r=n(4848),i=n(8453);n(800),n(6145),n(8478);const s={title:"findSegment"},d=void 0,l={id:"api/findSegment",title:"findSegment",description:"Description",source:"@site/docs/api/findSegment.mdx",sourceDirName:"api",slug:"/api/findSegment",permalink:"/docs/api/findSegment",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/findSegment.mdx",tags:[],version:"current",frontMatter:{title:"findSegment"},sidebar:"apiSidebar",previous:{title:"findPoint",permalink:"/docs/api/findPoint"},next:{title:"geometry",permalink:"/docs/api/geometry"}},c={},a=[{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3},{value:"Installation",id:"installation",level:3}];function o(e){const t={a:"a",code:"code",em:"em",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h3,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(t.p,{children:["Finds a particular 2-vertex LineString Segment from a GeoJSON using ",(0,r.jsx)(t.code,{children:"@turf/meta"})," indexes."]}),"\n",(0,r.jsx)(t.p,{children:"Negative indexes are permitted.\nPoint & MultiPoint will always return null."}),"\n",(0,r.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"geojson"}),(0,r.jsx)(t.td,{children:(0,r.jsxs)(t.strong,{children:[(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.3",children:"FeatureCollection"})," | ",(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.2",children:"Feature"})," | ",(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1",children:"Geometry"})]})}),(0,r.jsx)(t.td,{children:"Any GeoJSON Feature or Geometry"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{children:["options",(0,r.jsx)("i",{children:"?"})]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"Object"})}),(0,r.jsxs)(t.td,{children:["Optional parameters ",(0,r.jsx)(t.em,{children:"(default {})"})]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{children:["options.featureIndex",(0,r.jsx)("i",{children:"?"})]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"number"})}),(0,r.jsxs)(t.td,{children:["Feature Index ",(0,r.jsx)(t.em,{children:"(default 0)"})]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{children:["options.multiFeatureIndex",(0,r.jsx)("i",{children:"?"})]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"number"})}),(0,r.jsxs)(t.td,{children:["Multi-Feature Index ",(0,r.jsx)(t.em,{children:"(default 0)"})]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{children:["options.geometryIndex",(0,r.jsx)("i",{children:"?"})]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"number"})}),(0,r.jsxs)(t.td,{children:["Geometry Index ",(0,r.jsx)(t.em,{children:"(default 0)"})]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{children:["options.segmentIndex",(0,r.jsx)("i",{children:"?"})]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"number"})}),(0,r.jsxs)(t.td,{children:["Segment Index ",(0,r.jsx)(t.em,{children:"(default 0)"})]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{children:["options.properties",(0,r.jsx)("i",{children:"?"})]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"Object"})}),(0,r.jsxs)(t.td,{children:["Translate Properties to output LineString ",(0,r.jsx)(t.em,{children:"(default {})"})]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{children:["options.bbox",(0,r.jsx)("i",{children:"?"})]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-5",children:"BBox"})})}),(0,r.jsxs)(t.td,{children:["Translate BBox to output LineString ",(0,r.jsx)(t.em,{children:"(default {})"})]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{children:["options.id",(0,r.jsx)("i",{children:"?"})]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"number | string"})}),(0,r.jsxs)(t.td,{children:["Translate Id to output LineString ",(0,r.jsx)(t.em,{children:"(default {})"})]})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)("ul",{children:(0,r.jsxs)(t.p,{children:[(0,r.jsxs)(t.strong,{children:[(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.2",children:"Feature"}),"<",(0,r.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.4",children:"LineString"}),">"]})," 2-vertex GeoJSON Feature LineString"]})}),"\n",(0,r.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:"var multiLine = turf.multiLineString([\n  [\n    [10, 10],\n    [50, 30],\n    [30, 40],\n  ],\n  [\n    [-10, -10],\n    [-50, -30],\n    [-30, -40],\n  ],\n]);\n\n// First Segment (defaults are 0)\nturf.findSegment(multiLine);\n// => Feature<LineString<[[10, 10], [50, 30]]>>\n\n// First Segment of 2nd Multi Feature\nturf.findSegment(multiLine, { multiFeatureIndex: 1 });\n// => Feature<LineString<[[-10, -10], [-50, -30]]>>\n\n// Last Segment of Last Multi Feature\nturf.findSegment(multiLine, { multiFeatureIndex: -1, segmentIndex: -1 });\n// => Feature<LineString<[[-50, -30], [-30, -40]]>>\n"})}),"\n",(0,r.jsx)(t.h3,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/meta\n\nimport { findSegment } from "@turf/meta";\nconst result = findSegment(...);\n'})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/turf\n\nimport * as turf from "@turf/turf";\nconst result = turf.findSegment(...);\n'})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}}}]);