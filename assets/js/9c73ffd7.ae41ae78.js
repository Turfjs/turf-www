(self.webpackChunkturf_www=self.webpackChunkturf_www||[]).push([[63198],{3498:(e,t,r)=>{"use strict";r.r(t),r.d(t,{Map0:()=>p,assets:()=>h,contentTitle:()=>u,default:()=>y,frontMatter:()=>l,metadata:()=>d,toc:()=>f});var n=r(74848),o=r(28453),a=r(67149),i=r(72440),s=r(36145),c=r(78478);const l={title:"transformRotate"},u=void 0,d={id:"api/transformRotate",title:"transformRotate",description:"Description",source:"@site/docs/api/transformRotate.mdx",sourceDirName:"api",slug:"/api/transformRotate",permalink:"/docs/next/api/transformRotate",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/transformRotate.mdx",tags:[],version:"current",frontMatter:{title:"transformRotate"},sidebar:"apiSidebar",previous:{title:"tesselate",permalink:"/docs/next/api/tesselate"},next:{title:"transformScale",permalink:"/docs/next/api/transformScale"}},h={},f=[{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3},{value:"Installation",id:"installation",level:3}];function p(){var e=a.n1([[[0,29],[3.5,29],[2.5,32],[0,29]]]),t=i.q(e,10,{pivot:[0,25]}),r={poly:e,rotatedPoly:t};return t.properties={stroke:"#F00","stroke-width":4},(0,n.jsx)(s.A,{addToMap:r})}function m(e){const t={a:"a",code:"code",em:"em",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h3,{id:"description",children:"Description"}),"\n",(0,n.jsxs)(t.p,{children:["Rotates any geojson Feature or Geometry of a specified angle, around its ",(0,n.jsx)(t.code,{children:"centroid"})," or a given ",(0,n.jsx)(t.code,{children:"pivot"})," point."]}),"\n",(0,n.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"geojson"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3",children:"GeoJSON"})})}),(0,n.jsx)(t.td,{children:"object to be rotated"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"angle"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"number"})}),(0,n.jsx)(t.td,{children:"of rotation in decimal degrees, positive clockwise"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:["options",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Object"})}),(0,n.jsxs)(t.td,{children:["Optional parameters ",(0,n.jsx)(t.em,{children:"(default {})"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:["options.pivot",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.1",children:"Coord"})})}),(0,n.jsxs)(t.td,{children:["point around which the rotation will be performed ",(0,n.jsx)(t.em,{children:"(default 'centroid')"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:["options.mutate",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"boolean"})}),(0,n.jsxs)(t.td,{children:["allows GeoJSON input to be mutated (significant performance increase if true) ",(0,n.jsx)(t.em,{children:"(default false)"})]})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,n.jsx)("ul",{children:(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3",children:"GeoJSON"})})," the rotated GeoJSON feature"]})}),"\n",(0,n.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"var poly = turf.polygon([\n  [\n    [0, 29],\n    [3.5, 29],\n    [2.5, 32],\n    [0, 29],\n  ],\n]);\nvar options = { pivot: [0, 25] };\nvar rotatedPoly = turf.transformRotate(poly, 10, options);\n"})}),"\n","\n",(0,n.jsx)(c.A,{children:()=>(0,n.jsx)(p,{})}),"\n",(0,n.jsx)(t.h3,{id:"installation",children:"Installation"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/transform-rotate\n\nimport { transformRotate } from "@turf/transform-rotate";\nconst result = transformRotate(...);\n'})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/turf\n\nimport * as turf from "@turf/turf";\nconst result = turf.transformRotate(...);\n'})})]})}function y(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}},42634:()=>{},79204:(e,t,r)=>{"use strict";r.d(t,{v:()=>a});var n=r(67149),o=r(63399);function a(e,t={}){let r=0,a=0,i=0;return(0,o.Fh)(e,(function(e){r+=e[0],a+=e[1],i++}),!0),(0,n.zx)([r/i,a/i],t.properties)}(0,Object.defineProperty)(a,"name",{value:"centroid",configurable:!0})},53257:(e,t,r)=>{"use strict";r.d(t,{Rd:()=>s,o8:()=>a});var n=Object.defineProperty,o=(e,t)=>n(e,"name",{value:t,configurable:!0});function a(e){if(!e)throw new Error("geojson is required");switch(e.type){case"Feature":return i(e);case"FeatureCollection":return c(e);case"Point":case"LineString":case"Polygon":case"MultiPoint":case"MultiLineString":case"MultiPolygon":case"GeometryCollection":return l(e);default:throw new Error("unknown GeoJSON type")}}function i(e){const t={type:"Feature"};return Object.keys(e).forEach((r=>{switch(r){case"type":case"properties":case"geometry":return;default:t[r]=e[r]}})),t.properties=s(e.properties),null==e.geometry?t.geometry=null:t.geometry=l(e.geometry),t}function s(e){const t={};return e?(Object.keys(e).forEach((r=>{const n=e[r];"object"==typeof n?null===n?t[r]=null:Array.isArray(n)?t[r]=n.map((e=>e)):t[r]=s(n):t[r]=n})),t):t}function c(e){const t={type:"FeatureCollection"};return Object.keys(e).forEach((r=>{switch(r){case"type":case"features":return;default:t[r]=e[r]}})),t.features=e.features.map((e=>i(e))),t}function l(e){const t={type:e.type};return e.bbox&&(t.bbox=e.bbox),"GeometryCollection"===e.type?(t.geometries=e.geometries.map((e=>l(e))),t):(t.coordinates=u(e.coordinates),t)}function u(e){const t=e;return"object"!=typeof t[0]?t.slice():t.map((e=>u(e)))}o(a,"clone"),o(i,"cloneFeature"),o(s,"cloneProperties"),o(c,"cloneFeatureCollection"),o(l,"cloneGeometry"),o(u,"deepSlice")},83490:(e,t,r)=>{"use strict";r.d(t,{$R:()=>s,Pw:()=>d,bg:()=>u,iw:()=>l,mo:()=>c,uG:()=>i});var n=r(67149),o=Object.defineProperty,a=(e,t)=>o(e,"name",{value:t,configurable:!0});function i(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return[...e.geometry.coordinates];if("Point"===e.type)return[...e.coordinates]}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return[...e];throw new Error("coord must be GeoJSON Point or an Array of numbers")}function s(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function c(e,t,r){if(!e)throw new Error("No feature passed");if(!r)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!e.geometry||e.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.geometry.type)}function l(e,t,r){if(!e)throw new Error("No featureCollection passed");if(!r)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+r+", FeatureCollection required");for(const n of e.features){if(!n||"Feature"!==n.type||!n.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!n.geometry||n.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+n.geometry.type)}}function u(e){return"Feature"===e.type?e.geometry:e}function d(e,t){return"FeatureCollection"===e.type?"FeatureCollection":"GeometryCollection"===e.type?"GeometryCollection":"Feature"===e.type&&null!==e.geometry?e.geometry.type:e.type}a(i,"getCoord"),a(s,"getCoords"),a((function e(t){if(t.length>1&&(0,n.Et)(t[0])&&(0,n.Et)(t[1]))return!0;if(Array.isArray(t[0])&&t[0].length)return e(t[0]);throw new Error("coordinates must only contain numbers")}),"containsNumber"),a((function(e,t,r){if(!t||!r)throw new Error("type and name required");if(!e||e.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.type)}),"geojsonType"),a(c,"featureOf"),a(l,"collectionOf"),a(u,"getGeom"),a(d,"getType")},86137:(e,t,r)=>{"use strict";r.d(t,{F:()=>s});var n=r(67149),o=r(83490),a=Object.defineProperty,i=(e,t)=>a(e,"name",{value:t,configurable:!0});function s(e,t,r={}){let n;n=r.final?c((0,o.uG)(t),(0,o.uG)(e)):c((0,o.uG)(e),(0,o.uG)(t));return n>180?-(360-n):n}function c(e,t){const r=(0,n.tR)(e[1]),o=(0,n.tR)(t[1]);let a=(0,n.tR)(t[0]-e[0]);a>Math.PI&&(a-=2*Math.PI),a<-Math.PI&&(a+=2*Math.PI);const i=Math.log(Math.tan(o/2+Math.PI/4)/Math.tan(r/2+Math.PI/4)),s=Math.atan2(a,i);return((0,n.nv)(s)+360)%360}i(s,"rhumbBearing"),i(c,"calculateRhumbBearing")},89783:(e,t,r)=>{"use strict";r.d(t,{r:()=>s});var n=r(67149),o=r(83490),a=Object.defineProperty,i=(e,t)=>a(e,"name",{value:t,configurable:!0});function s(e,t,r,a={}){const i=t<0;let s=(0,n.I3)(Math.abs(t),a.units,"meters");i&&(s=-Math.abs(s));const l=(0,o.uG)(e),u=c(l,s,r);return u[0]+=u[0]-l[0]>180?-360:l[0]-u[0]>180?360:0,(0,n.zx)(u,a.properties)}function c(e,t,r,o){const a=t/(o=void 0===o?n.zX:Number(o)),i=e[0]*Math.PI/180,s=(0,n.tR)(e[1]),c=(0,n.tR)(r),l=a*Math.cos(c);let u=s+l;Math.abs(u)>Math.PI/2&&(u=u>0?Math.PI-u:-Math.PI-u);const d=Math.log(Math.tan(u/2+Math.PI/4)/Math.tan(s/2+Math.PI/4)),h=Math.abs(d)>1e-11?l/d:Math.cos(s);return[(180*(i+a*Math.sin(c)/h)/Math.PI+540)%360-180,180*u/Math.PI]}i(s,"rhumbDestination"),i(c,"calculateRhumbDestination")},82:(e,t,r)=>{"use strict";r.d(t,{E:()=>s});var n=r(67149),o=r(83490),a=Object.defineProperty,i=(e,t)=>a(e,"name",{value:t,configurable:!0});function s(e,t,r={}){const a=(0,o.uG)(e),i=(0,o.uG)(t);i[0]+=i[0]-a[0]>180?-360:a[0]-i[0]>180?360:0;const s=c(a,i);return(0,n.I3)(s,"meters",r.units)}function c(e,t,r){const o=r=void 0===r?n.zX:Number(r),a=e[1]*Math.PI/180,i=t[1]*Math.PI/180,s=i-a;let c=Math.abs(t[0]-e[0])*Math.PI/180;c>Math.PI&&(c-=2*Math.PI);const l=Math.log(Math.tan(i/2+Math.PI/4)/Math.tan(a/2+Math.PI/4)),u=Math.abs(l)>1e-11?s/l:Math.cos(a);return Math.sqrt(s*s+u*u*c*c)*o}i(s,"rhumbDistance"),i(c,"calculateRhumbDistance")},72440:(e,t,r)=>{"use strict";r.d(t,{q:()=>d});var n=r(79204),o=r(86137),a=r(82),i=r(89783),s=r(53257),c=r(63399),l=r(83490),u=r(67149);function d(e,t,r){if(r=r||{},!(0,u.Gv)(r))throw new Error("options is invalid");var d=r.pivot,h=r.mutate;if(!e)throw new Error("geojson is required");if(null==t||isNaN(t))throw new Error("angle is required");return 0===t||(d||(d=(0,n.v)(e)),!1!==h&&void 0!==h||(e=(0,s.o8)(e)),(0,c.Fh)(e,(function(e){var r=(0,o.F)(d,e)+t,n=(0,a.E)(d,e),s=(0,l.$R)((0,i.r)(d,n,r));e[0]=s[0],e[1]=s[1]}))),e}(0,Object.defineProperty)(d,"name",{value:"transformRotate",configurable:!0})}}]);