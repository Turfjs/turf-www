(self.webpackChunkturf_www=self.webpackChunkturf_www||[]).push([[73935],{16997:(e,t,r)=>{"use strict";r.r(t),r.d(t,{Map0:()=>p,assets:()=>h,contentTitle:()=>u,default:()=>y,frontMatter:()=>l,metadata:()=>d,toc:()=>f});var n=r(74848),o=r(28453),a=r(67149),s=r(54387),i=r(36145),c=r(78478);const l={title:"transformScale"},u=void 0,d={id:"api/transformScale",title:"transformScale",description:"Description",source:"@site/docs/api/transformScale.mdx",sourceDirName:"api",slug:"/api/transformScale",permalink:"/docs/next/api/transformScale",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/transformScale.mdx",tags:[],version:"current",frontMatter:{title:"transformScale"},sidebar:"apiSidebar",previous:{title:"transformRotate",permalink:"/docs/next/api/transformRotate"},next:{title:"transformTranslate",permalink:"/docs/next/api/transformTranslate"}},h={},f=[{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3},{value:"Installation",id:"installation",level:3}];function p(){var e=a.n1([[[0,29],[3.5,29],[2.5,32],[0,29]]]),t=s.n(e,3),r={poly:e,scaledPoly:t};return t.properties={stroke:"#F00","stroke-width":4},(0,n.jsx)(i.A,{addToMap:r})}function m(e){const t={a:"a",code:"code",em:"em",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h3,{id:"description",children:"Description"}),"\n",(0,n.jsx)(t.p,{children:"Scale a GeoJSON from a given point by a factor of scaling (ex: factor=2 would make the GeoJSON 200% larger).\nIf a FeatureCollection is provided, the origin point will be calculated based on each individual Feature."}),"\n",(0,n.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"geojson"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3",children:"GeoJSON"})})}),(0,n.jsx)(t.td,{children:"GeoJSON to be scaled"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"factor"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"number"})}),(0,n.jsx)(t.td,{children:"of scaling, positive values greater than 0. Numbers between 0 and 1 will shrink the geojson, numbers greater than 1 will expand it, a factor of 1 will not change the geojson."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:["options",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Object"})}),(0,n.jsxs)(t.td,{children:["Optional parameters ",(0,n.jsx)(t.em,{children:"(default {})"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:["options.origin",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsxs)(t.strong,{children:["string | ",(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.1",children:"Coord"})]})}),(0,n.jsxs)(t.td,{children:["Point from which the scaling will occur (string options: sw/se/nw/ne/center/centroid) ",(0,n.jsx)(t.em,{children:"(default 'centroid')"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:["options.mutate",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"boolean"})}),(0,n.jsxs)(t.td,{children:["allows GeoJSON input to be mutated (significant performance increase if true) ",(0,n.jsx)(t.em,{children:"(default false)"})]})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,n.jsx)("ul",{children:(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.a,{href:"https://tools.ietf.org/html/rfc7946#section-3",children:"GeoJSON"})})," scaled GeoJSON"]})}),"\n",(0,n.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"var poly = turf.polygon([\n  [\n    [0, 29],\n    [3.5, 29],\n    [2.5, 32],\n    [0, 29],\n  ],\n]);\nvar scaledPoly = turf.transformScale(poly, 3);\n"})}),"\n","\n",(0,n.jsx)(c.A,{children:()=>(0,n.jsx)(p,{})}),"\n",(0,n.jsx)(t.h3,{id:"installation",children:"Installation"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/transform-scale\n\nimport { transformScale } from "@turf/transform-scale";\nconst result = transformScale(...);\n'})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:'$ npm install @turf/turf\n\nimport * as turf from "@turf/turf";\nconst result = turf.transformScale(...);\n'})})]})}function y(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}},42634:()=>{},99589:(e,t,r)=>{"use strict";r.d(t,{Q:()=>o});var n=r(63399);function o(e,t={}){if(null!=e.bbox&&!0!==t.recompute)return e.bbox;const r=[1/0,1/0,-1/0,-1/0];return(0,n.Fh)(e,(e=>{r[0]>e[0]&&(r[0]=e[0]),r[1]>e[1]&&(r[1]=e[1]),r[2]<e[0]&&(r[2]=e[0]),r[3]<e[1]&&(r[3]=e[1])})),r}(0,Object.defineProperty)(o,"name",{value:"bbox",configurable:!0})},36223:(e,t,r)=>{"use strict";r.d(t,{g:()=>a});var n=r(99589),o=r(67149);function a(e,t={}){const r=(0,n.Q)(e),a=(r[0]+r[2])/2,s=(r[1]+r[3])/2;return(0,o.zx)([a,s],t.properties,t)}(0,Object.defineProperty)(a,"name",{value:"center",configurable:!0})},79204:(e,t,r)=>{"use strict";r.d(t,{v:()=>a});var n=r(67149),o=r(63399);function a(e,t={}){let r=0,a=0,s=0;return(0,o.Fh)(e,(function(e){r+=e[0],a+=e[1],s++}),!0),(0,n.zx)([r/s,a/s],t.properties)}(0,Object.defineProperty)(a,"name",{value:"centroid",configurable:!0})},53257:(e,t,r)=>{"use strict";r.d(t,{Rd:()=>i,o8:()=>a});var n=Object.defineProperty,o=(e,t)=>n(e,"name",{value:t,configurable:!0});function a(e){if(!e)throw new Error("geojson is required");switch(e.type){case"Feature":return s(e);case"FeatureCollection":return c(e);case"Point":case"LineString":case"Polygon":case"MultiPoint":case"MultiLineString":case"MultiPolygon":case"GeometryCollection":return l(e);default:throw new Error("unknown GeoJSON type")}}function s(e){const t={type:"Feature"};return Object.keys(e).forEach((r=>{switch(r){case"type":case"properties":case"geometry":return;default:t[r]=e[r]}})),t.properties=i(e.properties),null==e.geometry?t.geometry=null:t.geometry=l(e.geometry),t}function i(e){const t={};return e?(Object.keys(e).forEach((r=>{const n=e[r];"object"==typeof n?null===n?t[r]=null:Array.isArray(n)?t[r]=n.map((e=>e)):t[r]=i(n):t[r]=n})),t):t}function c(e){const t={type:"FeatureCollection"};return Object.keys(e).forEach((r=>{switch(r){case"type":case"features":return;default:t[r]=e[r]}})),t.features=e.features.map((e=>s(e))),t}function l(e){const t={type:e.type};return e.bbox&&(t.bbox=e.bbox),"GeometryCollection"===e.type?(t.geometries=e.geometries.map((e=>l(e))),t):(t.coordinates=u(e.coordinates),t)}function u(e){const t=e;return"object"!=typeof t[0]?t.slice():t.map((e=>u(e)))}o(a,"clone"),o(s,"cloneFeature"),o(i,"cloneProperties"),o(c,"cloneFeatureCollection"),o(l,"cloneGeometry"),o(u,"deepSlice")},83490:(e,t,r)=>{"use strict";r.d(t,{$R:()=>i,Pw:()=>d,bg:()=>u,iw:()=>l,mo:()=>c,uG:()=>s});var n=r(67149),o=Object.defineProperty,a=(e,t)=>o(e,"name",{value:t,configurable:!0});function s(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return[...e.geometry.coordinates];if("Point"===e.type)return[...e.coordinates]}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return[...e];throw new Error("coord must be GeoJSON Point or an Array of numbers")}function i(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function c(e,t,r){if(!e)throw new Error("No feature passed");if(!r)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!e.geometry||e.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.geometry.type)}function l(e,t,r){if(!e)throw new Error("No featureCollection passed");if(!r)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+r+", FeatureCollection required");for(const n of e.features){if(!n||"Feature"!==n.type||!n.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!n.geometry||n.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+n.geometry.type)}}function u(e){return"Feature"===e.type?e.geometry:e}function d(e,t){return"FeatureCollection"===e.type?"FeatureCollection":"GeometryCollection"===e.type?"GeometryCollection":"Feature"===e.type&&null!==e.geometry?e.geometry.type:e.type}a(s,"getCoord"),a(i,"getCoords"),a((function e(t){if(t.length>1&&(0,n.Et)(t[0])&&(0,n.Et)(t[1]))return!0;if(Array.isArray(t[0])&&t[0].length)return e(t[0]);throw new Error("coordinates must only contain numbers")}),"containsNumber"),a((function(e,t,r){if(!t||!r)throw new Error("type and name required");if(!e||e.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.type)}),"geojsonType"),a(c,"featureOf"),a(l,"collectionOf"),a(u,"getGeom"),a(d,"getType")},86137:(e,t,r)=>{"use strict";r.d(t,{F:()=>i});var n=r(67149),o=r(83490),a=Object.defineProperty,s=(e,t)=>a(e,"name",{value:t,configurable:!0});function i(e,t,r={}){let n;n=r.final?c((0,o.uG)(t),(0,o.uG)(e)):c((0,o.uG)(e),(0,o.uG)(t));return n>180?-(360-n):n}function c(e,t){const r=(0,n.tR)(e[1]),o=(0,n.tR)(t[1]);let a=(0,n.tR)(t[0]-e[0]);a>Math.PI&&(a-=2*Math.PI),a<-Math.PI&&(a+=2*Math.PI);const s=Math.log(Math.tan(o/2+Math.PI/4)/Math.tan(r/2+Math.PI/4)),i=Math.atan2(a,s);return((0,n.nv)(i)+360)%360}s(i,"rhumbBearing"),s(c,"calculateRhumbBearing")},89783:(e,t,r)=>{"use strict";r.d(t,{r:()=>i});var n=r(67149),o=r(83490),a=Object.defineProperty,s=(e,t)=>a(e,"name",{value:t,configurable:!0});function i(e,t,r,a={}){const s=t<0;let i=(0,n.I3)(Math.abs(t),a.units,"meters");s&&(i=-Math.abs(i));const l=(0,o.uG)(e),u=c(l,i,r);return u[0]+=u[0]-l[0]>180?-360:l[0]-u[0]>180?360:0,(0,n.zx)(u,a.properties)}function c(e,t,r,o){const a=t/(o=void 0===o?n.zX:Number(o)),s=e[0]*Math.PI/180,i=(0,n.tR)(e[1]),c=(0,n.tR)(r),l=a*Math.cos(c);let u=i+l;Math.abs(u)>Math.PI/2&&(u=u>0?Math.PI-u:-Math.PI-u);const d=Math.log(Math.tan(u/2+Math.PI/4)/Math.tan(i/2+Math.PI/4)),h=Math.abs(d)>1e-11?l/d:Math.cos(i);return[(180*(s+a*Math.sin(c)/h)/Math.PI+540)%360-180,180*u/Math.PI]}s(i,"rhumbDestination"),s(c,"calculateRhumbDestination")},82:(e,t,r)=>{"use strict";r.d(t,{E:()=>i});var n=r(67149),o=r(83490),a=Object.defineProperty,s=(e,t)=>a(e,"name",{value:t,configurable:!0});function i(e,t,r={}){const a=(0,o.uG)(e),s=(0,o.uG)(t);s[0]+=s[0]-a[0]>180?-360:a[0]-s[0]>180?360:0;const i=c(a,s);return(0,n.I3)(i,"meters",r.units)}function c(e,t,r){const o=r=void 0===r?n.zX:Number(r),a=e[1]*Math.PI/180,s=t[1]*Math.PI/180,i=s-a;let c=Math.abs(t[0]-e[0])*Math.PI/180;c>Math.PI&&(c-=2*Math.PI);const l=Math.log(Math.tan(s/2+Math.PI/4)/Math.tan(a/2+Math.PI/4)),u=Math.abs(l)>1e-11?i/l:Math.cos(a);return Math.sqrt(i*i+u*u*c*c)*o}s(i,"rhumbDistance"),s(c,"calculateRhumbDistance")},54387:(e,t,r)=>{"use strict";r.d(t,{n:()=>m});var n=r(53257),o=r(36223),a=r(79204),s=r(99589),i=r(86137),c=r(82),l=r(89783),u=r(63399),d=r(67149),h=r(83490),f=Object.defineProperty,p=(e,t)=>f(e,"name",{value:t,configurable:!0});function m(e,t,r){if(r=r||{},!(0,d.Gv)(r))throw new Error("options is invalid");var o=r.origin,a=r.mutate;if(!e)throw new Error("geojson required");if("number"!=typeof t||t<=0)throw new Error("invalid factor");var s=Array.isArray(o)||"object"==typeof o;return!0!==a&&(e=(0,n.o8)(e)),"FeatureCollection"!==e.type||s?y(e,t,o):((0,u.us)(e,(function(r,n){e.features[n]=y(r,t,o)})),e)}function y(e,t,r){var n="Point"===(0,h.Pw)(e);return r=g(e,r),1===t||n||((0,u.Fh)(e,(function(e){var n=(0,c.E)(r,e),o=(0,i.F)(r,e),a=n*t,s=(0,h.$R)((0,l.r)(r,a,o));e[0]=s[0],e[1]=s[1],3===e.length&&(e[2]*=t)})),delete e.bbox),e}function g(e,t){if(null==t&&(t="centroid"),Array.isArray(t)||"object"==typeof t)return(0,h.uG)(t);var r=e.bbox?e.bbox:(0,s.Q)(e,{recalculate:!0}),n=r[0],i=r[1],c=r[2],l=r[3];switch(t){case"sw":case"southwest":case"westsouth":case"bottomleft":return(0,d.zx)([n,i]);case"se":case"southeast":case"eastsouth":case"bottomright":return(0,d.zx)([c,i]);case"nw":case"northwest":case"westnorth":case"topleft":return(0,d.zx)([n,l]);case"ne":case"northeast":case"eastnorth":case"topright":return(0,d.zx)([c,l]);case"center":return(0,o.g)(e);case void 0:case null:case"centroid":return(0,a.v)(e);default:throw new Error("invalid origin")}}p(m,"transformScale"),p(y,"scale"),p(g,"defineOrigin")}}]);