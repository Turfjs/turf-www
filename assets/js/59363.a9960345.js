/*! For license information please see 59363.a9960345.js.LICENSE.txt */
"use strict";(self.webpackChunkturf_www=self.webpackChunkturf_www||[]).push([[59363],{99589:(e,r,t)=>{t.d(r,{Q:()=>n});var o=t(63399);function n(e,r={}){if(null!=e.bbox&&!0!==r.recompute)return e.bbox;const t=[1/0,1/0,-1/0,-1/0];return(0,o.Fh)(e,(e=>{t[0]>e[0]&&(t[0]=e[0]),t[1]>e[1]&&(t[1]=e[1]),t[2]<e[0]&&(t[2]=e[0]),t[3]<e[1]&&(t[3]=e[1])})),t}(0,Object.defineProperty)(n,"name",{value:"bbox",configurable:!0})},10200:(e,r,t)=>{t.d(r,{m:()=>a});const o=function(e,r){for(var t=0,o=0,n=0,i=0,s=0,a=0,l=0,u=0,h=null,c=null,p=e[0],f=e[1],d=r.length;t<d;t++){o=0;var g=r[t].length-1,y=r[t];if((h=y[0])[0]!==y[g][0]&&h[1]!==y[g][1])throw new Error("First and last coordinates in a ring must be the same");for(s=h[0]-p,a=h[1]-f;o<g;o++)if(u=(c=y[o+1])[1]-f,a<0&&u<0||a>0&&u>0)a=u,s=(h=c)[0]-p;else{if(l=c[0]-e[0],u>0&&a<=0){if((i=s*u-l*a)>0)n+=1;else if(0===i)return 0}else if(a>0&&u<=0){if((i=s*u-l*a)<0)n+=1;else if(0===i)return 0}else if(0===u&&a<0){if(0===(i=s*u-l*a))return 0}else if(0===a&&u<0){if(0===(i=s*u-l*a))return 0}else if(0===a&&0===u){if(l<=0&&s>=0)return 0;if(s<=0&&l>=0)return 0}h=c,a=u,s=l}}return n%2!=0};var n=t(83490),i=Object.defineProperty,s=(e,r)=>i(e,"name",{value:r,configurable:!0});function a(e,r,t={}){if(!e)throw new Error("point is required");if(!r)throw new Error("polygon is required");const i=(0,n.uG)(e),s=(0,n.bg)(r),a=s.type,u=r.bbox;let h=s.coordinates;if(u&&!1===l(i,u))return!1;"Polygon"===a&&(h=[h]);let c=!1;for(var p=0;p<h.length;++p){const e=o(i,h[p]);if(0===e)return!t.ignoreBoundary;e&&(c=!0)}return c}function l(e,r){return r[0]<=e[0]&&r[1]<=e[1]&&r[2]>=e[0]&&r[3]>=e[1]}s(a,"booleanPointInPolygon"),s(l,"inBBox")},85078:(e,r,t)=>{t.d(r,{O:()=>s});var o=t(83490),n=Object.defineProperty,i=(e,r)=>n(e,"name",{value:r,configurable:!0});function s(e,r,t={}){const n=(0,o.uG)(e),i=(0,o.$R)(r);for(let o=0;o<i.length-1;o++){let e=!1;if(t.ignoreEndVertices&&(0===o&&(e="start"),o===i.length-2&&(e="end"),0===o&&o+1===i.length-1&&(e="both")),a(i[o],i[o+1],n,e,void 0===t.epsilon?null:t.epsilon))return!0}return!1}function a(e,r,t,o,n){const i=t[0],s=t[1],a=e[0],l=e[1],u=r[0],h=r[1],c=u-a,p=h-l,f=(t[0]-a)*p-(t[1]-l)*c;if(null!==n){if(Math.abs(f)>n)return!1}else if(0!==f)return!1;return o?"start"===o?Math.abs(c)>=Math.abs(p)?c>0?a<i&&i<=u:u<=i&&i<a:p>0?l<s&&s<=h:h<=s&&s<l:"end"===o?Math.abs(c)>=Math.abs(p)?c>0?a<=i&&i<u:u<i&&i<=a:p>0?l<=s&&s<h:h<s&&s<=l:"both"===o&&(Math.abs(c)>=Math.abs(p)?c>0?a<i&&i<u:u<i&&i<a:p>0?l<s&&s<h:h<s&&s<l):Math.abs(c)>=Math.abs(p)?c>0?a<=i&&i<=u:u<=i&&i<=a:p>0?l<=s&&s<=h:h<=s&&s<=l}i(s,"booleanPointOnLine"),i(a,"isPointOnLineSegment")},18685:(e,r,t)=>{t.d(r,{I:()=>i});var o=t(83490),n=t(67149);function i(e,r,t={}){var i=(0,o.uG)(e),s=(0,o.uG)(r),a=(0,n.tR)(s[1]-i[1]),l=(0,n.tR)(s[0]-i[0]),u=(0,n.tR)(i[1]),h=(0,n.tR)(s[1]),c=Math.pow(Math.sin(a/2),2)+Math.pow(Math.sin(l/2),2)*Math.cos(u)*Math.cos(h);return(0,n.cJ)(2*Math.atan2(Math.sqrt(c),Math.sqrt(1-c)),t.units)}(0,Object.defineProperty)(i,"name",{value:"distance",configurable:!0})},83490:(e,r,t)=>{t.d(r,{$R:()=>a,Pw:()=>c,bg:()=>h,iw:()=>u,mo:()=>l,uG:()=>s});var o=t(67149),n=Object.defineProperty,i=(e,r)=>n(e,"name",{value:r,configurable:!0});function s(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return[...e.geometry.coordinates];if("Point"===e.type)return[...e.coordinates]}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return[...e];throw new Error("coord must be GeoJSON Point or an Array of numbers")}function a(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function l(e,r,t){if(!e)throw new Error("No feature passed");if(!t)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!e.geometry||e.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.geometry.type)}function u(e,r,t){if(!e)throw new Error("No featureCollection passed");if(!t)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+t+", FeatureCollection required");for(const o of e.features){if(!o||"Feature"!==o.type||!o.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!o.geometry||o.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+o.geometry.type)}}function h(e){return"Feature"===e.type?e.geometry:e}function c(e,r){return"FeatureCollection"===e.type?"FeatureCollection":"GeometryCollection"===e.type?"GeometryCollection":"Feature"===e.type&&null!==e.geometry?e.geometry.type:e.type}i(s,"getCoord"),i(a,"getCoords"),i((function e(r){if(r.length>1&&(0,o.Et)(r[0])&&(0,o.Et)(r[1]))return!0;if(Array.isArray(r[0])&&r[0].length)return e(r[0]);throw new Error("coordinates must only contain numbers")}),"containsNumber"),i((function(e,r,t){if(!r||!t)throw new Error("type and name required");if(!e||e.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.type)}),"geojsonType"),i(l,"featureOf"),i(u,"collectionOf"),i(h,"getGeom"),i(c,"getType")},90319:(e,r,t)=>{t.d(r,{L:()=>M});var o=t(99589),n=t(63399),i=t(83490),s=t(67149);function a(e,r,t){return e<r?(t-e)/(r-e):(e-t)/(e-r)}function l(){this.successCallback=null,this.verbose=!1,this.polygons=!1,this.polygons_full=!1,this.linearRing=!0,this.noQuadTree=!1,this.noFrame=!1}function u(e,r,t,o){var n=[];return e.polygons.forEach((function(e){e.forEach((function(e){e[0]+=r,e[1]+=t})),o.linearRing&&e.push(e[0]),n.push(e)})),n}function h(e,r,t,o){return 0===t?(e+=1,r+=o[0][1]):1===t?e+=o[0][0]:2===t?r+=o[0][1]:3===t&&(e+=o[0][0],r+=1),[e,r]}function c(e,r,t){return 0===t?e++:1===t||(2===t?r++:3===t&&(e++,r++)),[e,r]}function p(e,r,t,o,n){var i=o,s=n,a=0,l=0;if(this.x=r,this.y=t,this.lowerBound=null,this.upperBound=null,this.childA=null,this.childB=null,this.childC=null,this.childD=null,1===o&&1===n)this.lowerBound=Math.min(e[t][r],e[t][r+1],e[t+1][r+1],e[t+1][r]),this.upperBound=Math.max(e[t][r],e[t][r+1],e[t+1][r+1],e[t+1][r]);else{if(o>1){for(;0!==i;)i>>=1,a++;o===1<<a-1&&a--,i=1<<a-1}if(n>1){for(;0!==s;)s>>=1,l++;n===1<<l-1&&l--,s=1<<l-1}this.childA=new p(e,r,t,i,s),this.lowerBound=this.childA.lowerBound,this.upperBound=this.childA.upperBound,o-i>0&&(this.childB=new p(e,r+i,t,o-i,s),this.lowerBound=Math.min(this.lowerBound,this.childB.lowerBound),this.upperBound=Math.max(this.upperBound,this.childB.upperBound),n-s>0&&(this.childC=new p(e,r+i,t+s,o-i,n-s),this.lowerBound=Math.min(this.lowerBound,this.childC.lowerBound),this.upperBound=Math.max(this.upperBound,this.childC.upperBound))),n-s>0&&(this.childD=new p(e,r,t+s,i,n-s),this.lowerBound=Math.min(this.lowerBound,this.childD.lowerBound),this.upperBound=Math.max(this.upperBound,this.childD.upperBound))}}function f(e){var r,t;if(!e)throw new Error("data is required");if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Error("data must be scalar field, i.e. array of arrays");if(e.length<2)throw new Error("data must contain at least two rows");if((t=e[0].length)<2)throw new Error("data must contain at least two columns");for(r=1;r<e.length;r++){if(!Array.isArray(e[r]))throw new Error("Row "+r+" is not an array");if(e[r].length!=t)throw new Error("unequal row lengths detected, please provide a regular grid")}this.data=e,this.root=new p(e,0,0,e[0].length-1,e.length-1)}function d(e,r,t){var o,n,i,s=!1,p=!1,d=null,y=null,w=null,m=null,b=null,v=[];if(!e)throw new Error("data is required");if(null==r)throw new Error("threshold is required");if(t&&"object"!=typeof t)throw new Error("options must be an object");if(o=function(e){var r,t,o,n,i;for(n=new l,e=e||{},i=Object.keys(n),r=0;r<i.length;r++)null!=(o=e[t=i[r]])&&(n[t]=o);return n.polygons_full=!n.polygons,n.interpolate=a,n}(t),e instanceof f)d=e,y=e.root,w=e.data,o.noQuadTree||(s=!0);else{if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Error("input is neither array of arrays nor object retrieved from 'QuadTree()'");w=e}if(Array.isArray(r)){for(p=!0,o.noQuadTree||(s=!0),n=0;n<r.length;n++)if(isNaN(+r[n]))throw new Error("threshold["+n+"] is not a number")}else{if(isNaN(+r))throw new Error("threshold must be a number or array of numbers");r=[r]}return s&&!y&&(d=new f(w),y=d.root,w=d.data),o.verbose&&(o.polygons?console.log("MarchingSquaresJS-isoLines: returning single lines (polygons) for each grid cell"):console.log("MarchingSquaresJS-isoLines: returning line paths (polygons) for entire data grid"),p&&console.log("MarchingSquaresJS-isoLines: multiple lines requested, returning array of line paths instead of lines for a single threshold")),r.forEach((function(e,r){if(b=[],o.threshold=e,o.verbose&&console.log("MarchingSquaresJS-isoLines: computing iso lines for threshold "+e),o.polygons)if(s)y.cellsBelowThreshold(o.threshold,!0).forEach((function(e){b=b.concat(u(g(w,e.x,e.y,o),e.x,e.y,o))}));else for(i=0;i<w.length-1;++i)for(r=0;r<w[0].length-1;++r)b=b.concat(u(g(w,r,i,o),r,i,o));else{for(m=[],r=0;r<w[0].length-1;++r)m[r]=[];if(s)y.cellsBelowThreshold(o.threshold,!1).forEach((function(e){m[e.x][e.y]=g(w,e.x,e.y,o)}));else for(r=0;r<w[0].length-1;++r)for(i=0;i<w.length-1;++i)m[r][i]=g(w,r,i,o);b=function(e,r,t){var o,n,i,s,a,l,u,p,f,d,g,y,w,m,b,v=[],B=e.length-1,E=e[0].length-1,P=["right","bottom","left","top"],x=[0,-1,0,1],M=[-1,0,1,0],A={bottom:1,left:2,top:3,right:0};return t.noFrame||function(e,r){var t,o,n,i,s;for(t=!0,o=e[0].length,n=e.length,s=0;s<n;s++)if(e[s][0]>=r||e[s][o-1]>=r){t=!1;break}if(t&&(e[n-1][0]>=r||e[n-1][o-1]>=r)&&(t=!1),t)for(i=0;i<o-1;i++)if(e[0][i]>=r||e[n-1][i]>r){t=!1;break}return t}(e,t.threshold)&&(t.linearRing?v.push([[0,0],[0,B],[E,B],[E,0],[0,0]]):v.push([[0,0],[0,B],[E,B],[E,0]])),r.forEach((function(e,k){e.forEach((function(e,O){for(o=null,n=0;n<4;n++)if(o=P[n],"object"==typeof e.edges[o]){for(a=[],i=e.edges[o],l=o,u=k,p=O,f=!1,d=[k+i.path[0][0],O+i.path[0][1]],a.push(d);!f&&"object"==typeof(s=r[u][p]).edges[l];)if(i=s.edges[l],delete s.edges[l],(g=i.path[1])[0]+=u,g[1]+=p,a.push(g),l=i.move.enter,u+=i.move.x,p+=i.move.y,void 0===r[u]||void 0===r[u][p]){if(!t.linearRing)break;if(y=0,w=0,u===E?(u--,y=0):u<0?(u++,y=2):p===B?(p--,y=3):p<0&&(p++,y=1),u===k&&p===O&&y===A[o]){f=!0,l=o;break}for(;;){if(m=!1,w>4)throw new Error("Direction change counter overflow! This should never happen!");if(void 0!==r[u]&&void 0!==r[u][p]&&(s=r[u][p],b=P[y],"object"==typeof s.edges[b])){i=s.edges[b],a.push(h(u,p,y,i.path)),l=b,m=!0;break}if(m)break;if(a.push(c(u,p,y)),p+=M[y],void 0!==r[u+=x[y]]&&void 0!==r[u][p]||(0===y&&p<0||1===y&&u<0||2===y&&p===B||3===y&&u===E)&&(u-=x[y],p-=M[y],y=(y+1)%4,w++),u===k&&p===O&&y===A[o]){f=!0,l=o;break}}}!t.linearRing||a[a.length-1][0]===d[0]&&a[a.length-1][1]===d[1]||a.push(d),v.push(a)}}))})),v}(w,m,o)}p?v.push(b):v=b,"function"==typeof o.successCallback&&o.successCallback(v,e)})),v}function g(e,r,t,o){var n,i,s,a,l,u,h=0,c=e[t+1][r],p=e[t+1][r+1],f=e[t][r+1],d=e[t][r],g=o.threshold;if(!(isNaN(d)||isNaN(f)||isNaN(p)||isNaN(c))){switch(h|=c>=g?8:0,h|=p>=g?4:0,h|=f>=g?2:0,u={cval:h=+(h|=d>=g?1:0),polygons:[],edges:{},x0:d,x1:f,x2:p,x3:c},h){case 0:o.polygons&&u.polygons.push([[0,0],[0,1],[1,1],[1,0]]);break;case 15:break;case 14:n=o.interpolate(d,c,g),a=o.interpolate(d,f,g),o.polygons_full&&(u.edges.left={path:[[0,n],[a,0]],move:{x:0,y:-1,enter:"top"}}),o.polygons&&u.polygons.push([[0,0],[0,n],[a,0]]);break;case 13:a=o.interpolate(d,f,g),i=o.interpolate(f,p,g),o.polygons_full&&(u.edges.bottom={path:[[a,0],[1,i]],move:{x:1,y:0,enter:"left"}}),o.polygons&&u.polygons.push([[a,0],[1,i],[1,0]]);break;case 11:i=o.interpolate(f,p,g),s=o.interpolate(c,p,g),o.polygons_full&&(u.edges.right={path:[[1,i],[s,1]],move:{x:0,y:1,enter:"bottom"}}),o.polygons&&u.polygons.push([[1,i],[s,1],[1,1]]);break;case 7:n=o.interpolate(d,c,g),s=o.interpolate(c,p,g),o.polygons_full&&(u.edges.top={path:[[s,1],[0,n]],move:{x:-1,y:0,enter:"right"}}),o.polygons&&u.polygons.push([[s,1],[0,n],[0,1]]);break;case 1:n=o.interpolate(d,c,g),a=o.interpolate(d,f,g),o.polygons_full&&(u.edges.bottom={path:[[a,0],[0,n]],move:{x:-1,y:0,enter:"right"}}),o.polygons&&u.polygons.push([[a,0],[0,n],[0,1],[1,1],[1,0]]);break;case 2:a=o.interpolate(d,f,g),i=o.interpolate(f,p,g),o.polygons_full&&(u.edges.right={path:[[1,i],[a,0]],move:{x:0,y:-1,enter:"top"}}),o.polygons&&u.polygons.push([[0,0],[0,1],[1,1],[1,i],[a,0]]);break;case 4:i=o.interpolate(f,p,g),s=o.interpolate(c,p,g),o.polygons_full&&(u.edges.top={path:[[s,1],[1,i]],move:{x:1,y:0,enter:"left"}}),o.polygons&&u.polygons.push([[0,0],[0,1],[s,1],[1,i],[1,0]]);break;case 8:n=o.interpolate(d,c,g),s=o.interpolate(c,p,g),o.polygons_full&&(u.edges.left={path:[[0,n],[s,1]],move:{x:0,y:1,enter:"bottom"}}),o.polygons&&u.polygons.push([[0,0],[0,n],[s,1],[1,1],[1,0]]);break;case 12:n=o.interpolate(d,c,g),i=o.interpolate(f,p,g),o.polygons_full&&(u.edges.left={path:[[0,n],[1,i]],move:{x:1,y:0,enter:"left"}}),o.polygons&&u.polygons.push([[0,0],[0,n],[1,i],[1,0]]);break;case 9:a=o.interpolate(d,f,g),s=o.interpolate(c,p,g),o.polygons_full&&(u.edges.bottom={path:[[a,0],[s,1]],move:{x:0,y:1,enter:"bottom"}}),o.polygons&&u.polygons.push([[a,0],[s,1],[1,1],[1,0]]);break;case 3:n=o.interpolate(d,c,g),i=o.interpolate(f,p,g),o.polygons_full&&(u.edges.right={path:[[1,i],[0,n]],move:{x:-1,y:0,enter:"right"}}),o.polygons&&u.polygons.push([[0,n],[0,1],[1,1],[1,i]]);break;case 6:a=o.interpolate(d,f,g),s=o.interpolate(c,p,g),o.polygons_full&&(u.edges.top={path:[[s,1],[a,0]],move:{x:0,y:-1,enter:"top"}}),o.polygons&&u.polygons.push([[0,0],[0,1],[s,1],[a,0]]);break;case 10:n=o.interpolate(d,c,g),i=o.interpolate(f,p,g),a=o.interpolate(d,f,g),s=o.interpolate(c,p,g),l=(d+f+p+c)/4,o.polygons_full&&(l<g?(u.edges.left={path:[[0,n],[s,1]],move:{x:0,y:1,enter:"bottom"}},u.edges.right={path:[[1,i],[a,0]],move:{x:0,y:-1,enter:"top"}}):(u.edges.right={path:[[1,i],[s,1]],move:{x:0,y:1,enter:"bottom"}},u.edges.left={path:[[0,n],[a,0]],move:{x:0,y:-1,enter:"top"}})),o.polygons&&(l<g?u.polygons.push([[0,0],[0,n],[s,1],[1,1],[1,i],[a,0]]):(u.polygons.push([[0,0],[0,n],[a,0]]),u.polygons.push([[s,1],[1,1],[1,i]])));break;case 5:n=o.interpolate(d,c,g),i=o.interpolate(f,p,g),a=o.interpolate(d,f,g),s=o.interpolate(c,p,g),l=(d+f+p+c)/4,o.polygons_full&&(l<g?(u.edges.bottom={path:[[a,0],[0,n]],move:{x:-1,y:0,enter:"right"}},u.edges.top={path:[[s,1],[1,i]],move:{x:1,y:0,enter:"left"}}):(u.edges.top={path:[[s,1],[0,n]],move:{x:-1,y:0,enter:"right"}},u.edges.bottom={path:[[a,0],[1,i]],move:{x:1,y:0,enter:"left"}})),o.polygons&&(l<g?u.polygons.push([[0,n],[0,1],[s,1],[1,i],[1,0],[a,0]]):(u.polygons.push([[0,n],[0,1],[s,1]]),u.polygons.push([[a,0],[1,i],[1,0]])))}return u}}p.prototype.cellsInBand=function(e,r,t){var o=[];return t=void 0===t||t,this.lowerBound>r||this.upperBound<e||(this.childA||this.childB||this.childC||this.childD?(this.childA&&(o=o.concat(this.childA.cellsInBand(e,r,t))),this.childB&&(o=o.concat(this.childB.cellsInBand(e,r,t))),this.childD&&(o=o.concat(this.childD.cellsInBand(e,r,t))),this.childC&&(o=o.concat(this.childC.cellsInBand(e,r,t)))):(t||this.lowerBound<=e||this.upperBound>=r)&&o.push({x:this.x,y:this.y})),o},p.prototype.cellsBelowThreshold=function(e,r){var t=[];return r=void 0===r||r,this.lowerBound>e||(this.childA||this.childB||this.childC||this.childD?(this.childA&&(t=t.concat(this.childA.cellsBelowThreshold(e,r))),this.childB&&(t=t.concat(this.childB.cellsBelowThreshold(e,r))),this.childD&&(t=t.concat(this.childD.cellsBelowThreshold(e,r))),this.childC&&(t=t.concat(this.childC.cellsBelowThreshold(e,r)))):(r||this.upperBound>=e)&&t.push({x:this.x,y:this.y})),t};var y=Object.defineProperty,w=Object.getOwnPropertySymbols,m=Object.prototype.hasOwnProperty,b=Object.prototype.propertyIsEnumerable,v=(e,r,t)=>r in e?y(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t,B=(e,r)=>{for(var t in r||(r={}))m.call(r,t)&&v(e,t,r[t]);if(w)for(var t of w(r))b.call(r,t)&&v(e,t,r[t]);return e},E=(e,r)=>y(e,"name",{value:r,configurable:!0});function P(e,r){if(r=r||{},!(0,s.Gv)(r))throw new Error("options is invalid");var t=r.zProperty||"elevation",o=r.flip,n=r.flags;(0,i.iw)(e,"Point","input must contain Points");for(var a=x(e,o),l=[],u=0;u<a.length;u++){for(var h=a[u],c=[],p=0;p<h.length;p++){var f=h[p];f.properties[t]?c.push(f.properties[t]):c.push(0),!0===n&&(f.properties.matrixPosition=[u,p])}l.push(c)}return l}function x(e,r){var t={};return(0,n.us)(e,(function(e){var r=(0,i.$R)(e)[1];t[r]||(t[r]=[]),t[r].push(e)})),Object.keys(t).map((function(e){return t[e].sort((function(e,r){return(0,i.$R)(e)[0]-(0,i.$R)(r)[0]}))})).sort((function(e,t){return r?(0,i.$R)(e[0])[1]-(0,i.$R)(t[0])[1]:(0,i.$R)(t[0])[1]-(0,i.$R)(e[0])[1]}))}function M(e,r,t){if(t=t||{},!(0,s.Gv)(t))throw new Error("options is invalid");const o=t.zProperty||"elevation",n=t.commonProperties||{},a=t.breaksProperties||[];if((0,i.iw)(e,"Point","Input must contain Points"),!r)throw new Error("breaks is required");if(!Array.isArray(r))throw new Error("breaks must be an Array");if(!(0,s.Gv)(n))throw new Error("commonProperties must be an Object");if(!Array.isArray(a))throw new Error("breaksProperties must be an Array");const l=P(e,{zProperty:o,flip:!0}),u=k(A(l,r,o,n,a),l,e);return(0,s.Lr)(u)}function A(e,r,t,o,n){const i=[];for(let a=0;a<r.length;a++){const l=+r[a],u=B(B({},o),n[a]);u[t]=l;const h=(0,s.NU)(d(e,l,{linearRing:!1,noFrame:!0}),u);i.push(h)}return i}function k(e,r,t){const i=(0,o.Q)(t),s=i[2]-i[0],a=i[3]-i[1],l=i[0],u=i[1],h=r[0].length-1,c=r.length-1,p=s/h,f=a/c,d=E((e=>{e[0]=e[0]*p+l,e[1]=e[1]*f+u}),"resize");return e.forEach((e=>{(0,n.Fh)(e,d)})),e}E(P,"gridToMatrix"),E(x,"sortPointsByLatLng"),E(M,"isolines"),E(A,"createIsoLines"),E(k,"rescaleIsolines")},76693:(e,r,t)=>{t.d(r,{h:()=>E});var o=t(99589),n=t(85078),i=t(10200),s=t(83490),a=Object.defineProperty,l=(e,r)=>a(e,"name",{value:r,configurable:!0});function u(e,r){var t=(0,s.bg)(e),o=(0,s.bg)(r),a=t.type,l=o.type;switch(a){case"Point":switch(l){case"MultiPoint":return h(t,o);case"LineString":return(0,n.O)(t,o,{ignoreEndVertices:!0});case"Polygon":case"MultiPolygon":return(0,i.m)(t,o,{ignoreBoundary:!0});default:throw new Error("feature2 "+l+" geometry not supported")}case"MultiPoint":switch(l){case"MultiPoint":return c(t,o);case"LineString":return p(t,o);case"Polygon":case"MultiPolygon":return f(t,o);default:throw new Error("feature2 "+l+" geometry not supported")}case"LineString":switch(l){case"LineString":return d(t,o);case"Polygon":case"MultiPolygon":return g(t,o);default:throw new Error("feature2 "+l+" geometry not supported")}case"Polygon":switch(l){case"Polygon":case"MultiPolygon":return y(t,o);default:throw new Error("feature2 "+l+" geometry not supported")}default:throw new Error("feature1 "+a+" geometry not supported")}}function h(e,r){var t,o=!1;for(t=0;t<r.coordinates.length;t++)if(m(r.coordinates[t],e.coordinates)){o=!0;break}return o}function c(e,r){for(var t=0;t<e.coordinates.length;t++){for(var o=!1,n=0;n<r.coordinates.length;n++)m(e.coordinates[t],r.coordinates[n])&&(o=!0);if(!o)return!1}return!0}function p(e,r){for(var t=!1,o=0;o<e.coordinates.length;o++){if(!(0,n.O)(e.coordinates[o],r))return!1;t||(t=(0,n.O)(e.coordinates[o],r,{ignoreEndVertices:!0}))}return t}function f(e,r){for(var t=!0,o=!1,n=0;n<e.coordinates.length;n++){if(!(o=(0,i.m)(e.coordinates[n],r))){t=!1;break}o=(0,i.m)(e.coordinates[n],r,{ignoreBoundary:!0})}return t&&o}function d(e,r){for(var t=0;t<e.coordinates.length;t++)if(!(0,n.O)(e.coordinates[t],r))return!1;return!0}function g(e,r){if(!w((0,o.Q)(r),(0,o.Q)(e)))return!1;for(var t=!1,n=0;n<e.coordinates.length;n++){if(!(0,i.m)(e.coordinates[n],r))return!1;if(t||(t=(0,i.m)(e.coordinates[n],r,{ignoreBoundary:!0})),!t&&n<e.coordinates.length-1){var s=b(e.coordinates[n],e.coordinates[n+1]);t=(0,i.m)(s,r,{ignoreBoundary:!0})}}return t}function y(e,r){var t=(0,o.Q)(e);if(!w((0,o.Q)(r),t))return!1;for(var n=0;n<e.coordinates[0].length;n++)if(!(0,i.m)(e.coordinates[0][n],r))return!1;return!0}function w(e,r){return!(e[0]>r[0])&&(!(e[2]<r[2])&&(!(e[1]>r[1])&&!(e[3]<r[3])))}function m(e,r){return e[0]===r[0]&&e[1]===r[1]}function b(e,r){return[(e[0]+r[0])/2,(e[1]+r[1])/2]}l(u,"booleanWithin"),l(h,"isPointInMultiPoint"),l(c,"isMultiPointInMultiPoint"),l(p,"isMultiPointOnLine"),l(f,"isMultiPointInPoly"),l(d,"isLineOnLine"),l(g,"isLineInPoly"),l(y,"isPolyInPoly"),l(w,"doBBoxOverlap"),l(m,"compareCoords"),l(b,"getMidpoint");var v=t(18685),B=t(67149);function E(e,r,t={}){t.mask&&!t.units&&(t.units="kilometers");for(var o=[],n=e[0],i=e[1],s=e[2],a=e[3],l=r/(0,v.I)([n,i],[s,i],t)*(s-n),h=r/(0,v.I)([n,i],[n,a],t)*(a-i),c=s-n,p=a-i,f=Math.floor(c/l),d=(p-Math.floor(p/h)*h)/2,g=n+(c-f*l)/2;g<=s;){for(var y=i+d;y<=a;){var w=(0,B.zx)([g,y],t.properties);t.mask?u(w,t.mask)&&o.push(w):o.push(w),y+=h}g+=l}return(0,B.Lr)(o)}(0,Object.defineProperty)(E,"name",{value:"pointGrid",configurable:!0})}}]);