(self.webpackChunkturf_www=self.webpackChunkturf_www||[]).push([[84709],{76103:(e,r,t)=>{"use strict";t.r(r),t.d(r,{Map0:()=>h,assets:()=>p,contentTitle:()=>u,default:()=>m,frontMatter:()=>c,metadata:()=>d,toc:()=>f});var n=t(74848),o=t(28453),i=t(67149),s=t(72505),a=t(36145),l=t(78478);const c={title:"rewind"},u=void 0,d={id:"api/rewind",title:"rewind",description:"Description",source:"@site/versioned_docs/version-7.0.0/api/rewind.mdx",sourceDirName:"api",slug:"/api/rewind",permalink:"/docs/api/rewind",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-7.0.0/api/rewind.mdx",tags:[],version:"7.0.0",frontMatter:{title:"rewind"},sidebar:"apiSidebar",previous:{title:"flip",permalink:"/docs/api/flip"},next:{title:"round",permalink:"/docs/api/round"}},p={},f=[{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3},{value:"Installation",id:"installation",level:3}];function h(){var e=i.n1([[[121,-29],[138,-29],[138,-18],[121,-18],[121,-29]]]),r={rewind:s.K(e)};return(0,n.jsx)(a.A,{addToMap:r})}function y(e){const r={a:"a",code:"code",em:"em",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h3,{id:"description",children:"Description"}),"\n",(0,n.jsxs)(r.p,{children:["Rewind ",(0,n.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.4",children:"(Multi)LineString"})," or ",(0,n.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946#section-3.1.6",children:"(Multi)Polygon"})," outer ring counterclockwise and inner rings clockwise (Uses ",(0,n.jsx)(r.a,{href:"http://en.wikipedia.org/wiki/Shoelace_formula",children:"Shoelace Formula"}),")."]}),"\n",(0,n.jsx)(r.h3,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Name"}),(0,n.jsx)(r.th,{children:"Type"}),(0,n.jsx)(r.th,{children:"Description"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"geojson"}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.strong,{children:(0,n.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946#section-3",children:"GeoJSON"})})}),(0,n.jsx)(r.td,{children:"input GeoJSON Polygon"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsxs)(r.td,{children:["options",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.strong,{children:"Object"})}),(0,n.jsxs)(r.td,{children:["Optional parameters ",(0,n.jsx)(r.em,{children:"(default {})"})]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsxs)(r.td,{children:["options.reverse",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.strong,{children:"boolean"})}),(0,n.jsxs)(r.td,{children:["enable reverse winding ",(0,n.jsx)(r.em,{children:"(default false)"})]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsxs)(r.td,{children:["options.mutate",(0,n.jsx)("i",{children:"?"})]}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.strong,{children:"boolean"})}),(0,n.jsxs)(r.td,{children:["allows GeoJSON input to be mutated (significant performance increase if true) ",(0,n.jsx)(r.em,{children:"(default false)"})]})]})]})]}),"\n",(0,n.jsx)(r.h3,{id:"returns",children:"Returns"}),"\n",(0,n.jsx)("ul",{children:(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:(0,n.jsx)(r.a,{href:"https://tools.ietf.org/html/rfc7946#section-3",children:"GeoJSON"})})," rewind Polygon"]})}),"\n",(0,n.jsx)(r.h3,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-javascript",children:"var polygon = turf.polygon([\n  [\n    [121, -29],\n    [138, -29],\n    [138, -18],\n    [121, -18],\n    [121, -29],\n  ],\n]);\n\nvar rewind = turf.rewind(polygon);\n"})}),"\n","\n",(0,n.jsx)(l.A,{children:()=>(0,n.jsx)(h,{})}),"\n",(0,n.jsx)(r.h3,{id:"installation",children:"Installation"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-javascript",children:'$ npm install @turf/rewind\n\nimport { rewind } from "@turf/rewind";\nconst result = rewind(...);\n'})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-javascript",children:'$ npm install @turf/turf\n\nimport * as turf from "@turf/turf";\nconst result = turf.rewind(...);\n'})})]})}function m(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(y,{...e})}):y(e)}},42634:()=>{},53257:(e,r,t)=>{"use strict";t.d(r,{Rd:()=>a,o8:()=>i});var n=Object.defineProperty,o=(e,r)=>n(e,"name",{value:r,configurable:!0});function i(e){if(!e)throw new Error("geojson is required");switch(e.type){case"Feature":return s(e);case"FeatureCollection":return l(e);case"Point":case"LineString":case"Polygon":case"MultiPoint":case"MultiLineString":case"MultiPolygon":case"GeometryCollection":return c(e);default:throw new Error("unknown GeoJSON type")}}function s(e){const r={type:"Feature"};return Object.keys(e).forEach((t=>{switch(t){case"type":case"properties":case"geometry":return;default:r[t]=e[t]}})),r.properties=a(e.properties),null==e.geometry?r.geometry=null:r.geometry=c(e.geometry),r}function a(e){const r={};return e?(Object.keys(e).forEach((t=>{const n=e[t];"object"==typeof n?null===n?r[t]=null:Array.isArray(n)?r[t]=n.map((e=>e)):r[t]=a(n):r[t]=n})),r):r}function l(e){const r={type:"FeatureCollection"};return Object.keys(e).forEach((t=>{switch(t){case"type":case"features":return;default:r[t]=e[t]}})),r.features=e.features.map((e=>s(e))),r}function c(e){const r={type:e.type};return e.bbox&&(r.bbox=e.bbox),"GeometryCollection"===e.type?(r.geometries=e.geometries.map((e=>c(e))),r):(r.coordinates=u(e.coordinates),r)}function u(e){const r=e;return"object"!=typeof r[0]?r.slice():r.map((e=>u(e)))}o(i,"clone"),o(s,"cloneFeature"),o(a,"cloneProperties"),o(l,"cloneFeatureCollection"),o(c,"cloneGeometry"),o(u,"deepSlice")},83490:(e,r,t)=>{"use strict";t.d(r,{$R:()=>a,Pw:()=>d,bg:()=>u,iw:()=>c,mo:()=>l,uG:()=>s});var n=t(67149),o=Object.defineProperty,i=(e,r)=>o(e,"name",{value:r,configurable:!0});function s(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return[...e.geometry.coordinates];if("Point"===e.type)return[...e.coordinates]}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return[...e];throw new Error("coord must be GeoJSON Point or an Array of numbers")}function a(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function l(e,r,t){if(!e)throw new Error("No feature passed");if(!t)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!e.geometry||e.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.geometry.type)}function c(e,r,t){if(!e)throw new Error("No featureCollection passed");if(!t)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+t+", FeatureCollection required");for(const n of e.features){if(!n||"Feature"!==n.type||!n.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!n.geometry||n.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+n.geometry.type)}}function u(e){return"Feature"===e.type?e.geometry:e}function d(e,r){return"FeatureCollection"===e.type?"FeatureCollection":"GeometryCollection"===e.type?"GeometryCollection":"Feature"===e.type&&null!==e.geometry?e.geometry.type:e.type}i(s,"getCoord"),i(a,"getCoords"),i((function e(r){if(r.length>1&&(0,n.Et)(r[0])&&(0,n.Et)(r[1]))return!0;if(Array.isArray(r[0])&&r[0].length)return e(r[0]);throw new Error("coordinates must only contain numbers")}),"containsNumber"),i((function(e,r,t){if(!r||!t)throw new Error("type and name required");if(!e||e.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.type)}),"geojsonType"),i(l,"featureOf"),i(c,"collectionOf"),i(u,"getGeom"),i(d,"getType")},72505:(e,r,t)=>{"use strict";t.d(r,{K:()=>u});var n=t(53257),o=t(83490);function i(e){const r=(0,o.$R)(e);let t,n,i=0,s=1;for(;s<r.length;)t=n||r[0],n=r[s],i+=(n[0]-t[0])*(n[1]+t[1]),s++;return i>0}(0,Object.defineProperty)(i,"name",{value:"booleanClockwise",configurable:!0});var s=t(63399),a=t(67149),l=Object.defineProperty,c=(e,r)=>l(e,"name",{value:r,configurable:!0});function u(e,r={}){var t,o;if(r=r||{},!(0,a.Gv)(r))throw new Error("options is invalid");const i=null!=(t=r.mutate)&&t,l=null!=(o=r.reverse)&&o;if(!e)throw new Error("<geojson> is required");if("boolean"!=typeof l)throw new Error("<reverse> must be a boolean");if("boolean"!=typeof i)throw new Error("<mutate> must be a boolean");i||"Point"===e.type||"MultiPoint"===e.type||(e=(0,n.o8)(e));const c=[];switch(e.type){case"GeometryCollection":return(0,s.kX)(e,(function(e){d(e,l)})),e;case"FeatureCollection":return(0,s.us)(e,(function(e){const r=d(e,l);(0,s.us)(r,(function(e){c.push(e)}))})),(0,a.Lr)(c)}return d(e,l)}function d(e,r){switch("Feature"===e.type?e.geometry.type:e.type){case"GeometryCollection":return(0,s.kX)(e,(function(e){d(e,r)})),e;case"LineString":return p((0,o.$R)(e),r),e;case"Polygon":return f((0,o.$R)(e),r),e;case"MultiLineString":return(0,o.$R)(e).forEach((function(e){p(e,r)})),e;case"MultiPolygon":return(0,o.$R)(e).forEach((function(e){f(e,r)})),e;case"Point":case"MultiPoint":return e}}function p(e,r){i(e)===r&&e.reverse()}function f(e,r){i(e[0])!==r&&e[0].reverse();for(let t=1;t<e.length;t++)i(e[t])===r&&e[t].reverse()}c(u,"rewind"),c(d,"rewindFeature"),c(p,"rewindLineString"),c(f,"rewindPolygon")}}]);